/*
 * Generated OpenAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.ubiquia.acl.generated;


import com.fasterxml.jackson.annotation.*;
import jakarta.validation.Valid;
import jakarta.validation.constraints.DecimalMin;
import java.util.Objects;

/**
 * The model of an animal.
 */
@JsonPropertyOrder({
    Animal.JSON_PROPERTY_COLOR,
    Animal.JSON_PROPERTY_OWNER,
    Animal.JSON_PROPERTY_NAME,
    Animal.JSON_PROPERTY_HEIGHT,
    Animal.JSON_PROPERTY_WEIGHT
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-06-18T01:59:17.081296200Z[UTC]", comments = "Generator version: 7.13.0")
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "modelType", visible = true)
@JsonSubTypes({
    @JsonSubTypes.Type(value = Cat.class, name = "Cat"),
    @JsonSubTypes.Type(value = Dachschund.class, name = "Dachschund"),
    @JsonSubTypes.Type(value = Dog.class, name = "Dog"),
    @JsonSubTypes.Type(value = Poodle.class, name = "Poodle"),
    @JsonSubTypes.Type(value = Shark.class, name = "Shark"),
})

public class Animal extends BaseModel {
    public static final String JSON_PROPERTY_COLOR = "color";
    public static final String JSON_PROPERTY_OWNER = "owner";
    public static final String JSON_PROPERTY_NAME = "name";
    public static final String JSON_PROPERTY_HEIGHT = "height";
    public static final String JSON_PROPERTY_WEIGHT = "weight";
    @jakarta.annotation.Nullable
    protected ColorType color;
    @jakarta.annotation.Nullable
    protected Person owner;
    @jakarta.annotation.Nullable
    protected Name name;
    @jakarta.annotation.Nullable
    protected Float height;
    @jakarta.annotation.Nullable
    protected Float weight;

    /**
     * Get color
     *
     * @return color
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_COLOR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public ColorType getColor() {
        return color;
    }


    @JsonProperty(JSON_PROPERTY_COLOR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setColor(@jakarta.annotation.Nullable ColorType color) {
        this.color = color;
    }

    public Animal owner(@jakarta.annotation.Nullable Person owner) {

        this.owner = owner;
        return this;
    }

    /**
     * Get owner
     *
     * @return owner
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_OWNER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Person getOwner() {
        return owner;
    }


    @JsonProperty(JSON_PROPERTY_OWNER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setOwner(@jakarta.annotation.Nullable Person owner) {
        this.owner = owner;
    }

    public Animal name(@jakarta.annotation.Nullable Name name) {

        this.name = name;
        return this;
    }

    /**
     * Get name
     *
     * @return name
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Name getName() {
        return name;
    }


    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setName(@jakarta.annotation.Nullable Name name) {
        this.name = name;
    }

    public Animal height(@jakarta.annotation.Nullable Float height) {

        this.height = height;
        return this;
    }

    /**
     * Get height
     * minimum: 0
     *
     * @return height
     */
    @jakarta.annotation.Nullable
    @DecimalMin("0")
    @JsonProperty(JSON_PROPERTY_HEIGHT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Float getHeight() {
        return height;
    }


    @JsonProperty(JSON_PROPERTY_HEIGHT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setHeight(@jakarta.annotation.Nullable Float height) {
        this.height = height;
    }

    public Animal weight(@jakarta.annotation.Nullable Float weight) {

        this.weight = weight;
        return this;
    }

    /**
     * Get weight
     * minimum: 0
     *
     * @return weight
     */
    @jakarta.annotation.Nullable
    @DecimalMin("0")
    @JsonProperty(JSON_PROPERTY_WEIGHT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Float getWeight() {
        return weight;
    }


    @JsonProperty(JSON_PROPERTY_WEIGHT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setWeight(@jakarta.annotation.Nullable Float weight) {
        this.weight = weight;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Animal animal = (Animal) o;
        return Objects.equals(this.color, animal.color) &&
            Objects.equals(this.owner, animal.owner) &&
            Objects.equals(this.name, animal.name) &&
            Objects.equals(this.height, animal.height) &&
            Objects.equals(this.weight, animal.weight) &&
            super.equals(o);
    }

    @Override
    public int hashCode() {
        return Objects.hash(color, owner, name, height, weight, super.hashCode());
    }

    @Override
    public String toString() {
        String sb = "class AnimalDto {\n" +
            "    " + toIndentedString(super.toString()) + "\n" +
            "    color: " + toIndentedString(color) + "\n" +
            "    owner: " + toIndentedString(owner) + "\n" +
            "    name: " + toIndentedString(name) + "\n" +
            "    height: " + toIndentedString(height) + "\n" +
            "    weight: " + toIndentedString(weight) + "\n" +
            "}";
        return sb;
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    @Override
    public String getModelType() {
        return "Animal";
    }


}
