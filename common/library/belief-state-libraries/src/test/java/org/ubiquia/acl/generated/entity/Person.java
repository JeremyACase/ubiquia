/*
 * Generated OpenAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.ubiquia.acl.generated.entity;


import com.fasterxml.jackson.annotation.*;
import jakarta.persistence.*;
import jakarta.validation.Valid;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import org.ubiquia.acl.generated.enums.ColorType;

/**
 * A model of a person.
 */
@JsonPropertyOrder({
    Person.JSON_PROPERTY_HAIR_COLOR,
    Person.JSON_PROPERTY_NAME,
    Person.JSON_PROPERTY_PETS
})
@jakarta.annotation.Generated(value = "org.ubiquia.core.belief.state.generator.service.generator.acl.UbiquiaAclEntityCodegen", date = "2025-06-18T01:59:36.137342500Z[UTC]", comments = "Generator version: 7.13.0")
@JsonIgnoreProperties(
    value = "modelType", // ignore manually set modelType, it will be automatically generated by Jackson during serialization
    allowSetters = true // allows the modelType to be set during deserialization
)
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "modelType", visible = true)

@Entity
public class Person extends BaseModel {
    public static final String JSON_PROPERTY_HAIR_COLOR = "hairColor";
    public static final String JSON_PROPERTY_NAME = "name";
    public static final String JSON_PROPERTY_PETS = "pets";
    @jakarta.annotation.Nullable


    private ColorType hairColor;
    @jakarta.annotation.Nullable
    @OneToOne(cascade = CascadeType.ALL)
    @JoinColumn(name = "name_id")


    private Name name;
    @jakarta.annotation.Nullable


    @OneToMany(mappedBy = "owner", cascade = CascadeType.ALL)

    private List<@Valid Animal> pets = new ArrayList<>();

    public Person() {

    }

    public Person hairColor(@jakarta.annotation.Nullable ColorType hairColor) {

        this.hairColor = hairColor;
        return this;
    }

    /**
     * Get hairColor
     *
     * @return hairColor
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_HAIR_COLOR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public ColorType getHairColor() {
        return hairColor;
    }


    @JsonProperty(JSON_PROPERTY_HAIR_COLOR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setHairColor(@jakarta.annotation.Nullable ColorType hairColor) {
        this.hairColor = hairColor;
    }

    public Person name(@jakarta.annotation.Nullable Name name) {

        this.name = name;
        return this;
    }

    /**
     * Get name
     *
     * @return name
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Name getName() {
        return name;
    }


    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setName(@jakarta.annotation.Nullable Name name) {
        this.name = name;
    }

    public Person pets(@jakarta.annotation.Nullable List<@Valid Animal> pets) {

        this.pets = pets;
        return this;
    }

    public Person addPetsItem(Animal petsItem) {
        if (this.pets == null) {
            this.pets = new ArrayList<>();
        }
        this.pets.add(petsItem);
        return this;
    }

    /**
     * Get pets
     *
     * @return pets
     */
    @jakarta.annotation.Nullable
    @Valid

    @JsonProperty(JSON_PROPERTY_PETS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<@Valid Animal> getPets() {
        return pets;
    }


    @JsonProperty(JSON_PROPERTY_PETS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPets(@jakarta.annotation.Nullable List<@Valid Animal> pets) {
        this.pets = pets;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Person person = (Person) o;
        return Objects.equals(this.hairColor, person.hairColor) &&
            Objects.equals(this.name, person.name) &&
            Objects.equals(this.pets, person.pets) &&
            super.equals(o);
    }

    @Override
    public int hashCode() {
        return Objects.hash(hairColor, name, pets, super.hashCode());
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Person {\n");
        sb.append("    ").append(toIndentedString(super.toString())).append("\n");
        sb.append("    hairColor: ").append(toIndentedString(hairColor)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    pets: ").append(toIndentedString(pets)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    @Override
    public String getModelType() {
        return "Person";
    }

}
