package org.ubiquia.common.model.ubiquia.entity;


import jakarta.persistence.*;
import jakarta.validation.constraints.NotNull;
import java.time.OffsetDateTime;
import java.util.List;
import java.util.Set;
import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.annotations.UpdateTimestamp;

/**
 * A model representing a single Ubiquia agent; installed via Helm. It does NOT inherit from
 * AbstractEntity because said class assumes the automatic generation of a UUID via Hibernate.
 * Instead, a Ubiquia Agent will get an ID injected via Helm (or, more-technically, a K8s
 * configmap.) Therefore, the ID should not be generated by Hibernate.
 */
@Entity
public class UbiquiaAgentEntity {

    @Id
    private String id = null;

    @Transient
    private String modelType = "UbiquiaAgent";

    @OneToMany(mappedBy = "ubiquiaAgent", fetch = FetchType.LAZY, cascade = CascadeType.REFRESH)
    private Set<ObjectMetadataEntity> objectMetadata;

    @CreationTimestamp
    @Column(updatable = false)
    private OffsetDateTime createdAt = null;

    @UpdateTimestamp
    private OffsetDateTime updatedAt = null;

    @ManyToMany(fetch = FetchType.LAZY, cascade = CascadeType.REFRESH)
    @JoinTable(
        name = "ubiquia_agent_deployed_graphs",
        joinColumns = @JoinColumn(name = "ubiquia_agent_id"),
        inverseJoinColumns = @JoinColumn(name = "graph_id")
    )
    private List<GraphEntity> deployedGraphs;

    @NotNull
    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public OffsetDateTime getCreatedAt() {
        return createdAt;
    }

    public void setCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
    }

    public OffsetDateTime getUpdatedAt() {
        return updatedAt;
    }

    public void setUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    @NotNull
    public List<GraphEntity> getDeployedGraphs() {
        return deployedGraphs;
    }

    public void setDeployedGraphs(List<GraphEntity> deployedGraphs) {
        this.deployedGraphs = deployedGraphs;
    }

    public String getModelType() {
        return modelType;
    }

    public Set<ObjectMetadataEntity> getObjectMetadata() {
        return objectMetadata;
    }

    public void setObjectMetadata(Set<ObjectMetadataEntity> objectMetadata) {
        this.objectMetadata = objectMetadata;
    }
}
