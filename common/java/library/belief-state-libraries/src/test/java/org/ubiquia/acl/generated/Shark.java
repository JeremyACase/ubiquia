/*
 * Generated OpenAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.ubiquia.acl.generated;


import com.fasterxml.jackson.annotation.*;
import jakarta.validation.Valid;
import jakarta.validation.constraints.DecimalMin;
import java.math.BigDecimal;
import java.util.Objects;

/**
 * The model of a shark.
 */
@JsonPropertyOrder({
    Shark.JSON_PROPERTY_PEOPLE_BITTEN,
    Shark.JSON_PROPERTY_FRIENDLY
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-06-18T01:59:17.081296200Z[UTC]", comments = "Generator version: 7.13.0")
@JsonIgnoreProperties(
    value = "modelType", // ignore manually set modelType, it will be automatically generated by Jackson during serialization
    allowSetters = true // allows the modelType to be set during deserialization
)
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "modelType", visible = true)

public class Shark extends Animal {
    public static final String JSON_PROPERTY_PEOPLE_BITTEN = "peopleBitten";
    public static final String JSON_PROPERTY_FRIENDLY = "friendly";
    @jakarta.annotation.Nullable
    private BigDecimal peopleBitten = new BigDecimal("0");
    @jakarta.annotation.Nullable
    private Boolean friendly = true;


    public Shark peopleBitten(@jakarta.annotation.Nullable BigDecimal peopleBitten) {

        this.peopleBitten = peopleBitten;
        return this;
    }

    /**
     * Get peopleBitten
     * minimum: 0
     *
     * @return peopleBitten
     */
    @jakarta.annotation.Nullable
    @Valid
    @DecimalMin("0")
    @JsonProperty(JSON_PROPERTY_PEOPLE_BITTEN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getPeopleBitten() {
        return peopleBitten;
    }


    @JsonProperty(JSON_PROPERTY_PEOPLE_BITTEN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPeopleBitten(@jakarta.annotation.Nullable BigDecimal peopleBitten) {
        this.peopleBitten = peopleBitten;
    }

    public Shark friendly(@jakarta.annotation.Nullable Boolean friendly) {

        this.friendly = friendly;
        return this;
    }

    /**
     * Get friendly
     *
     * @return friendly
     */
    @jakarta.annotation.Nullable

    @JsonProperty(JSON_PROPERTY_FRIENDLY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getFriendly() {
        return friendly;
    }


    @JsonProperty(JSON_PROPERTY_FRIENDLY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFriendly(@jakarta.annotation.Nullable Boolean friendly) {
        this.friendly = friendly;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Shark sharkDto = (Shark) o;
        return Objects.equals(this.peopleBitten, sharkDto.peopleBitten) &&
            Objects.equals(this.friendly, sharkDto.friendly) &&
            super.equals(o);
    }

    @Override
    public int hashCode() {
        return Objects.hash(peopleBitten, friendly, super.hashCode());
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class SharkDto {\n");
        sb.append("    ").append(toIndentedString(super.toString())).append("\n");
        sb.append("    peopleBitten: ").append(toIndentedString(peopleBitten)).append("\n");
        sb.append("    friendly: ").append(toIndentedString(friendly)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    @Override
    public String getModelType() {
        return "Shark";
    }


}
