name: Build Pipeline

on:
  push:
    branches:
      - main  # Trigger on push to the main branch
    tags:
      - 'v*'  # Trigger on tag push (e.g., v1.0.0)

env:
  DOCKER_REGISTRY: docker.io
  DOCKER_REPO: ubiquia
  SUBPROJECTS: "core/service/belief-state-generator-service core/service/communication-service core/service/flow-service "

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup permissions
        run: chmod +x ./gradlew

      - name: Build
        run: ./gradlew clean build

      - name: Upload subproject jars
        uses: actions/upload-artifact@v4
        with:
          name: jars
          path: |
            core/service/communication-service/build/libs/*.jar
            core/service/flow-service/build/libs/*.jar

  containerize-and-publish:
    needs: [build]  
    runs-on: ubuntu-latest

    steps:

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download JAR artifacts
        uses: actions/download-artifact@v4
        with:
          name: jars
          path: .

      - name: Move JARs into subproject directories
        run: |
          for dir in $SUBPROJECTS; do
            base=$(basename $dir)
            jar=$(find . -name "*${base}*.jar" | head -n 1)
            if [[ -f "$jar" ]]; then
              echo "Copying $jar to $dir"
              mkdir -p "$dir/build/libs"
              cp "$jar" "$dir/build/libs"
            else
              echo "No JAR found for $base"
              exit 1
            fi
          done

      - name: Determine image tag
        id: image_tag
        run: |
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            echo "IMAGE_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          else
            echo "IMAGE_TAG=latest" >> $GITHUB_ENV
          fi

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker images for each subproject
        run: |
          for dir in $SUBPROJECTS; do
            project_name=core-$(basename $dir)
            IMAGE_NAME=${DOCKER_REGISTRY}/${DOCKER_REPO}/${project_name}
            echo "Building image for $dir -> $IMAGE_NAME:${IMAGE_TAG}"
            docker build -t $IMAGE_NAME:${IMAGE_TAG} ./$dir
            docker push $IMAGE_NAME:${IMAGE_TAG}

            # Optionally tag as latest if it's a versioned tag
            if [[ "${IMAGE_TAG}" != "latest" ]]; then
              docker tag $IMAGE_NAME:${IMAGE_TAG} $IMAGE_NAME:latest
              docker push $IMAGE_NAME:latest
            fi
          done
