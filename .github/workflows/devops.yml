name: Build and Publish

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

env:
  DOCKER_REGISTRY: docker.io
  DOCKER_REPO: ubiquia
  SUBPROJECTS: |
    core/service/belief-state-generator-service
    core/service/communication-service
    core/service/flow-service
    test/service/belief-state-generator-service-test

jobs:

  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set Gradle permissions
        run: chmod +x ./gradlew

      - name: Load OPENJDK_VERSION from gradle.properties
        run: |
          export OPENJDK_VERSION=$(grep '^OPENJDK_VERSION=' gradle.properties | cut -d'=' -f2)
          echo "OPENJDK_VERSION=$OPENJDK_VERSION" >> $GITHUB_ENV

      - name: Determine image tag
        id: image_tag
        run: |
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            echo "IMAGE_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          else
            echo "IMAGE_TAG=latest" >> $GITHUB_ENV
          fi

      - name: Build all JARs
        run: ./gradlew clean build

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker images for each subproject
        run: |
          IFS=$'\n'
          for dir in $SUBPROJECTS; do
            project_name=core-$(basename $dir)
            IMAGE_NAME=${DOCKER_REGISTRY}/${DOCKER_REPO}/${project_name}
            echo "Building image for $dir -> $IMAGE_NAME:${IMAGE_TAG}"

            docker build \
              --build-arg OPENJDK_VERSION=${OPENJDK_VERSION} \
              -t $IMAGE_NAME:${IMAGE_TAG} $dir

            docker push $IMAGE_NAME:${IMAGE_TAG}

            if [[ "${IMAGE_TAG}" != "latest" ]]; then
              docker tag $IMAGE_NAME:${IMAGE_TAG} $IMAGE_NAME:latest
              docker push $IMAGE_NAME:latest
            fi
          done
