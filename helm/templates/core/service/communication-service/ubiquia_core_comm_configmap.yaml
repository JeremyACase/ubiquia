apiVersion: v1
kind: ConfigMap
metadata:
  name: ubiquia-core-communication-config
data:
  application.yaml: |

    # Just some fancy way to generate a UUID and stuff it in a configmap should this agent not be assigned an ID yet
    {{- $uuidCM := lookup "v1" "ConfigMap" .Release.Namespace (printf "%s-uuid" .Release.Name) -}}
    {{- $uuid := "" -}}
    {{- if $uuidCM -}}
      {{- $uuid = index $uuidCM.data "uuid" -}}
    {{- else -}}
      {{- $uuid = include "ubiquia.generate.uuid" . -}}
    {{- end }}

    logging:
      level:
        org.ubiquia: {{ .Values.logging.ubiquia }}

    management:
      endpoint:
        info:
          enabled: true
          java:
            enabled: true
          build:
            enabled: true
          health:
            probes:
              enabled: true
            show-components: always
            show-details: always
          prometheus:
            enabled: true
      endpoints:
        web:
          exposure:
            include: info, prometheus, health
      metrics:
        tags:
          application: ${spring.application.name}

    spring:
      server:
      port: {{ .Values.convenience.variables.spring.port }}

      application:
        name: communication-service
      jackson:
        date-format: "yyyy-MM-dd'T'HH:mm:ss.SSSSSS'Z'"

    springdoc:
      swagger-ui:
        path: {{ .Values.convenience.variables.spring.swaggerDocs }}
        enabled: true

    ubiquia:
      agent:
        id: {{ $uuid }}
      flow:
        service:
          pollFrequencyMilliseconds: 5000
          port: 8080
          url: http://ubiquia-core-flow-service