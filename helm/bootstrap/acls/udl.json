{
  "domain": "udl",
  "version": {
    "major": 1,
    "minor": 2,
    "patch": 3
  },
  "modelType": "AgentCommunicationLanguage",
  "jsonSchema": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "definitions": {
      "POST_udl_collectrequest": {
        "required": [
          "classificationMarking",
          "dataMode",
          "source",
          "startTime",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "description": "Unique identifier of the record, auto-generated by the system."
          },
          "classificationMarking": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format."
          },
          "idParentReq": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "The unique ID of the collect request record from which this request originated. This may be used for cases of sensor-to-sensor tasking, such as tip/cue operations."
          },
          "msgType": {
            "maxLength": 16,
            "minLength": 0,
            "type": "string",
            "description": "The type of external message from which this request originated."
          },
          "msgCreateDate": {
            "type": "string",
            "description": "The timestamp of the external message from which this request originated, if applicable, in ISO8601 UTC format with millisecond precision.",
            "format": "date-time"
          },
          "type": {
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "description": "The type of this collect or contact request (DIRECTED SEARCH, DWELL, OBJECT, POL, RATE TRACK, SEARCH, SOI, STARE, TTC, VOLUME SEARCH, etc.)."
          },
          "idPlan": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Unique identifier of the parent plan or schedule associated with this request.  If null, this request is assumed not associated with a plan or schedule."
          },
          "planIndex": {
            "type": "integer",
            "description": "Index number (integer) for records within a collection plan or schedule.",
            "format": "int32",
            "minimum": -2147483648,
            "maximum": 2147483647
          },
          "taskId": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Task ID associated with this request.  A task ID may be associated with a single collect request or may be used to tie together the sub-requests of a full collect, for example a DWELL consisting of many dwell points."
          },
          "dwellId": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "The dwell ID associated with this request.  A dwell ID is dwell point specific and a DWELL request consist of many dwell point requests."
          },
          "externalId": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Optional ID from external systems.  This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID."
          },
          "idSensor": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Unique identifier of the requested/scheduled/planned sensor associated with this request.  If both idSensor and origSensorId are null then the request is assumed to be a general request for observations or contact on an object, if specified, or an area/volume.  In this case, the requester may specify a desired obType."
          },
          "origSensorId": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "description": "Optional identifier provided by the source to indicate the sensor identifier requested/scheduled/planned for this request. This may be an internal identifier and not necessarily a valid sensor ID.  If both idSensor and origSensorId are null then the request is assumed to be a general request for observations or contact on an object, if specified, or an area/volume.  In this case, the requester may specify a desired obType."
          },
          "obType": {
            "maxLength": 24,
            "minLength": 0,
            "type": "string",
            "description": "Optional type of observation (EO, IR, RADAR, RF-ACTIVE, RF-PASSIVE, OTHER) requested.  This field may correspond to a request of a specific sensor, or to a general non sensor specific request."
          },
          "priority": {
            "maxLength": 24,
            "minLength": 0,
            "type": "string",
            "description": "The priority of the collect request  (EMERGENCY, FLASH, IMMEDIATE, PRIORITY, ROUTINE)."
          },
          "taskCategory": {
            "type": "integer",
            "description": "The (SSN) tasking category (1-5) associated with this request.  The tasking category defines the priority of gathering and transmitting the requested observational data.  Note that category definitions are sensor type specific.",
            "format": "int32",
            "minimum": -2147483648,
            "maximum": 2147483647
          },
          "suffix": {
            "maxLength": 1,
            "minLength": 0,
            "type": "string",
            "description": "The (SSN) tasking suffix (A-Z) associated with this request.  The suffix defines the amount of observational data and the frequency of collection.  Note that suffix definitions are sensor type specific."
          },
          "uctFollowUp": {
            "type": "boolean",
            "description": "Boolean indicating that this collect request is UCT follow-up."
          },
          "startTime": {
            "type": "string",
            "description": "The start time or earliest time of the collect or contact request window, in ISO 8601 UTC format.",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "description": "The end time of the collect or contact request window, in ISO 8601 UTC format.  If no endTime or duration is provided it is assumed the request is either ongoing or that the request is for a specified number of tracks (numTracks).  If both duration and endTime are provided, the endTime is assumed to take precedence.",
            "format": "date-time"
          },
          "satNo": {
            "type": "integer",
            "description": "Satellite/catalog number of the target on-orbit object for this request.",
            "format": "int32",
            "minimum": -2147483648,
            "maximum": 2147483647
          },
          "origObjectId": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Optional identifier provided by the data source to indicate the target object of this request. This may be an internal identifier and not necessarily map to a valid satellite number."
          },
          "taskGroup": {
            "maxLength": 16,
            "minLength": 0,
            "type": "string",
            "description": "The tasking group to which the target object is assigned."
          },
          "iron": {
            "type": "integer",
            "description": "Inter-Range Operations Number.  Four-digit identifier used to schedule and identify AFSCN contact support for booster, launch, and on-orbit operations.",
            "format": "int32",
            "minimum": -2147483648,
            "maximum": 2147483647
          },
          "orbitRegime": {
            "maxLength": 12,
            "minLength": 0,
            "type": "string",
            "description": "The orbit regime of the target (GEO, HEO, LAUNCH, LEO, MEO, OTHER)."
          },
          "targetSize": {
            "type": "number",
            "description": "The minimum object (diameter) size, in meters, to be reported.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "rcsMin": {
            "type": "number",
            "description": "The minimum Radar Cross-Section of the target, in m^2.  If only minimum RCS is provided it is assumed to be minimum reportable RCS.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "rcs": {
            "type": "number",
            "description": "The Radar Cross-Section of the target, in m^2.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "rcsMax": {
            "type": "number",
            "description": "The maximum Radar Cross-Section of the target, in m^2.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "freqMin": {
            "type": "number",
            "description": "The minimum frequency of interest, in MHz.  If only minimum frequency is provided it is assumed to be minimum reportable frequency.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "freq": {
            "type": "number",
            "description": "The estimated or expected emission frequency of the target, in MHz.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "freqMax": {
            "type": "number",
            "description": "The maximum frequency of interest, in MHz.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "polarization": {
            "maxLength": 4,
            "minLength": 0,
            "type": "string",
            "description": "The RF polarization (H, LHC, RHC, V)."
          },
          "visMagMin": {
            "type": "number",
            "description": "The minimum estimated or expected visual magnitude of the target, in Magnitudes (M).  If only minimum vismag is provided it is assumed to be minimum reportable vismag.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "visMag": {
            "type": "number",
            "description": "The estimated or expected visual magnitude of the target, in Magnitudes (M).",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "visMagMax": {
            "type": "number",
            "description": "The maximum estimated or expected visual magnitude of the target, in Magnitudes (M).",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "spectralModel": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "The spectral model used for the irradiance calculation."
          },
          "reflectance": {
            "type": "number",
            "description": "The fraction of solar energy reflected from target.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "irradiance": {
            "type": "number",
            "description": "The target object irradiance value.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "numFrames": {
            "type": "integer",
            "description": "For optical sensors, the requested number of frames to capture at each sensor step.",
            "format": "int32",
            "minimum": -2147483648,
            "maximum": 2147483647
          },
          "frameRate": {
            "type": "number",
            "description": "For optical sensors, the frame rate of the camera, in Hz.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "integrationTime": {
            "type": "number",
            "description": "For optical sensors, the integration time per camera frame, in milliseconds.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "numTracks": {
            "type": "integer",
            "description": "The number of requested tracks on the target.  If numTracks is not provided it is assumed to indicate all possible observations every pass over the request duration or within the request start/end window.",
            "format": "int32",
            "minimum": -2147483648,
            "maximum": 2147483647
          },
          "numObs": {
            "minimum": -2147483648,
            "type": "integer",
            "description": "The number of requested observations on the target.",
            "format": "int32",
            "maximum": 2147483647
          },
          "duration": {
            "type": "integer",
            "description": "The duration of the collect request, in seconds.  If both duration and endTime are provided, the endTime is assumed to take precedence.",
            "format": "int32",
            "minimum": -2147483648,
            "maximum": 2147483647
          },
          "srchPattern": {
            "maxLength": 24,
            "minLength": 0,
            "type": "string",
            "description": "The search pattern to be executed for this request (e.g. PICKET-FENCE, SCAN, etc.)."
          },
          "scenario": {
            "maxLength": 24,
            "minLength": 0,
            "type": "string",
            "description": "Pre-coordinated code, direction, or configuration to be executed by the sensor or site for this collect or contact."
          },
          "idElset": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "ID of the UDL Elset of the object associated with this request."
          },
          "idManifold": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "ID of the UDL Manifold Elset of the object associated with this request.  A Manifold Elset provides theoretical Keplerian orbital elements belonging to an object of interest's manifold describing a possible/theoretical orbit for an object of interest for tasking purposes."
          },
          "idStateVector": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "ID of the UDL State Vector of the object or central vector associated with this request."
          },
          "esId": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "ID of the UDL Ephemeris Set of the object associated with this request."
          },
          "epoch": {
            "type": "string",
            "description": "Epoch time, in ISO 8601 UTC format, of the orbital elements.",
            "format": "date-time"
          },
          "semiMajorAxis": {
            "type": "number",
            "description": "The average of the periapsis and apoapsis distances, in kilometers. For circular orbits, the semimajor axis is the distance between the centers of the bodies.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "eccentricity": {
            "type": "number",
            "description": "The orbital eccentricity of an astronomical object is a parameter that determines the amount by which its orbit around another body deviates from a perfect circle.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "inclination": {
            "type": "number",
            "description": "The angle, in degrees, between the equator and the orbit plane when looking from the center of the Earth. Inclination ranges from 0-180 degrees, with 0-90 representing posigrade orbits and 90-180 representing retrograde orbits.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "raan": {
            "type": "number",
            "description": "Right ascension of the ascending node, or RAAN is the angle as measured in degrees eastwards (or, as seen from the north, counterclockwise) from the First Point of Aries to the ascending node.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "argOfPerigee": {
            "type": "number",
            "description": "The argument of perigee is the angle, in degrees, formed between the perigee and the ascending node.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "trueAnomoly": {
            "type": "number",
            "description": "The true anomaly defines the angular position, in degrees, of the object on it's orbital path as measured from the orbit focal point at epoch.  The true anomaly is referenced from perigee.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "ra": {
            "type": "number",
            "description": "The expected or directed right ascension angle, in degrees, for search or target acquisition.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "dec": {
            "type": "number",
            "description": "The expected or directed declination angle, in degrees, for search or target acquisition.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "az": {
            "type": "number",
            "description": "The expected or directed azimuth angle, in degrees, for search or target acquisition.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "el": {
            "type": "number",
            "description": "The expected or directed elevation angle, in degrees, for search or target acquisition.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "range": {
            "type": "number",
            "description": "The expected acquisition range or defined center range, in km.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "extentAz": {
            "type": "number",
            "description": "The extent of the azimuth angle, in degrees, from center azimuth to define a spatial volume.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "extentEl": {
            "type": "number",
            "description": "The extent of the elevation angle, in degrees, from center elevation to define a spatial volume.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "extentRange": {
            "type": "number",
            "description": "The extent of the range, in km, from center range to define a spatial volume.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "lat": {
            "maximum": 1.7976931348623157e+308,
            "minimum": -1.7976931348623157e+308,
            "type": "number",
            "description": "WGS-84 latitude, in degrees. -90 to 90 degrees (negative values south of equator).  If an accompanying stopLat is provided, then the lat value can be assumed to be the starting latitude of a volume definition.",
            "format": "double"
          },
          "lon": {
            "maximum": 1.7976931348623157e+308,
            "minimum": -1.7976931348623157e+308,
            "type": "number",
            "description": "WGS-84 longitude, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).  If an accompanying stopLon is provided, then lon value can be assumed to be the starting longitude of a volume definition.",
            "format": "double"
          },
          "alt": {
            "type": "number",
            "description": "Height above WGS-84 ellipsoid (HAE), in kilometers.  If an accompanying stopAlt is provided, then alt value can be assumed to be the starting altitude of a volume definition.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "stopLat": {
            "maximum": 1.7976931348623157e+308,
            "minimum": -1.7976931348623157e+308,
            "type": "number",
            "description": "The stopping WGS-84 latitude of a volume definition, in degrees.  -90 to 90 degrees (negative values south of equator).  The stopLat value is only meaningful if a (starting) lat value is provided.",
            "format": "double"
          },
          "stopLon": {
            "maximum": 1.7976931348623157e+308,
            "minimum": -1.7976931348623157e+308,
            "type": "number",
            "description": "The stopping WGS-84 longitude of a volume definition, in degrees.  -180 to 180 degrees (negative values west of Prime Meridian).  The stopLon value is only meaningful if a (starting) lon value is provided.",
            "format": "double"
          },
          "stopAlt": {
            "type": "number",
            "description": "The stopping HAE WGS-84 height above ellipsoid (HAE), of a volume definition, in kilometers.  The stopAlt value is only meaningful if a (starting) alt value is provided.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "srchInc": {
            "type": "number",
            "description": "The maximum inclination, in degrees, to be used in search operations.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "xAngle": {
            "type": "number",
            "description": "The angular distance, in degrees, in the sensor-x direction from scan center defined by the central vector.  The specification of xAngle and yAngle defines a rectangle of width 2*xAngle and height 2*yAngle centered about the central vector.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "yAngle": {
            "type": "number",
            "description": "The angular distance, in degrees, in the sensor-y direction from scan center defined by the central vector.  The specification of xAngle and yAngle defines a rectangle of width 2*xAngle and height 2*yAngle centered about the central vector.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "orientAngle": {
            "type": "number",
            "description": "The magnitude of rotation, in degrees, between the xAngle direction and locally defined equinoctial plane.  A positive value indicates clockwise rotation about the sensor boresight vector.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "customer": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "description": "The customer for this request."
          },
          "notes": {
            "maxLength": 512,
            "minLength": 0,
            "type": "string",
            "description": "Notes or comments associated with this request."
          },
          "source": {
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "description": "Source of the data."
          },
          "origin": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin."
          },
          "dataMode": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ]
          }
        },
        "description": "Collect Requests support several types of individual requests, or planned/scheduled tasks on sensors and/or orbital objects. Options are provided to accomodate most common sensor contact and collection applications, including single sensor-object tasking, search operations, and TT&C support. Multiple requests originating from a plan or schedule may be associated to a sensor plan if desired."
      },
      "POST_udl_collectrequest_createBulk": {
        "required": [
          "classificationMarking",
          "dataMode",
          "source",
          "startTime",
          "type"
        ],
        "type": "object",
        "description": "Collect Requests support several types of individual requests, or planned/scheduled tasks on sensors and/or orbital objects. Options are provided to accomodate most common sensor contact and collection applications, including single sensor-object tasking, search operations, and TT&C support. Multiple requests originating from a plan or schedule may be associated to a sensor plan if desired.",
        "properties": {
          "id": {
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "description": "Unique identifier of the record, auto-generated by the system."
          },
          "classificationMarking": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format."
          },
          "idParentReq": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "The unique ID of the collect request record from which this request originated. This may be used for cases of sensor-to-sensor tasking, such as tip/cue operations."
          },
          "msgType": {
            "maxLength": 16,
            "minLength": 0,
            "type": "string",
            "description": "The type of external message from which this request originated."
          },
          "msgCreateDate": {
            "type": "string",
            "description": "The timestamp of the external message from which this request originated, if applicable, in ISO8601 UTC format with millisecond precision.",
            "format": "date-time"
          },
          "type": {
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "description": "The type of this collect or contact request (DIRECTED SEARCH, DWELL, OBJECT, POL, RATE TRACK, SEARCH, SOI, STARE, TTC, VOLUME SEARCH, etc.)."
          },
          "idPlan": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Unique identifier of the parent plan or schedule associated with this request.  If null, this request is assumed not associated with a plan or schedule."
          },
          "planIndex": {
            "type": "integer",
            "description": "Index number (integer) for records within a collection plan or schedule.",
            "format": "int32",
            "minimum": -2147483648,
            "maximum": 2147483647
          },
          "taskId": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Task ID associated with this request.  A task ID may be associated with a single collect request or may be used to tie together the sub-requests of a full collect, for example a DWELL consisting of many dwell points."
          },
          "dwellId": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "The dwell ID associated with this request.  A dwell ID is dwell point specific and a DWELL request consist of many dwell point requests."
          },
          "externalId": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Optional ID from external systems.  This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID."
          },
          "idSensor": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Unique identifier of the requested/scheduled/planned sensor associated with this request.  If both idSensor and origSensorId are null then the request is assumed to be a general request for observations or contact on an object, if specified, or an area/volume.  In this case, the requester may specify a desired obType."
          },
          "origSensorId": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "description": "Optional identifier provided by the source to indicate the sensor identifier requested/scheduled/planned for this request. This may be an internal identifier and not necessarily a valid sensor ID.  If both idSensor and origSensorId are null then the request is assumed to be a general request for observations or contact on an object, if specified, or an area/volume.  In this case, the requester may specify a desired obType."
          },
          "obType": {
            "maxLength": 24,
            "minLength": 0,
            "type": "string",
            "description": "Optional type of observation (EO, IR, RADAR, RF-ACTIVE, RF-PASSIVE, OTHER) requested.  This field may correspond to a request of a specific sensor, or to a general non sensor specific request."
          },
          "priority": {
            "maxLength": 24,
            "minLength": 0,
            "type": "string",
            "description": "The priority of the collect request  (EMERGENCY, FLASH, IMMEDIATE, PRIORITY, ROUTINE)."
          },
          "taskCategory": {
            "type": "integer",
            "description": "The (SSN) tasking category (1-5) associated with this request.  The tasking category defines the priority of gathering and transmitting the requested observational data.  Note that category definitions are sensor type specific.",
            "format": "int32",
            "minimum": -2147483648,
            "maximum": 2147483647
          },
          "suffix": {
            "maxLength": 1,
            "minLength": 0,
            "type": "string",
            "description": "The (SSN) tasking suffix (A-Z) associated with this request.  The suffix defines the amount of observational data and the frequency of collection.  Note that suffix definitions are sensor type specific."
          },
          "uctFollowUp": {
            "type": "boolean",
            "description": "Boolean indicating that this collect request is UCT follow-up."
          },
          "startTime": {
            "type": "string",
            "description": "The start time or earliest time of the collect or contact request window, in ISO 8601 UTC format.",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "description": "The end time of the collect or contact request window, in ISO 8601 UTC format.  If no endTime or duration is provided it is assumed the request is either ongoing or that the request is for a specified number of tracks (numTracks).  If both duration and endTime are provided, the endTime is assumed to take precedence.",
            "format": "date-time"
          },
          "satNo": {
            "type": "integer",
            "description": "Satellite/catalog number of the target on-orbit object for this request.",
            "format": "int32",
            "minimum": -2147483648,
            "maximum": 2147483647
          },
          "origObjectId": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Optional identifier provided by the data source to indicate the target object of this request. This may be an internal identifier and not necessarily map to a valid satellite number."
          },
          "taskGroup": {
            "maxLength": 16,
            "minLength": 0,
            "type": "string",
            "description": "The tasking group to which the target object is assigned."
          },
          "iron": {
            "type": "integer",
            "description": "Inter-Range Operations Number.  Four-digit identifier used to schedule and identify AFSCN contact support for booster, launch, and on-orbit operations.",
            "format": "int32",
            "minimum": -2147483648,
            "maximum": 2147483647
          },
          "orbitRegime": {
            "maxLength": 12,
            "minLength": 0,
            "type": "string",
            "description": "The orbit regime of the target (GEO, HEO, LAUNCH, LEO, MEO, OTHER)."
          },
          "targetSize": {
            "type": "number",
            "description": "The minimum object (diameter) size, in meters, to be reported.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "rcsMin": {
            "type": "number",
            "description": "The minimum Radar Cross-Section of the target, in m^2.  If only minimum RCS is provided it is assumed to be minimum reportable RCS.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "rcs": {
            "type": "number",
            "description": "The Radar Cross-Section of the target, in m^2.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "rcsMax": {
            "type": "number",
            "description": "The maximum Radar Cross-Section of the target, in m^2.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "freqMin": {
            "type": "number",
            "description": "The minimum frequency of interest, in MHz.  If only minimum frequency is provided it is assumed to be minimum reportable frequency.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "freq": {
            "type": "number",
            "description": "The estimated or expected emission frequency of the target, in MHz.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "freqMax": {
            "type": "number",
            "description": "The maximum frequency of interest, in MHz.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "polarization": {
            "maxLength": 4,
            "minLength": 0,
            "type": "string",
            "description": "The RF polarization (H, LHC, RHC, V)."
          },
          "visMagMin": {
            "type": "number",
            "description": "The minimum estimated or expected visual magnitude of the target, in Magnitudes (M).  If only minimum vismag is provided it is assumed to be minimum reportable vismag.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "visMag": {
            "type": "number",
            "description": "The estimated or expected visual magnitude of the target, in Magnitudes (M).",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "visMagMax": {
            "type": "number",
            "description": "The maximum estimated or expected visual magnitude of the target, in Magnitudes (M).",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "spectralModel": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "The spectral model used for the irradiance calculation."
          },
          "reflectance": {
            "type": "number",
            "description": "The fraction of solar energy reflected from target.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "irradiance": {
            "type": "number",
            "description": "The target object irradiance value.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "numFrames": {
            "type": "integer",
            "description": "For optical sensors, the requested number of frames to capture at each sensor step.",
            "format": "int32",
            "minimum": -2147483648,
            "maximum": 2147483647
          },
          "frameRate": {
            "type": "number",
            "description": "For optical sensors, the frame rate of the camera, in Hz.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "integrationTime": {
            "type": "number",
            "description": "For optical sensors, the integration time per camera frame, in milliseconds.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "numTracks": {
            "type": "integer",
            "description": "The number of requested tracks on the target.  If numTracks is not provided it is assumed to indicate all possible observations every pass over the request duration or within the request start/end window.",
            "format": "int32",
            "minimum": -2147483648,
            "maximum": 2147483647
          },
          "numObs": {
            "minimum": -2147483648,
            "type": "integer",
            "description": "The number of requested observations on the target.",
            "format": "int32",
            "maximum": 2147483647
          },
          "duration": {
            "type": "integer",
            "description": "The duration of the collect request, in seconds.  If both duration and endTime are provided, the endTime is assumed to take precedence.",
            "format": "int32",
            "minimum": -2147483648,
            "maximum": 2147483647
          },
          "srchPattern": {
            "maxLength": 24,
            "minLength": 0,
            "type": "string",
            "description": "The search pattern to be executed for this request (e.g. PICKET-FENCE, SCAN, etc.)."
          },
          "scenario": {
            "maxLength": 24,
            "minLength": 0,
            "type": "string",
            "description": "Pre-coordinated code, direction, or configuration to be executed by the sensor or site for this collect or contact."
          },
          "idElset": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "ID of the UDL Elset of the object associated with this request."
          },
          "idManifold": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "ID of the UDL Manifold Elset of the object associated with this request.  A Manifold Elset provides theoretical Keplerian orbital elements belonging to an object of interest's manifold describing a possible/theoretical orbit for an object of interest for tasking purposes."
          },
          "idStateVector": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "ID of the UDL State Vector of the object or central vector associated with this request."
          },
          "esId": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "ID of the UDL Ephemeris Set of the object associated with this request."
          },
          "epoch": {
            "type": "string",
            "description": "Epoch time, in ISO 8601 UTC format, of the orbital elements.",
            "format": "date-time"
          },
          "semiMajorAxis": {
            "type": "number",
            "description": "The average of the periapsis and apoapsis distances, in kilometers. For circular orbits, the semimajor axis is the distance between the centers of the bodies.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "eccentricity": {
            "type": "number",
            "description": "The orbital eccentricity of an astronomical object is a parameter that determines the amount by which its orbit around another body deviates from a perfect circle.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "inclination": {
            "type": "number",
            "description": "The angle, in degrees, between the equator and the orbit plane when looking from the center of the Earth. Inclination ranges from 0-180 degrees, with 0-90 representing posigrade orbits and 90-180 representing retrograde orbits.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "raan": {
            "type": "number",
            "description": "Right ascension of the ascending node, or RAAN is the angle as measured in degrees eastwards (or, as seen from the north, counterclockwise) from the First Point of Aries to the ascending node.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "argOfPerigee": {
            "type": "number",
            "description": "The argument of perigee is the angle, in degrees, formed between the perigee and the ascending node.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "trueAnomoly": {
            "type": "number",
            "description": "The true anomaly defines the angular position, in degrees, of the object on it's orbital path as measured from the orbit focal point at epoch.  The true anomaly is referenced from perigee.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "ra": {
            "type": "number",
            "description": "The expected or directed right ascension angle, in degrees, for search or target acquisition.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "dec": {
            "type": "number",
            "description": "The expected or directed declination angle, in degrees, for search or target acquisition.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "az": {
            "type": "number",
            "description": "The expected or directed azimuth angle, in degrees, for search or target acquisition.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "el": {
            "type": "number",
            "description": "The expected or directed elevation angle, in degrees, for search or target acquisition.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "range": {
            "type": "number",
            "description": "The expected acquisition range or defined center range, in km.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "extentAz": {
            "type": "number",
            "description": "The extent of the azimuth angle, in degrees, from center azimuth to define a spatial volume.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "extentEl": {
            "type": "number",
            "description": "The extent of the elevation angle, in degrees, from center elevation to define a spatial volume.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "extentRange": {
            "type": "number",
            "description": "The extent of the range, in km, from center range to define a spatial volume.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "lat": {
            "maximum": 1.7976931348623157e+308,
            "minimum": -1.7976931348623157e+308,
            "type": "number",
            "description": "WGS-84 latitude, in degrees. -90 to 90 degrees (negative values south of equator).  If an accompanying stopLat is provided, then the lat value can be assumed to be the starting latitude of a volume definition.",
            "format": "double"
          },
          "lon": {
            "maximum": 1.7976931348623157e+308,
            "minimum": -1.7976931348623157e+308,
            "type": "number",
            "description": "WGS-84 longitude, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).  If an accompanying stopLon is provided, then lon value can be assumed to be the starting longitude of a volume definition.",
            "format": "double"
          },
          "alt": {
            "type": "number",
            "description": "Height above WGS-84 ellipsoid (HAE), in kilometers.  If an accompanying stopAlt is provided, then alt value can be assumed to be the starting altitude of a volume definition.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "stopLat": {
            "maximum": 1.7976931348623157e+308,
            "minimum": -1.7976931348623157e+308,
            "type": "number",
            "description": "The stopping WGS-84 latitude of a volume definition, in degrees.  -90 to 90 degrees (negative values south of equator).  The stopLat value is only meaningful if a (starting) lat value is provided.",
            "format": "double"
          },
          "stopLon": {
            "maximum": 1.7976931348623157e+308,
            "minimum": -1.7976931348623157e+308,
            "type": "number",
            "description": "The stopping WGS-84 longitude of a volume definition, in degrees.  -180 to 180 degrees (negative values west of Prime Meridian).  The stopLon value is only meaningful if a (starting) lon value is provided.",
            "format": "double"
          },
          "stopAlt": {
            "type": "number",
            "description": "The stopping HAE WGS-84 height above ellipsoid (HAE), of a volume definition, in kilometers.  The stopAlt value is only meaningful if a (starting) alt value is provided.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "srchInc": {
            "type": "number",
            "description": "The maximum inclination, in degrees, to be used in search operations.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "xAngle": {
            "type": "number",
            "description": "The angular distance, in degrees, in the sensor-x direction from scan center defined by the central vector.  The specification of xAngle and yAngle defines a rectangle of width 2*xAngle and height 2*yAngle centered about the central vector.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "yAngle": {
            "type": "number",
            "description": "The angular distance, in degrees, in the sensor-y direction from scan center defined by the central vector.  The specification of xAngle and yAngle defines a rectangle of width 2*xAngle and height 2*yAngle centered about the central vector.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "orientAngle": {
            "type": "number",
            "description": "The magnitude of rotation, in degrees, between the xAngle direction and locally defined equinoctial plane.  A positive value indicates clockwise rotation about the sensor boresight vector.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "customer": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "description": "The customer for this request."
          },
          "notes": {
            "maxLength": 512,
            "minLength": 0,
            "type": "string",
            "description": "Notes or comments associated with this request."
          },
          "source": {
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "description": "Source of the data."
          },
          "origin": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin."
          },
          "dataMode": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ]
          }
        }
      },
      "POST_udl_collectresponse": {
        "required": [
          "classificationMarking",
          "dataMode",
          "idRequest",
          "source"
        ],
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "description": "Unique identifier of the record, auto-generated by the system."
          },
          "classificationMarking": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format."
          },
          "idRequest": {
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "description": "Unique identifier of the request associated with this response."
          },
          "origObjectId": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Optional identifier provided by data source to indicate the target object of this response. This may be an internal identifier and not necessarily a valid satellite number."
          },
          "satNo": {
            "type": "integer",
            "description": "Satellite/catalog number of the target on-orbit object.",
            "format": "int32",
            "minimum": -2147483648,
            "maximum": 2147483647
          },
          "taskId": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Optional task ID associated with the request/response."
          },
          "idPlan": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Unique identifier of the parent plan or schedule associated with the request/response."
          },
          "externalId": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "UUID from external systems.  This field has no meaning within UDL and is provided as a convenience for systems that require tracking of internal system generated ID."
          },
          "status": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "The status of the request (ACCEPTED, CANCELLED, COLLECTED, COMPLETED, DELIVERED, FAILED, PARTIAL, PROPOSED, REJECTED, SCHEDULED):\n\nACCEPTED: The collect or contact request has been received and accepted.\n\nCANCELLED: A previously scheduled collect or contact whose execution was cancelled.\n\nCOLLECTED: The collect has been accomplished. A collected state implies that additional activity is required for delivery/completion.\n\nCOMPLETED: The collect or contact has been completed. For many systems completed and delivered constitute an equivalent successful end state.\n\nDELIVERED: The collected observation(s) have been delivered to the requestor. For many systems completed and delivered constitute an equivalent successful end state. A DELIVERED state is typically used for systems that exhibit a delay between collect and delivery, such as with space-based systems which require ground contact to deliver observations.\n\nFAILED: The collect or contact was attempted and failed, or the delivery of the collected observation(s) failed. A FAILED status may be accompanied by an error code (errCode), if available.\n\nPARTIAL: A PARTIAL state indicates that a part of a multi-track request has been accomplished, but the full request is incomplete. A PARTIAL status should ultimately be resolved to an end state.\n\nPROPOSED: Indicates that the request was received and alternate collect or contact time(s) (altStartTime, altEndTime) have been proposed. If an alternate is accepted by the requestor the current request should be cancelled and a new request created.\n\nREJECTED: The request has been received and rejected by the provider. A REJECTED status may be accompanied by an explanation (notes) of the reason that the request was rejected.\n\nSCHEDULED: The request was received and has been scheduled for execution."
          },
          "actualStartTime": {
            "type": "string",
            "description": "The actual start time of the collect or contact, in ISO 8601 UTC format.",
            "format": "date-time"
          },
          "actualEndTime": {
            "type": "string",
            "description": "The actual end time of the collect or contact, in ISO 8601 UTC format.",
            "format": "date-time"
          },
          "altStartTime": {
            "type": "string",
            "description": "Proposed alternative start time, in ISO 8601 UTC format.",
            "format": "date-time"
          },
          "altEndTime": {
            "type": "string",
            "description": "Proposed alternative end time, in ISO 8601 UTC format.",
            "format": "date-time"
          },
          "errCode": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Error code associated with this request/response."
          },
          "srcTyps": {
            "type": "array",
            "description": "Array of UDL record type(s) (DOA, ELSET, EO, RADAR, RF, SV) collected or produced in response to the associated request.  See the associated 'srcIds' array for the record UUIDs, positionally corresponding to the record types in this array.  The 'srcTyps' and 'srcIds' arrays must match in size.  The appropriate API operation can be used to retrieve the specified object(s) (e.g. /udl/rfobservation/{uuid}).",
            "items": {
              "type": "string"
            }
          },
          "srcIds": {
            "type": "array",
            "description": "Array of UUIDs of the UDL data record(s) collected in response to the associated request.  See the associated 'srcTyps' array for the specific types of data, positionally corresponding to the UUIDs in this array.  The 'srcTyps' and 'srcIds' arrays must match in size.  The appropriate API operation can be used to retrieve the specified object(s) (e.g. /udl/rfobservation/{uuid}).",
            "items": {
              "type": "string"
            }
          },
          "notes": {
            "maxLength": 1024,
            "minLength": 0,
            "type": "string",
            "description": "Notes or comments associated with this response."
          },
          "source": {
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "description": "Source of the data."
          },
          "origin": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin."
          },
          "idSensor": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Unique identifier of the reporting sensor."
          },
          "origSensorId": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "description": "Optional identifier provided by the collection source to indicate the sensor identifier responding to this collect or contact. This may be an internal identifier and not necessarily a valid sensor ID."
          },
          "dataMode": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ]
          }
        },
        "description": "Collect response supports the response and status of individual collect requests. Each response is referenced by the UUID of the request, and contains information including the status of the request, collection times and types, and reference(s) to the observations collected. There may be multiple responses associated with a request, either from multiple collectors or to relay status changes prior to completion and delivery."
      },
      "POST_udl_collectresponse_createBulk": {
        "required": [
          "classificationMarking",
          "dataMode",
          "idRequest",
          "source"
        ],
        "type": "object",
        "description": "Collect response supports the response and status of individual collect requests. Each response is referenced by the UUID of the request, and contains information including the status of the request, collection times and types, and reference(s) to the observations collected. There may be multiple responses associated with a request, either from multiple collectors or to relay status changes prior to completion and delivery.",
        "properties": {
          "id": {
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "description": "Unique identifier of the record, auto-generated by the system."
          },
          "classificationMarking": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format."
          },
          "idRequest": {
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "description": "Unique identifier of the request associated with this response."
          },
          "origObjectId": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Optional identifier provided by data source to indicate the target object of this response. This may be an internal identifier and not necessarily a valid satellite number."
          },
          "satNo": {
            "type": "integer",
            "description": "Satellite/catalog number of the target on-orbit object.",
            "format": "int32",
            "minimum": -2147483648,
            "maximum": 2147483647
          },
          "taskId": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Optional task ID associated with the request/response."
          },
          "idPlan": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Unique identifier of the parent plan or schedule associated with the request/response."
          },
          "externalId": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "UUID from external systems.  This field has no meaning within UDL and is provided as a convenience for systems that require tracking of internal system generated ID."
          },
          "status": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "The status of the request (ACCEPTED, CANCELLED, COLLECTED, COMPLETED, DELIVERED, FAILED, PARTIAL, PROPOSED, REJECTED, SCHEDULED):\n\nACCEPTED: The collect or contact request has been received and accepted.\n\nCANCELLED: A previously scheduled collect or contact whose execution was cancelled.\n\nCOLLECTED: The collect has been accomplished. A collected state implies that additional activity is required for delivery/completion.\n\nCOMPLETED: The collect or contact has been completed. For many systems completed and delivered constitute an equivalent successful end state.\n\nDELIVERED: The collected observation(s) have been delivered to the requestor. For many systems completed and delivered constitute an equivalent successful end state. A DELIVERED state is typically used for systems that exhibit a delay between collect and delivery, such as with space-based systems which require ground contact to deliver observations.\n\nFAILED: The collect or contact was attempted and failed, or the delivery of the collected observation(s) failed. A FAILED status may be accompanied by an error code (errCode), if available.\n\nPARTIAL: A PARTIAL state indicates that a part of a multi-track request has been accomplished, but the full request is incomplete. A PARTIAL status should ultimately be resolved to an end state.\n\nPROPOSED: Indicates that the request was received and alternate collect or contact time(s) (altStartTime, altEndTime) have been proposed. If an alternate is accepted by the requestor the current request should be cancelled and a new request created.\n\nREJECTED: The request has been received and rejected by the provider. A REJECTED status may be accompanied by an explanation (notes) of the reason that the request was rejected.\n\nSCHEDULED: The request was received and has been scheduled for execution."
          },
          "actualStartTime": {
            "type": "string",
            "description": "The actual start time of the collect or contact, in ISO 8601 UTC format.",
            "format": "date-time"
          },
          "actualEndTime": {
            "type": "string",
            "description": "The actual end time of the collect or contact, in ISO 8601 UTC format.",
            "format": "date-time"
          },
          "altStartTime": {
            "type": "string",
            "description": "Proposed alternative start time, in ISO 8601 UTC format.",
            "format": "date-time"
          },
          "altEndTime": {
            "type": "string",
            "description": "Proposed alternative end time, in ISO 8601 UTC format.",
            "format": "date-time"
          },
          "errCode": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Error code associated with this request/response."
          },
          "srcTyps": {
            "type": "array",
            "description": "Array of UDL record type(s) (DOA, ELSET, EO, RADAR, RF, SV) collected or produced in response to the associated request.  See the associated 'srcIds' array for the record UUIDs, positionally corresponding to the record types in this array.  The 'srcTyps' and 'srcIds' arrays must match in size.  The appropriate API operation can be used to retrieve the specified object(s) (e.g. /udl/rfobservation/{uuid}).",
            "items": {
              "type": "string"
            }
          },
          "srcIds": {
            "type": "array",
            "description": "Array of UUIDs of the UDL data record(s) collected in response to the associated request.  See the associated 'srcTyps' array for the specific types of data, positionally corresponding to the UUIDs in this array.  The 'srcTyps' and 'srcIds' arrays must match in size.  The appropriate API operation can be used to retrieve the specified object(s) (e.g. /udl/rfobservation/{uuid}).",
            "items": {
              "type": "string"
            }
          },
          "notes": {
            "maxLength": 1024,
            "minLength": 0,
            "type": "string",
            "description": "Notes or comments associated with this response."
          },
          "source": {
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "description": "Source of the data."
          },
          "origin": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin."
          },
          "idSensor": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Unique identifier of the reporting sensor."
          },
          "origSensorId": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "description": "Optional identifier provided by the collection source to indicate the sensor identifier responding to this collect or contact. This may be an internal identifier and not necessarily a valid sensor ID."
          },
          "dataMode": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ]
          }
        }
      },
      "POST_udl_elset": {
        "required": [
          "classificationMarking",
          "dataMode",
          "epoch",
          "source"
        ],
        "type": "object",
        "properties": {
          "idElset": {
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "description": "Unique identifier of the record, auto-generated by the system."
          },
          "classificationMarking": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format."
          },
          "satNo": {
            "type": "integer",
            "description": "Satellite/catalog number of the target on-orbit object.",
            "format": "int32",
            "minimum": -2147483648,
            "maximum": 2147483647
          },
          "epoch": {
            "type": "string",
            "description": "Elset epoch time in ISO 8601 UTC format, with microsecond precision.",
            "format": "date-time"
          },
          "meanMotion": {
            "type": "number",
            "description": "Mean motion is the angular speed required for a body to complete one orbit, assuming constant speed in a circular orbit which completes in the same time as the variable speed, elliptical orbit of the actual body. Measured in revolutions per day.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "uct": {
            "type": "boolean",
            "description": "Boolean indicating this Elset was unable to be correlated to a known object. This flag should only be set to true by data providers after an attempt to correlate to an on-orbit object was made and failed. If unable to correlate, the 'origObjectId' field may be populated with an internal data provider specific identifier."
          },
          "eccentricity": {
            "type": "number",
            "description": "The orbital eccentricity of an astronomical object is a parameter that determines the amount by which its orbit around another body deviates from a perfect circle. A value of 0 is a circular orbit, values between 0 and 1 form an elliptic orbit, 1 is a parabolic escape orbit, and greater than 1 is a hyperbolic escape orbit.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "inclination": {
            "type": "number",
            "description": "The angle between the equator and the orbit when looking from the center of the Earth. If the orbit went exactly around the equator from left to right, then the inclination would be 0. The inclination ranges from 0 to 180 degrees.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "raan": {
            "type": "number",
            "description": "Right ascension of the ascending node, or RAAN is the angle as measured in degrees eastwards (or, as seen from the north, counterclockwise) from the First Point of Aries to the ascending node, which is where the orbit crosses the equator when traveling north.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "argOfPerigee": {
            "type": "number",
            "description": "The argument of perigee is the angle in degrees formed between the perigee and the ascending node. If the perigee would occur at the ascending node, the argument of perigee would be 0.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "meanAnomaly": {
            "type": "number",
            "description": "Where the satellite is in its orbital path. The mean anomaly ranges from 0 to 360 degrees. The mean anomaly is referenced to the perigee. If the satellite were at the perigee, the mean anomaly would be 0.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "revNo": {
            "type": "integer",
            "description": "The current revolution number. The value is incremented when a satellite crosses the equator on an ascending pass.",
            "format": "int32",
            "minimum": -2147483648,
            "maximum": 2147483647
          },
          "bStar": {
            "type": "number",
            "description": "The drag term for SGP4 orbital model, used for calculating decay constants for altitude, eccentricity etc, measured in inverse earth radii.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "agom": {
            "type": "number",
            "description": "AGOM, expressed in m^2/kg, is the value of the (averaged) object Area times the solar radiation pressure coefficient(Gamma) over the object Mass. Applicable only with ephemType4.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "ballisticCoeff": {
            "type": "number",
            "description": "Ballistic coefficient, in m^2/kg. Applicable only with ephemType4.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "meanMotionDot": {
            "type": "number",
            "description": "1st derivative of the mean motion with respect to time. Units are revolutions per day squared.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "meanMotionDDot": {
            "type": "number",
            "description": "2nd derivative of the mean motion with respect to time. Units are revolutions per day cubed.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "semiMajorAxis": {
            "type": "number",
            "description": "The sum of the periapsis and apoapsis distances divided by two. For circular orbits, the semimajor axis is the distance between the centers of the bodies, not the distance of the bodies from the center of mass. Units are kilometers.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "period": {
            "type": "number",
            "description": "Period of the orbit equal to inverse of mean motion, in minutes.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "apogee": {
            "type": "number",
            "description": "The orbit point furthest from the center of the earth in kilometers. If not provided, apogee will be computed from the TLE according to the following. Using mu, the standard gravitational parameter for the earth (398600.4418), semi-major axis A = (mu/(n * 2 * pi/(24*3600))^2)(1/3). Using semi-major axis A, eccentricity E, apogee = (A * (1 + E)) in km. Note that the calculations are for computing the apogee radius from the center of the earth, to compute apogee altitude the radius of the earth should be subtracted (6378.135 km).",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "perigee": {
            "type": "number",
            "description": "The orbit point nearest to the center of the earth in kilometers. If not provided, perigee will be computed from the TLE according to the following. Using mu, the standard gravitational parameter for the earth (398600.4418), semi-major axis A = (mu/(n * 2 * pi/(24*3600))^2)(1/3). Using semi-major axis A, eccentricity E, perigee = (A * (1 - E)) in km. Note that the calculations are for computing the perigee radius from the center of the earth, to compute perigee altitude the radius of the earth should be subtracted (6378.135 km).",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "origObjectId": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "description": "Optional identifier provided by elset source to indicate the target onorbit object of this elset. This may be an internal identifier and not necessarily map to a valid satellite number."
          },
          "descriptor": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "description": "Optional source-provided and searchable metadata or descriptor of the data."
          },
          "rawFileURI": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Optional URI location in the document repository of the raw file parsed by the system to produce this record. To download the raw file, prepend https://udl-hostname/scs/download?id= to this value."
          },
          "origin": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin."
          },
          "source": {
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "description": "Source of the data."
          },
          "dataMode": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ]
          },
          "algorithm": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "description": "Optional algorithm used to produce this record."
          },
          "sourcedData": {
            "type": "array",
            "description": "Optional array of UDL data (observation) UUIDs used to build this element set. See the associated sourcedDataTypes array for the specific types of observations for the positionally corresponding UUIDs in this array (the two arrays must match in size).",
            "items": {
              "type": "string"
            }
          },
          "transactionId": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "description": "Optional identifier to track a commercial or marketplace transaction executed to produce this data."
          },
          "ephemType": {
            "type": "integer",
            "description": "The ephemeris type associated with this TLE:\n\n0:&nbsp;SGP4 if orbital period&nbsp;&lt;&nbsp;225 minutes, and SDP4 otherwise\n\n1:&nbsp;SGP\n\n2:&nbsp;SGP4\n\n3:&nbsp;SDP4\n\n4:&nbsp;SGP8, also referred to as SGP4-XP\n\n5:&nbsp;SDP8\n\n",
            "format": "int32",
            "minimum": -2147483648,
            "maximum": 2147483647
          }
        },
        "description": "An element set is a collection of Keplerian orbital elements describing an orbit of a particular satellite. The data is used along with an orbit propagator in order to predict the motion of a satellite. The element set, or elset for short, consists of identification data, the classical elements and drag parameters."
      },
      "POST_udl_elset_createBulk": {
        "required": [
          "classificationMarking",
          "dataMode",
          "epoch",
          "source"
        ],
        "type": "object",
        "description": "An element set is a collection of Keplerian orbital elements describing an orbit of a particular satellite. The data is used along with an orbit propagator in order to predict the motion of a satellite. The element set, or elset for short, consists of identification data, the classical elements and drag parameters.",
        "properties": {
          "idElset": {
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "description": "Unique identifier of the record, auto-generated by the system."
          },
          "classificationMarking": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format."
          },
          "satNo": {
            "type": "integer",
            "description": "Satellite/catalog number of the target on-orbit object.",
            "format": "int32",
            "minimum": -2147483648,
            "maximum": 2147483647
          },
          "epoch": {
            "type": "string",
            "description": "Elset epoch time in ISO 8601 UTC format, with microsecond precision.",
            "format": "date-time"
          },
          "meanMotion": {
            "type": "number",
            "description": "Mean motion is the angular speed required for a body to complete one orbit, assuming constant speed in a circular orbit which completes in the same time as the variable speed, elliptical orbit of the actual body. Measured in revolutions per day.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "uct": {
            "type": "boolean",
            "description": "Boolean indicating this Elset was unable to be correlated to a known object. This flag should only be set to true by data providers after an attempt to correlate to an on-orbit object was made and failed. If unable to correlate, the 'origObjectId' field may be populated with an internal data provider specific identifier."
          },
          "eccentricity": {
            "type": "number",
            "description": "The orbital eccentricity of an astronomical object is a parameter that determines the amount by which its orbit around another body deviates from a perfect circle. A value of 0 is a circular orbit, values between 0 and 1 form an elliptic orbit, 1 is a parabolic escape orbit, and greater than 1 is a hyperbolic escape orbit.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "inclination": {
            "type": "number",
            "description": "The angle between the equator and the orbit when looking from the center of the Earth. If the orbit went exactly around the equator from left to right, then the inclination would be 0. The inclination ranges from 0 to 180 degrees.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "raan": {
            "type": "number",
            "description": "Right ascension of the ascending node, or RAAN is the angle as measured in degrees eastwards (or, as seen from the north, counterclockwise) from the First Point of Aries to the ascending node, which is where the orbit crosses the equator when traveling north.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "argOfPerigee": {
            "type": "number",
            "description": "The argument of perigee is the angle in degrees formed between the perigee and the ascending node. If the perigee would occur at the ascending node, the argument of perigee would be 0.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "meanAnomaly": {
            "type": "number",
            "description": "Where the satellite is in its orbital path. The mean anomaly ranges from 0 to 360 degrees. The mean anomaly is referenced to the perigee. If the satellite were at the perigee, the mean anomaly would be 0.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "revNo": {
            "type": "integer",
            "description": "The current revolution number. The value is incremented when a satellite crosses the equator on an ascending pass.",
            "format": "int32",
            "minimum": -2147483648,
            "maximum": 2147483647
          },
          "bStar": {
            "type": "number",
            "description": "The drag term for SGP4 orbital model, used for calculating decay constants for altitude, eccentricity etc, measured in inverse earth radii.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "agom": {
            "type": "number",
            "description": "AGOM, expressed in m^2/kg, is the value of the (averaged) object Area times the solar radiation pressure coefficient(Gamma) over the object Mass. Applicable only with ephemType4.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "ballisticCoeff": {
            "type": "number",
            "description": "Ballistic coefficient, in m^2/kg. Applicable only with ephemType4.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "meanMotionDot": {
            "type": "number",
            "description": "1st derivative of the mean motion with respect to time. Units are revolutions per day squared.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "meanMotionDDot": {
            "type": "number",
            "description": "2nd derivative of the mean motion with respect to time. Units are revolutions per day cubed.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "semiMajorAxis": {
            "type": "number",
            "description": "The sum of the periapsis and apoapsis distances divided by two. For circular orbits, the semimajor axis is the distance between the centers of the bodies, not the distance of the bodies from the center of mass. Units are kilometers.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "period": {
            "type": "number",
            "description": "Period of the orbit equal to inverse of mean motion, in minutes.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "apogee": {
            "type": "number",
            "description": "The orbit point furthest from the center of the earth in kilometers. If not provided, apogee will be computed from the TLE according to the following. Using mu, the standard gravitational parameter for the earth (398600.4418), semi-major axis A = (mu/(n * 2 * pi/(24*3600))^2)(1/3). Using semi-major axis A, eccentricity E, apogee = (A * (1 + E)) in km. Note that the calculations are for computing the apogee radius from the center of the earth, to compute apogee altitude the radius of the earth should be subtracted (6378.135 km).",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "perigee": {
            "type": "number",
            "description": "The orbit point nearest to the center of the earth in kilometers. If not provided, perigee will be computed from the TLE according to the following. Using mu, the standard gravitational parameter for the earth (398600.4418), semi-major axis A = (mu/(n * 2 * pi/(24*3600))^2)(1/3). Using semi-major axis A, eccentricity E, perigee = (A * (1 - E)) in km. Note that the calculations are for computing the perigee radius from the center of the earth, to compute perigee altitude the radius of the earth should be subtracted (6378.135 km).",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "origObjectId": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "description": "Optional identifier provided by elset source to indicate the target onorbit object of this elset. This may be an internal identifier and not necessarily map to a valid satellite number."
          },
          "descriptor": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "description": "Optional source-provided and searchable metadata or descriptor of the data."
          },
          "rawFileURI": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Optional URI location in the document repository of the raw file parsed by the system to produce this record. To download the raw file, prepend https://udl-hostname/scs/download?id= to this value."
          },
          "origin": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin."
          },
          "source": {
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "description": "Source of the data."
          },
          "dataMode": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ]
          },
          "algorithm": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "description": "Optional algorithm used to produce this record."
          },
          "sourcedData": {
            "type": "array",
            "description": "Optional array of UDL data (observation) UUIDs used to build this element set. See the associated sourcedDataTypes array for the specific types of observations for the positionally corresponding UUIDs in this array (the two arrays must match in size).",
            "items": {
              "type": "string"
            }
          },
          "transactionId": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "description": "Optional identifier to track a commercial or marketplace transaction executed to produce this data."
          },
          "ephemType": {
            "type": "integer",
            "description": "The ephemeris type associated with this TLE:\n\n0:&nbsp;SGP4 if orbital period&nbsp;&lt;&nbsp;225 minutes, and SDP4 otherwise\n\n1:&nbsp;SGP\n\n2:&nbsp;SGP4\n\n3:&nbsp;SDP4\n\n4:&nbsp;SGP8, also referred to as SGP4-XP\n\n5:&nbsp;SDP8\n\n",
            "format": "int32",
            "minimum": -2147483648,
            "maximum": 2147483647
          }
        }
      },
      "POST_udl_eoobservation": {
        "required": [
          "classificationMarking",
          "dataMode",
          "obTime",
          "source"
        ],
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "description": "Unique identifier of the record, auto-generated by the system."
          },
          "classificationMarking": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format."
          },
          "obTime": {
            "type": "string",
            "description": "Ob detection time in ISO 8601 UTC with microsecond precision.",
            "format": "date-time"
          },
          "corrQuality": {
            "type": "number",
            "description": "Object Correlation Quality value (non-standardized). Users should consult data providers regarding the expected range of values.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "idSensor": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Unique identifier of the reporting sensor."
          },
          "idSkyImagery": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Unique identifier of the Sky Imagery."
          },
          "collectMethod": {
            "maxLength": 24,
            "minLength": 0,
            "type": "string",
            "description": "Method indicating telescope movement during collection (AUTOTRACK, MANUAL AUTOTRACK, MANUAL RATE TRACK, MANUAL SIDEREAL, SIDEREAL, RATE TRACK)."
          },
          "satNo": {
            "type": "integer",
            "description": "Satellite/Catalog number of the target on-orbit object.",
            "format": "int32",
            "minimum": -2147483648,
            "maximum": 2147483647
          },
          "taskId": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Optional identifier to indicate the specific tasking which produced this observation."
          },
          "transactionId": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "description": "Optional identifier to track a commercial or marketplace transaction executed to produce this data."
          },
          "trackId": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Optional identifier of the track to which this observation belongs."
          },
          "obPosition": {
            "maxLength": 8,
            "minLength": 0,
            "type": "string",
            "description": "The position of this observation within a track (FENCE, FIRST, IN, LAST, SINGLE).  This identifier is optional and, if null, no assumption should be made regarding whether other observations may or may not exist to compose a track."
          },
          "origObjectId": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "description": "Optional identifier provided by observation source to indicate the target onorbit object of this observation. This may be an internal identifier and not necessarily a valid satellite number."
          },
          "origSensorId": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "description": "Optional identifier provided by observation source to indicate the sensor identifier which produced this observation. This may be an internal identifier and not necessarily a valid sensor ID."
          },
          "uct": {
            "type": "boolean",
            "description": "Boolean indicating this observation is part of an uncorrelated track or was unable to be correlated to a known object. This flag should only be set to true by data providers after an attempt to correlate to an on-orbit object was made and failed. If unable to correlate, the 'origObjectId' field may be populated with an internal data provider specific identifier."
          },
          "azimuth": {
            "type": "number",
            "description": "Line of sight azimuth angle in degrees and topocentric frame.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "azimuthUnc": {
            "type": "number",
            "description": "One sigma uncertainty in the line of sight azimuth angle, in degrees.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "azimuthBias": {
            "type": "number",
            "description": "Sensor line of sight azimuth angle bias in degrees.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "azimuthRate": {
            "type": "number",
            "description": "Rate of change of the line of sight azimuth in degrees per second.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "elevation": {
            "type": "number",
            "description": "Line of sight elevation in degrees and topocentric frame.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "elevationUnc": {
            "type": "number",
            "description": "One sigma uncertainty in the line of sight elevation angle, in degrees.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "elevationBias": {
            "type": "number",
            "description": "Sensor line of sight elevation bias in degrees.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "elevationRate": {
            "type": "number",
            "description": "Rate of change of the line of sight elevation in degrees per second.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "range": {
            "type": "number",
            "description": "Line of sight range in km.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "rangeUnc": {
            "type": "number",
            "description": "One sigma uncertainty in the line of sight range, in km.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "rangeBias": {
            "type": "number",
            "description": "Sensor line of sight range bias in km.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "rangeRate": {
            "type": "number",
            "description": "Rate of change of the line of sight range in km/sec.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "rangeRateUnc": {
            "type": "number",
            "description": "One sigma uncertainty in the line of sight range rate, in km/sec.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "ra": {
            "type": "number",
            "description": "Line of sight right ascension, in degrees, in the specified referenceFrame.  If referenceFrame is null then J2K should be assumed.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "raRate": {
            "type": "number",
            "description": "Line of sight right ascension rate of change, in degrees/sec, in the specified referenceFrame.  If referenceFrame is null then J2K should be assumed.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "raUnc": {
            "type": "number",
            "description": "One sigma uncertainty in the line of sight right ascension angle, in degrees.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "raBias": {
            "type": "number",
            "description": "Sensor line of sight right ascension bias in degrees.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "declination": {
            "type": "number",
            "description": "Line of sight declination, in degrees, in the specified referenceFrame.  If referenceFrame is null then J2K should be assumed.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "declinationRate": {
            "type": "number",
            "description": "Line of sight declination rate of change, in degrees/sec, in the specified referenceFrame.  If referenceFrame is null then J2K should be assumed.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "declinationUnc": {
            "type": "number",
            "description": "One sigma uncertainty in the line of sight declination angle, in degrees.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "declinationBias": {
            "type": "number",
            "description": "Sensor line of sight declination angle bias in degrees.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "losx": {
            "type": "number",
            "description": "Line-of-sight cartesian X position of the target, in km, in the specified referenceFrame.  If referenceFrame is null then J2K should be assumed.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "losy": {
            "type": "number",
            "description": "Line-of-sight cartesian Y position of the target, in km, in the specified referenceFrame.  If referenceFrame is null then J2K should be assumed.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "losz": {
            "type": "number",
            "description": "Line-of-sight cartesian Z position of the target, in km, in the specified referenceFrame.  If referenceFrame is null then J2K should be assumed.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "losUnc": {
            "type": "number",
            "description": "One sigma uncertainty in the line of sight pointing in micro-radians.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "losxvel": {
            "type": "number",
            "description": "Line-of-sight cartesian X velocity of target, in km/sec, in the specified referenceFrame.  If referenceFrame is null then J2K should be assumed.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "losyvel": {
            "type": "number",
            "description": "Line-of-sight cartesian Y velocity of target, in km/sec, in the specified referenceFrame.  If referenceFrame is null then J2K should be assumed.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "loszvel": {
            "type": "number",
            "description": "Line-of-sight cartesian Z velocity of target, in km/sec, in the specified referenceFrame.  If referenceFrame is null then J2K should be assumed.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "senlat": {
            "type": "number",
            "description": "Sensor WGS84 latitude at obTime (if mobile/onorbit) in degrees. If null, can be obtained from sensor info. -90 to 90 degrees (negative values south of equator).",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "senlon": {
            "type": "number",
            "description": "Sensor WGS84 longitude at obTime (if mobile/onorbit) in degrees. If null, can be obtained from sensor info. -180 to 180 degrees (negative values west of Prime Meridian).",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "senalt": {
            "type": "number",
            "description": "Sensor altitude at obTime (if mobile/onorbit) in km.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "senx": {
            "type": "number",
            "description": "Cartesian X position of the observing mobile/onorbit sensor at obTime, in km, in the specified senReferenceFrame.  If senReferenceFrame is null then J2K should be assumed.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "seny": {
            "type": "number",
            "description": "Cartesian Y position of the observing mobile/onorbit sensor at obTime, in km, in the specified senReferenceFrame.  If senReferenceFrame is null then J2K should be assumed.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "senz": {
            "type": "number",
            "description": "Cartesian Z position of the observing mobile/onorbit sensor at obTime, in km, in the specified senReferenceFrame.  If senReferenceFrame is null then J2K should be assumed.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "senvelx": {
            "type": "number",
            "description": "Cartesian X velocity of the observing mobile/onorbit sensor at obTime, in km/sec, in the specified senReferenceFrame.  If senReferenceFrame is null then J2K should be assumed.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "senvely": {
            "type": "number",
            "description": "Cartesian Y velocity of the observing mobile/onorbit sensor at obTime, in km/sec, in the specified senReferenceFrame.  If senReferenceFrame is null then J2K should be assumed.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "senvelz": {
            "type": "number",
            "description": "Cartesian Z velocity of the observing mobile/onorbit sensor at obTime, in km/sec, in the specified senReferenceFrame.  If senReferenceFrame is null then J2K should be assumed.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "fovCount": {
            "type": "integer",
            "description": "The number of RSOs detected in the sensor field of view.",
            "format": "int32",
            "minimum": -2147483648,
            "maximum": 2147483647
          },
          "expDuration": {
            "type": "number",
            "description": "Image exposure duration in seconds.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "zeroptd": {
            "type": "number",
            "description": "Formula: 2.5 * log_10 (zero_mag_counts / expDuration).",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "netObjSig": {
            "type": "number",
            "description": "Net object signature = counts / expDuration.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "netObjSigUnc": {
            "type": "number",
            "description": "Net object signature uncertainty = counts uncertainty / expDuration.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "mag": {
            "type": "number",
            "description": "Calibrated magnitude in units of magnitudes.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "magUnc": {
            "type": "number",
            "description": "Uncertainty of calibrated magnitude in units of magnitudes.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "magNormRange": {
            "type": "number",
            "description": "Formula: mag - 5.0 * log_10(geo_range / 1000000.0).",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "geolat": {
            "type": "number",
            "description": "For GEO detections, the latitude in degrees north.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "geolon": {
            "type": "number",
            "description": "For GEO detections, the longitude in degrees east.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "geoalt": {
            "type": "number",
            "description": "For GEO detections, the altitude in km.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "georange": {
            "type": "number",
            "description": "For GEO detections, the range in km.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "skyBkgrnd": {
            "type": "number",
            "description": "Average Sky Background signal, in Magnitudes. Sky Background refers to the incoming light from an apparently empty part of the night sky.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "primaryExtinction": {
            "type": "number",
            "description": "Primary Extinction Coefficient, in Magnitudes. Primary Extinction is the coefficient applied to the airmass to determine how much the observed visual magnitude has been attenuated by the atmosphere. Extinction, in general, describes the absorption and scattering of electromagnetic radiation by dust and gas between an emitting astronomical object and the observer.  See the EOObservationDetails API for specification of extinction coefficients for multiple spectral filters.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "primaryExtinctionUnc": {
            "type": "number",
            "description": "Primary Extinction Coefficient Uncertainty, in Magnitudes.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "solarPhaseAngle": {
            "type": "number",
            "description": "The angle, in degrees, between the target-to-observer vector and the target-to-sun vector.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "solarEqPhaseAngle": {
            "type": "number",
            "description": "The angle, in degrees, between the projections of the target-to-observer vector and the target-to-sun vector onto the equatorial plane. The angle is represented as negative when closing and positive when opening.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "solarDecAngle": {
            "type": "number",
            "description": "Angle from the sun to the equatorial plane.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "shutterDelay": {
            "type": "number",
            "description": "Shutter delay in seconds.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "timingBias": {
            "type": "number",
            "description": "Sensor timing bias in seconds.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "rawFileURI": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Optional URI location in the document repository of the raw file parsed by the system to produce this record. To download the raw file, prepend https://udl-hostname/scs/download?id= to this value."
          },
          "intensity": {
            "type": "number",
            "description": "Intensity of the target for IR observations, in kw/sr/um.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "bgIntensity": {
            "type": "number",
            "description": "Background intensity for IR observations, in kw/sr/um.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "descriptor": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "description": "Optional source-provided and searchable metadata or descriptor of the data."
          },
          "source": {
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "description": "Source of the data."
          },
          "origin": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin."
          },
          "dataMode": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ]
          },
          "zeroPtdUnc": {
            "type": "number",
            "description": "This is the uncertainty in the zero point for the filter used for this observation/row in units of mag. For use with differential photometry.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "referenceFrame": {
            "maxLength": 24,
            "minLength": 0,
            "type": "string",
            "description": "The reference frame of the EOObservation measurements. If the referenceFrame is null it is assumed to be J2000.",
            "enum": [
              "J2000",
              "GCRF",
              "ITRF",
              "TEME"
            ]
          },
          "senReferenceFrame": {
            "maxLength": 24,
            "minLength": 0,
            "type": "string",
            "description": "The reference frame of the observing sensor state. If the senReferenceFrame is null it is assumed to be J2000.",
            "enum": [
              "J2000",
              "EFG/TDR",
              "ECR/ECEF",
              "TEME",
              "ITRF",
              "GCRF"
            ]
          },
          "umbra": {
            "type": "boolean",
            "description": "Boolean indicating that the target object was in umbral eclipse at the time of this observation."
          },
          "penumbra": {
            "type": "boolean",
            "description": "Boolean indicating that the target object was in a penumbral eclipse at the time of this observation."
          }
        },
        "description": "Model representation of observation data for electro-optical based sensor phenomenologies. ECI J2K is the preferred reference frame for EOObservations, however, several user-specified reference frames are accommodated. Users should check the EOObservation record as well as the 'Discover' tab in the storefront to confirm the coordinate frames used by the data provider."
      },
      "POST_udl_eoobservation_createBulk": {
        "required": [
          "classificationMarking",
          "dataMode",
          "obTime",
          "source"
        ],
        "type": "object",
        "description": "Model representation of observation data for electro-optical based sensor phenomenologies. ECI J2K is the preferred reference frame for EOObservations, however, several user-specified reference frames are accommodated. Users should check the EOObservation record as well as the 'Discover' tab in the storefront to confirm the coordinate frames used by the data provider.",
        "properties": {
          "id": {
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "description": "Unique identifier of the record, auto-generated by the system."
          },
          "classificationMarking": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "Classification marking of the data in IC/CAPCO Portion-marked format."
          },
          "obTime": {
            "type": "string",
            "description": "Ob detection time in ISO 8601 UTC with microsecond precision.",
            "format": "date-time"
          },
          "corrQuality": {
            "type": "number",
            "description": "Object Correlation Quality value (non-standardized). Users should consult data providers regarding the expected range of values.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "idSensor": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Unique identifier of the reporting sensor."
          },
          "idSkyImagery": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Unique identifier of the Sky Imagery."
          },
          "collectMethod": {
            "maxLength": 24,
            "minLength": 0,
            "type": "string",
            "description": "Method indicating telescope movement during collection (AUTOTRACK, MANUAL AUTOTRACK, MANUAL RATE TRACK, MANUAL SIDEREAL, SIDEREAL, RATE TRACK)."
          },
          "satNo": {
            "type": "integer",
            "description": "Satellite/Catalog number of the target on-orbit object.",
            "format": "int32",
            "minimum": -2147483648,
            "maximum": 2147483647
          },
          "taskId": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Optional identifier to indicate the specific tasking which produced this observation."
          },
          "transactionId": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "description": "Optional identifier to track a commercial or marketplace transaction executed to produce this data."
          },
          "trackId": {
            "maxLength": 36,
            "minLength": 0,
            "type": "string",
            "description": "Optional identifier of the track to which this observation belongs."
          },
          "obPosition": {
            "maxLength": 8,
            "minLength": 0,
            "type": "string",
            "description": "The position of this observation within a track (FENCE, FIRST, IN, LAST, SINGLE).  This identifier is optional and, if null, no assumption should be made regarding whether other observations may or may not exist to compose a track."
          },
          "origObjectId": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "description": "Optional identifier provided by observation source to indicate the target onorbit object of this observation. This may be an internal identifier and not necessarily a valid satellite number."
          },
          "origSensorId": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "description": "Optional identifier provided by observation source to indicate the sensor identifier which produced this observation. This may be an internal identifier and not necessarily a valid sensor ID."
          },
          "uct": {
            "type": "boolean",
            "description": "Boolean indicating this observation is part of an uncorrelated track or was unable to be correlated to a known object. This flag should only be set to true by data providers after an attempt to correlate to an on-orbit object was made and failed. If unable to correlate, the 'origObjectId' field may be populated with an internal data provider specific identifier."
          },
          "azimuth": {
            "type": "number",
            "description": "Line of sight azimuth angle in degrees and topocentric frame.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "azimuthUnc": {
            "type": "number",
            "description": "One sigma uncertainty in the line of sight azimuth angle, in degrees.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "azimuthBias": {
            "type": "number",
            "description": "Sensor line of sight azimuth angle bias in degrees.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "azimuthRate": {
            "type": "number",
            "description": "Rate of change of the line of sight azimuth in degrees per second.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "elevation": {
            "type": "number",
            "description": "Line of sight elevation in degrees and topocentric frame.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "elevationUnc": {
            "type": "number",
            "description": "One sigma uncertainty in the line of sight elevation angle, in degrees.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "elevationBias": {
            "type": "number",
            "description": "Sensor line of sight elevation bias in degrees.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "elevationRate": {
            "type": "number",
            "description": "Rate of change of the line of sight elevation in degrees per second.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "range": {
            "type": "number",
            "description": "Line of sight range in km.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "rangeUnc": {
            "type": "number",
            "description": "One sigma uncertainty in the line of sight range, in km.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "rangeBias": {
            "type": "number",
            "description": "Sensor line of sight range bias in km.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "rangeRate": {
            "type": "number",
            "description": "Rate of change of the line of sight range in km/sec.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "rangeRateUnc": {
            "type": "number",
            "description": "One sigma uncertainty in the line of sight range rate, in km/sec.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "ra": {
            "type": "number",
            "description": "Line of sight right ascension, in degrees, in the specified referenceFrame.  If referenceFrame is null then J2K should be assumed.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "raRate": {
            "type": "number",
            "description": "Line of sight right ascension rate of change, in degrees/sec, in the specified referenceFrame.  If referenceFrame is null then J2K should be assumed.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "raUnc": {
            "type": "number",
            "description": "One sigma uncertainty in the line of sight right ascension angle, in degrees.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "raBias": {
            "type": "number",
            "description": "Sensor line of sight right ascension bias in degrees.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "declination": {
            "type": "number",
            "description": "Line of sight declination, in degrees, in the specified referenceFrame.  If referenceFrame is null then J2K should be assumed.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "declinationRate": {
            "type": "number",
            "description": "Line of sight declination rate of change, in degrees/sec, in the specified referenceFrame.  If referenceFrame is null then J2K should be assumed.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "declinationUnc": {
            "type": "number",
            "description": "One sigma uncertainty in the line of sight declination angle, in degrees.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "declinationBias": {
            "type": "number",
            "description": "Sensor line of sight declination angle bias in degrees.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "losx": {
            "type": "number",
            "description": "Line-of-sight cartesian X position of the target, in km, in the specified referenceFrame.  If referenceFrame is null then J2K should be assumed.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "losy": {
            "type": "number",
            "description": "Line-of-sight cartesian Y position of the target, in km, in the specified referenceFrame.  If referenceFrame is null then J2K should be assumed.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "losz": {
            "type": "number",
            "description": "Line-of-sight cartesian Z position of the target, in km, in the specified referenceFrame.  If referenceFrame is null then J2K should be assumed.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "losUnc": {
            "type": "number",
            "description": "One sigma uncertainty in the line of sight pointing in micro-radians.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "losxvel": {
            "type": "number",
            "description": "Line-of-sight cartesian X velocity of target, in km/sec, in the specified referenceFrame.  If referenceFrame is null then J2K should be assumed.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "losyvel": {
            "type": "number",
            "description": "Line-of-sight cartesian Y velocity of target, in km/sec, in the specified referenceFrame.  If referenceFrame is null then J2K should be assumed.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "loszvel": {
            "type": "number",
            "description": "Line-of-sight cartesian Z velocity of target, in km/sec, in the specified referenceFrame.  If referenceFrame is null then J2K should be assumed.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "senlat": {
            "type": "number",
            "description": "Sensor WGS84 latitude at obTime (if mobile/onorbit) in degrees. If null, can be obtained from sensor info. -90 to 90 degrees (negative values south of equator).",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "senlon": {
            "type": "number",
            "description": "Sensor WGS84 longitude at obTime (if mobile/onorbit) in degrees. If null, can be obtained from sensor info. -180 to 180 degrees (negative values west of Prime Meridian).",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "senalt": {
            "type": "number",
            "description": "Sensor altitude at obTime (if mobile/onorbit) in km.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "senx": {
            "type": "number",
            "description": "Cartesian X position of the observing mobile/onorbit sensor at obTime, in km, in the specified senReferenceFrame.  If senReferenceFrame is null then J2K should be assumed.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "seny": {
            "type": "number",
            "description": "Cartesian Y position of the observing mobile/onorbit sensor at obTime, in km, in the specified senReferenceFrame.  If senReferenceFrame is null then J2K should be assumed.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "senz": {
            "type": "number",
            "description": "Cartesian Z position of the observing mobile/onorbit sensor at obTime, in km, in the specified senReferenceFrame.  If senReferenceFrame is null then J2K should be assumed.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "senvelx": {
            "type": "number",
            "description": "Cartesian X velocity of the observing mobile/onorbit sensor at obTime, in km/sec, in the specified senReferenceFrame.  If senReferenceFrame is null then J2K should be assumed.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "senvely": {
            "type": "number",
            "description": "Cartesian Y velocity of the observing mobile/onorbit sensor at obTime, in km/sec, in the specified senReferenceFrame.  If senReferenceFrame is null then J2K should be assumed.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "senvelz": {
            "type": "number",
            "description": "Cartesian Z velocity of the observing mobile/onorbit sensor at obTime, in km/sec, in the specified senReferenceFrame.  If senReferenceFrame is null then J2K should be assumed.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "fovCount": {
            "type": "integer",
            "description": "The number of RSOs detected in the sensor field of view.",
            "format": "int32",
            "minimum": -2147483648,
            "maximum": 2147483647
          },
          "expDuration": {
            "type": "number",
            "description": "Image exposure duration in seconds.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "zeroptd": {
            "type": "number",
            "description": "Formula: 2.5 * log_10 (zero_mag_counts / expDuration).",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "netObjSig": {
            "type": "number",
            "description": "Net object signature = counts / expDuration.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "netObjSigUnc": {
            "type": "number",
            "description": "Net object signature uncertainty = counts uncertainty / expDuration.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "mag": {
            "type": "number",
            "description": "Calibrated magnitude in units of magnitudes.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "magUnc": {
            "type": "number",
            "description": "Uncertainty of calibrated magnitude in units of magnitudes.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "magNormRange": {
            "type": "number",
            "description": "Formula: mag - 5.0 * log_10(geo_range / 1000000.0).",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "geolat": {
            "type": "number",
            "description": "For GEO detections, the latitude in degrees north.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "geolon": {
            "type": "number",
            "description": "For GEO detections, the longitude in degrees east.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "geoalt": {
            "type": "number",
            "description": "For GEO detections, the altitude in km.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "georange": {
            "type": "number",
            "description": "For GEO detections, the range in km.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "skyBkgrnd": {
            "type": "number",
            "description": "Average Sky Background signal, in Magnitudes. Sky Background refers to the incoming light from an apparently empty part of the night sky.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "primaryExtinction": {
            "type": "number",
            "description": "Primary Extinction Coefficient, in Magnitudes. Primary Extinction is the coefficient applied to the airmass to determine how much the observed visual magnitude has been attenuated by the atmosphere. Extinction, in general, describes the absorption and scattering of electromagnetic radiation by dust and gas between an emitting astronomical object and the observer.  See the EOObservationDetails API for specification of extinction coefficients for multiple spectral filters.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "primaryExtinctionUnc": {
            "type": "number",
            "description": "Primary Extinction Coefficient Uncertainty, in Magnitudes.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "solarPhaseAngle": {
            "type": "number",
            "description": "The angle, in degrees, between the target-to-observer vector and the target-to-sun vector.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "solarEqPhaseAngle": {
            "type": "number",
            "description": "The angle, in degrees, between the projections of the target-to-observer vector and the target-to-sun vector onto the equatorial plane. The angle is represented as negative when closing and positive when opening.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "solarDecAngle": {
            "type": "number",
            "description": "Angle from the sun to the equatorial plane.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "shutterDelay": {
            "type": "number",
            "description": "Shutter delay in seconds.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "timingBias": {
            "type": "number",
            "description": "Sensor timing bias in seconds.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "rawFileURI": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string",
            "description": "Optional URI location in the document repository of the raw file parsed by the system to produce this record. To download the raw file, prepend https://udl-hostname/scs/download?id= to this value."
          },
          "intensity": {
            "type": "number",
            "description": "Intensity of the target for IR observations, in kw/sr/um.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "bgIntensity": {
            "type": "number",
            "description": "Background intensity for IR observations, in kw/sr/um.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "descriptor": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "description": "Optional source-provided and searchable metadata or descriptor of the data."
          },
          "source": {
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "description": "Source of the data."
          },
          "origin": {
            "maxLength": 64,
            "minLength": 0,
            "type": "string",
            "description": "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin."
          },
          "dataMode": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
            "enum": [
              "REAL",
              "TEST",
              "SIMULATED",
              "EXERCISE"
            ]
          },
          "zeroPtdUnc": {
            "type": "number",
            "description": "This is the uncertainty in the zero point for the filter used for this observation/row in units of mag. For use with differential photometry.",
            "format": "double",
            "minimum": -1.7976931348623157e+308,
            "maximum": 1.7976931348623157e+308
          },
          "referenceFrame": {
            "maxLength": 24,
            "minLength": 0,
            "type": "string",
            "description": "The reference frame of the EOObservation measurements. If the referenceFrame is null it is assumed to be J2000.",
            "enum": [
              "J2000",
              "GCRF",
              "ITRF",
              "TEME"
            ]
          },
          "senReferenceFrame": {
            "maxLength": 24,
            "minLength": 0,
            "type": "string",
            "description": "The reference frame of the observing sensor state. If the senReferenceFrame is null it is assumed to be J2000.",
            "enum": [
              "J2000",
              "EFG/TDR",
              "ECR/ECEF",
              "TEME",
              "ITRF",
              "GCRF"
            ]
          },
          "umbra": {
            "type": "boolean",
            "description": "Boolean indicating that the target object was in umbral eclipse at the time of this observation."
          },
          "penumbra": {
            "type": "boolean",
            "description": "Boolean indicating that the target object was in a penumbral eclipse at the time of this observation."
          }
        }
      }
    }
  }
}