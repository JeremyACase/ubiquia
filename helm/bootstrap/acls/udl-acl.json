{
    "domain": "udl",
    "version": {
        "major": 1,
        "minor": 2,
        "patch": 3
    },
    "modelType": "AgentCommunicationLanguage",
    "jsonSchema": {
        "type": "object",
        "definitions": {
            "CollectRequest_Abridged": {
                "required": [
                    "classificationMarking",
                    "dataMode",
                    "source",
                    "startTime",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "maxLength": 36,
                        "minLength": 1,
                        "type": "string",
                        "description": "Unique identifier of the record, auto-generated by the system.",
                        "example": "COLLECTREQUEST-ID"
                    },
                    "classificationMarking": {
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string",
                        "description": "Classification marking of the data in IC/CAPCO Portion-marked\nformat.",
                        "example": "U"
                    },
                    "idParentReq": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "The unique ID of the collect request record from which this\nrequest originated. This may be used for cases of sensor-to-sensor tasking,\nsuch as tip/cue operations.",
                        "example": "da98671b-34db-47bf-8c8d-7c668b92c800"
                    },
                    "msgType": {
                        "maxLength": 16,
                        "minLength": 0,
                        "type": "string",
                        "description": "The type of external message from which this request originated.",
                        "example": "SU67"
                    },
                    "msgCreateDate": {
                        "type": "string",
                        "description": "The timestamp of the external message from which this request\noriginated, if applicable, in ISO8601 UTC format with millisecond precision.",
                        "format": "date-time",
                        "example": "2024-04-25T08:17:01.346Z"
                    },
                    "type": {
                        "maxLength": 36,
                        "minLength": 1,
                        "type": "string",
                        "description": "The type of this collect or contact request (DIRECTED SEARCH,\nDWELL, OBJECT, POL, RATE TRACK, SEARCH, SOI, STARE, TTC, VOLUME SEARCH,\netc.).",
                        "example": "DWELL"
                    },
                    "idPlan": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "Unique identifier of the parent plan or schedule associated\nwith this request.  If null, this request is assumed not associated\nwith a plan or schedule.",
                        "example": "REF-PLAN-ID"
                    },
                    "planIndex": {
                        "type": "integer",
                        "description": "Index number (integer) for records within a collection plan\nor schedule.",
                        "format": "int32",
                        "example": 8
                    },
                    "taskId": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "Task ID associated with this request.  A task ID may be associated\nwith a single collect request or may be used to tie together the sub-requests\nof a full collect, for example a DWELL consisting of many dwell points.",
                        "example": "TASK-ID"
                    },
                    "dwellId": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "The dwell ID associated with this request.  A dwell ID is dwell\npoint specific and a DWELL request consist of many dwell point requests.",
                        "example": "DWELL-ID"
                    },
                    "externalId": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional ID from external systems.  This field has no meaning\nwithin UDL and is provided as a convenience for systems that require tracking\nof an internal system generated ID.",
                        "example": "EXTERNAL-ID"
                    },
                    "idSensor": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "Unique identifier of the requested/scheduled/planned sensor\nassociated with this request.  If both idSensor and origSensorId are\nnull then the request is assumed to be a general request for observations\nor contact on an object, if specified, or an area/volume.  In this case,\nthe requester may specify a desired obType.",
                        "example": "REF-SENSOR-ID"
                    },
                    "origSensorId": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional identifier provided by the source to indicate the\nsensor identifier requested/scheduled/planned for this request. This\nmay be an internal identifier and not necessarily a valid sensor ID.\nIf both idSensor and origSensorId are null then the request is assumed\nto be a general request for observations or contact on an object, if\nspecified, or an area/volume.  In this case, the requester may specify\na desired obType.",
                        "example": "ORIGSENSOR-ID"
                    },
                    "obType": {
                        "maxLength": 24,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional type of observation (EO, IR, RADAR, RF-ACTIVE, RF-PASSIVE,\nOTHER) requested.  This field may correspond to a request of a specific\nsensor, or to a general non sensor specific request.",
                        "example": "RADAR"
                    },
                    "priority": {
                        "maxLength": 24,
                        "minLength": 0,
                        "type": "string",
                        "description": "The priority of the collect request  (EMERGENCY, FLASH, IMMEDIATE,\nPRIORITY, ROUTINE).",
                        "example": "EMERGENCY"
                    },
                    "taskCategory": {
                        "type": "integer",
                        "description": "The (SSN) tasking category (1-5) associated with this request.  The\ntasking category defines the priority of gathering and transmitting the\nrequested observational data.  Note that category definitions are sensor\ntype specific.",
                        "format": "int32",
                        "example": 4
                    },
                    "suffix": {
                        "maxLength": 1,
                        "minLength": 0,
                        "type": "string",
                        "description": "The (SSN) tasking suffix (A-Z) associated with this request.  The\nsuffix defines the amount of observational data and the frequency of collection.  Note\nthat suffix definitions are sensor type specific.",
                        "example": "T"
                    },
                    "uctFollowUp": {
                        "type": "boolean",
                        "description": "Boolean indicating that this collect request is UCT follow-up.",
                        "example": false
                    },
                    "startTime": {
                        "type": "string",
                        "description": "The start time or earliest time of the collect or contact\nrequest window, in ISO 8601 UTC format.",
                        "format": "date-time",
                        "example": "2018-01-01T16:00:00.123Z"
                    },
                    "endTime": {
                        "type": "string",
                        "description": "The end time of the collect or contact request window, in\nISO 8601 UTC format.  If no endTime or duration is provided it is assumed\nthe request is either ongoing or that the request is for a specified\nnumber of tracks (numTracks).  If both duration and endTime are provided,\nthe endTime is assumed to take precedence.",
                        "format": "date-time",
                        "example": "2018-01-01T18:00:00.123Z"
                    },
                    "idOnOrbit": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "Unique identifier of the target on-orbit object for this request.",
                        "readOnly": true,
                        "example": "REF-ONORBIT-ID"
                    },
                    "satNo": {
                        "type": "integer",
                        "description": "Satellite/catalog number of the target on-orbit object for\nthis request.",
                        "format": "int32",
                        "example": 101
                    },
                    "origObjectId": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional identifier provided by the data source to indicate\nthe target object of this request. This may be an internal identifier\nand not necessarily map to a valid satellite number.",
                        "example": "ORIGOBJECT-ID"
                    },
                    "taskGroup": {
                        "maxLength": 16,
                        "minLength": 0,
                        "type": "string",
                        "description": "The tasking group to which the target object is assigned.",
                        "example": "729"
                    },
                    "iron": {
                        "type": "integer",
                        "description": "Inter-Range Operations Number.  Four-digit identifier used\nto schedule and identify AFSCN contact support for booster, launch,\nand on-orbit operations.",
                        "format": "int32",
                        "example": 3
                    },
                    "orbitRegime": {
                        "maxLength": 12,
                        "minLength": 0,
                        "type": "string",
                        "description": "The orbit regime of the target (GEO, HEO, LAUNCH, LEO, MEO,\nOTHER).",
                        "example": "GEO"
                    },
                    "targetSize": {
                        "type": "number",
                        "description": "The minimum object (diameter) size, in meters, to be reported.",
                        "format": "double",
                        "example": 1.1
                    },
                    "rcsMin": {
                        "type": "number",
                        "description": "The minimum Radar Cross-Section of the target, in m^2.  If\nonly minimum RCS is provided it is assumed to be minimum reportable\nRCS.",
                        "format": "double",
                        "example": 1.1
                    },
                    "rcs": {
                        "type": "number",
                        "description": "The Radar Cross-Section of the target, in m^2.",
                        "format": "double",
                        "example": 1.1
                    },
                    "rcsMax": {
                        "type": "number",
                        "description": "The maximum Radar Cross-Section of the target, in m^2.",
                        "format": "double",
                        "example": 1.1
                    },
                    "freqMin": {
                        "type": "number",
                        "description": "The minimum frequency of interest, in MHz.  If only minimum\nfrequency is provided it is assumed to be minimum reportable frequency.",
                        "format": "double",
                        "example": 1.1
                    },
                    "freq": {
                        "type": "number",
                        "description": "The estimated or expected emission frequency of the target,\nin MHz.",
                        "format": "double",
                        "example": 1.1
                    },
                    "freqMax": {
                        "type": "number",
                        "description": "The maximum frequency of interest, in MHz.",
                        "format": "double",
                        "example": 1.1
                    },
                    "polarization": {
                        "maxLength": 4,
                        "minLength": 0,
                        "type": "string",
                        "description": "The RF polarization (H, LHC, RHC, V).",
                        "example": "H"
                    },
                    "visMagMin": {
                        "type": "number",
                        "description": "The minimum estimated or expected visual magnitude of the\ntarget, in Magnitudes (M).  If only minimum vismag is provided it is\nassumed to be minimum reportable vismag.",
                        "format": "double",
                        "example": 1.1
                    },
                    "visMag": {
                        "type": "number",
                        "description": "The estimated or expected visual magnitude of the target,\nin Magnitudes (M).",
                        "format": "double",
                        "example": 1.1
                    },
                    "visMagMax": {
                        "type": "number",
                        "description": "The maximum estimated or expected visual magnitude of the\ntarget, in Magnitudes (M).",
                        "format": "double",
                        "example": 1.1
                    },
                    "spectralModel": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "The spectral model used for the irradiance calculation.",
                        "example": "Example Model"
                    },
                    "reflectance": {
                        "type": "number",
                        "description": "The fraction of solar energy reflected from target.",
                        "format": "double",
                        "example": 1.1
                    },
                    "irradiance": {
                        "type": "number",
                        "description": "The target object irradiance value.",
                        "format": "double",
                        "example": 1.1
                    },
                    "numFrames": {
                        "type": "integer",
                        "description": "For optical sensors, the requested number of frames to capture\nat each sensor step.",
                        "format": "int32",
                        "example": 6
                    },
                    "frameRate": {
                        "type": "number",
                        "description": "For optical sensors, the frame rate of the camera, in Hz.",
                        "format": "double",
                        "example": 1.1
                    },
                    "integrationTime": {
                        "type": "number",
                        "description": "For optical sensors, the integration time per camera frame,\nin milliseconds.",
                        "format": "double",
                        "example": 1.1
                    },
                    "numTracks": {
                        "type": "integer",
                        "description": "The number of requested tracks on the target.  If numTracks\nis not provided it is assumed to indicate all possible observations every\npass over the request duration or within the request start/end window.",
                        "format": "int32",
                        "example": 3
                    },
                    "numObs": {
                        "minimum": 1,
                        "type": "integer",
                        "description": "The number of requested observations on the target.",
                        "format": "int32",
                        "example": 9
                    },
                    "duration": {
                        "type": "integer",
                        "description": "The duration of the collect request, in seconds.  If both\nduration and endTime are provided, the endTime is assumed to take precedence.",
                        "format": "int32",
                        "example": 11
                    },
                    "srchPattern": {
                        "maxLength": 24,
                        "minLength": 0,
                        "type": "string",
                        "description": "The search pattern to be executed for this request (e.g. PICKET-FENCE,\nSCAN, etc.).",
                        "example": "SCAN"
                    },
                    "scenario": {
                        "maxLength": 24,
                        "minLength": 0,
                        "type": "string",
                        "description": "Pre-coordinated code, direction, or configuration to be executed\nby the sensor or site for this collect or contact.",
                        "example": "Example direction"
                    },
                    "idElset": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "ID of the UDL Elset of the object associated with this request.",
                        "example": "REF-ELSET-ID"
                    },
                    "idManifold": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "ID of the UDL Manifold Elset of the object associated with\nthis request.  A Manifold Elset provides theoretical Keplerian orbital\nelements belonging to an object of interest's manifold describing a possible/theoretical\norbit for an object of interest for tasking purposes.",
                        "example": "REF-MANIFOLD-ID"
                    },
                    "idStateVector": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "ID of the UDL State Vector of the object or central vector\nassociated with this request.",
                        "example": "STATEVECTOR-ID"
                    },
                    "esId": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "ID of the UDL Ephemeris Set of the object associated with this\nrequest.",
                        "example": "ES-ID"
                    },
                    "epoch": {
                        "type": "string",
                        "description": "Epoch time, in ISO 8601 UTC format, of the orbital elements.",
                        "format": "date-time",
                        "example": "2018-01-01T16:00:00.123Z"
                    },
                    "semiMajorAxis": {
                        "type": "number",
                        "description": "The average of the periapsis and apoapsis distances, in kilometers.\nFor circular orbits, the semimajor axis is the distance between the\ncenters of the bodies.",
                        "format": "double",
                        "example": 1.1
                    },
                    "eccentricity": {
                        "type": "number",
                        "description": "The orbital eccentricity of an astronomical object is a parameter\nthat determines the amount by which its orbit around another body deviates\nfrom a perfect circle.",
                        "format": "double",
                        "example": 1.1
                    },
                    "inclination": {
                        "type": "number",
                        "description": "The angle, in degrees, between the equator and the orbit plane\nwhen looking from the center of the Earth. Inclination ranges from 0-180\ndegrees, with 0-90 representing posigrade orbits and 90-180 representing\nretrograde orbits.",
                        "format": "double",
                        "example": 1.1
                    },
                    "raan": {
                        "type": "number",
                        "description": "Right ascension of the ascending node, or RAAN is the angle\nas measured in degrees eastwards (or, as seen from the north, counterclockwise)\nfrom the First Point of Aries to the ascending node.",
                        "format": "double",
                        "example": 1.1
                    },
                    "argOfPerigee": {
                        "type": "number",
                        "description": "The argument of perigee is the angle, in degrees, formed between\nthe perigee and the ascending node.",
                        "format": "double",
                        "example": 1.1
                    },
                    "trueAnomoly": {
                        "type": "number",
                        "description": "The true anomaly defines the angular position, in degrees,\nof the object on it's orbital path as measured from the orbit focal\npoint at epoch.  The true anomaly is referenced from perigee.",
                        "format": "double",
                        "example": 1.1
                    },
                    "ra": {
                        "type": "number",
                        "description": "The expected or directed right ascension angle, in degrees,\nfor search or target acquisition.",
                        "format": "double",
                        "example": 1.1
                    },
                    "dec": {
                        "type": "number",
                        "description": "The expected or directed declination angle, in degrees, for\nsearch or target acquisition.",
                        "format": "double",
                        "example": 1.1
                    },
                    "az": {
                        "type": "number",
                        "description": "The expected or directed azimuth angle, in degrees, for search\nor target acquisition.",
                        "format": "double",
                        "example": 1.1
                    },
                    "el": {
                        "type": "number",
                        "description": "The expected or directed elevation angle, in degrees, for\nsearch or target acquisition.",
                        "format": "double",
                        "example": 1.1
                    },
                    "range": {
                        "type": "number",
                        "description": "The expected acquisition range or defined center range, in\nkm.",
                        "format": "double",
                        "example": 1.1
                    },
                    "extentAz": {
                        "type": "number",
                        "description": "The extent of the azimuth angle, in degrees, from center azimuth\nto define a spatial volume.",
                        "format": "double",
                        "example": 1.1
                    },
                    "extentEl": {
                        "type": "number",
                        "description": "The extent of the elevation angle, in degrees, from center\nelevation to define a spatial volume.",
                        "format": "double",
                        "example": 1.1
                    },
                    "extentRange": {
                        "type": "number",
                        "description": "The extent of the range, in km, from center range to define\na spatial volume.",
                        "format": "double",
                        "example": 1.1
                    },
                    "lat": {
                        "maximum": 90,
                        "minimum": -90,
                        "type": "number",
                        "description": "WGS-84 latitude, in degrees. -90 to 90 degrees (negative values\nsouth of equator).  If an accompanying stopLat is provided, then the\nlat value can be assumed to be the starting latitude of a volume definition.",
                        "format": "double",
                        "example": 1.1
                    },
                    "lon": {
                        "maximum": 180,
                        "minimum": -180,
                        "type": "number",
                        "description": "WGS-84 longitude, in degrees. -180 to 180 degrees (negative\nvalues west of Prime Meridian).  If an accompanying stopLon is provided,\nthen lon value can be assumed to be the starting longitude of a volume\ndefinition.",
                        "format": "double",
                        "example": 1.1
                    },
                    "alt": {
                        "type": "number",
                        "description": "Height above WGS-84 ellipsoid (HAE), in kilometers.  If an\naccompanying stopAlt is provided, then alt value can be assumed to be\nthe starting altitude of a volume definition.",
                        "format": "double",
                        "example": 1.1
                    },
                    "stopLat": {
                        "maximum": 90,
                        "minimum": -90,
                        "type": "number",
                        "description": "The stopping WGS-84 latitude of a volume definition, in degrees.\n-90 to 90 degrees (negative values south of equator).  The stopLat\nvalue is only meaningful if a (starting) lat value is provided.",
                        "format": "double",
                        "example": 1.1
                    },
                    "stopLon": {
                        "maximum": 180,
                        "minimum": -180,
                        "type": "number",
                        "description": "The stopping WGS-84 longitude of a volume definition, in degrees.\n-180 to 180 degrees (negative values west of Prime Meridian).  The\nstopLon value is only meaningful if a (starting) lon value is provided.",
                        "format": "double",
                        "example": 1.1
                    },
                    "stopAlt": {
                        "type": "number",
                        "description": "The stopping HAE WGS-84 height above ellipsoid (HAE), of a\nvolume definition, in kilometers.  The stopAlt value is only meaningful\nif a (starting) alt value is provided.",
                        "format": "double",
                        "example": 1.1
                    },
                    "srchInc": {
                        "type": "number",
                        "description": "The maximum inclination, in degrees, to be used in search\noperations.",
                        "format": "double",
                        "example": 1.1
                    },
                    "xAngle": {
                        "type": "number",
                        "description": "The angular distance, in degrees, in the sensor-x direction\nfrom scan center defined by the central vector.  The specification of\nxAngle and yAngle defines a rectangle of width 2*xAngle and height 2*yAngle\ncentered about the central vector.",
                        "format": "double",
                        "example": 1.1
                    },
                    "yAngle": {
                        "type": "number",
                        "description": "The angular distance, in degrees, in the sensor-y direction\nfrom scan center defined by the central vector.  The specification of\nxAngle and yAngle defines a rectangle of width 2*xAngle and height 2*yAngle\ncentered about the central vector.",
                        "format": "double",
                        "example": 1.1
                    },
                    "orientAngle": {
                        "type": "number",
                        "description": "The magnitude of rotation, in degrees, between the xAngle\ndirection and locally defined equinoctial plane.  A positive value indicates\nclockwise rotation about the sensor boresight vector.",
                        "format": "double",
                        "example": 1.1
                    },
                    "customer": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "The customer for this request.",
                        "example": "Bluestaq"
                    },
                    "notes": {
                        "maxLength": 512,
                        "minLength": 0,
                        "type": "string",
                        "description": "Notes or comments associated with this request.",
                        "example": "Example notes"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Time the row was created in the database, auto-populated by\nthe system.",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2018-01-01T16:00:00.123Z"
                    },
                    "createdBy": {
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string",
                        "description": "Application user who created the row in the database, auto-populated\nby the system.",
                        "readOnly": true,
                        "example": "some.user"
                    },
                    "source": {
                        "maxLength": 36,
                        "minLength": 1,
                        "type": "string",
                        "description": "Source of the data.",
                        "example": "Bluestaq"
                    },
                    "origin": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "Originating system or organization which produced the data,\nif different from the source. The origin may be different than the source\nif the source was a mediating system which forwarded the data on behalf\nof the origin system. If null, the source may be assumed to be the origin.",
                        "example": "Example source"
                    },
                    "origNetwork": {
                        "maxLength": 32,
                        "minLength": 0,
                        "type": "string",
                        "description": "The originating source network on which this record was created,\nauto-populated by the system.",
                        "readOnly": true,
                        "example": "ORIG"
                    },
                    "dataMode": {
                        "type": "string",
                        "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
                        "example": "TEST",
                        "enum": [
                            "REAL",
                            "TEST",
                            "SIMULATED",
                            "EXERCISE"
                        ]
                    }
                },
                "description": "Collect Requests support several types of individual requests,\nor planned/scheduled tasks on sensors and/or orbital objects. Options are\nprovided to accomodate most common sensor contact and collection applications,\nincluding single sensor-object tasking, search operations, and TT&C support.\nMultiple requests originating from a plan or schedule may be associated\nto a sensor plan if desired.",
                "example": {
                    "visMagMin": 1.1,
                    "argOfPerigee": 1.1,
                    "dec": 1.1,
                    "notes": "Example notes",
                    "extentEl": 1.1,
                    "source": "Bluestaq",
                    "type": "DWELL",
                    "suffix": "T",
                    "numTracks": 3,
                    "taskGroup": "729",
                    "origNetwork": "ORIG",
                    "frameRate": 1.1,
                    "createdAt": "2018-01-01T16:00:00.123Z",
                    "idElset": "REF-ELSET-ID",
                    "stopLat": 1.1,
                    "rcsMax": 1.1,
                    "idSensor": "REF-SENSOR-ID",
                    "id": "COLLECTREQUEST-ID",
                    "yAngle": 1.1,
                    "lat": 1.1,
                    "srchPattern": "SCAN",
                    "rcsMin": 1.1,
                    "extentRange": 1.1,
                    "srchInc": 1.1,
                    "el": 1.1,
                    "alt": 1.1,
                    "raan": 1.1,
                    "msgCreateDate": "2024-04-25T08:17:01.346Z",
                    "dwellId": "DWELL-ID",
                    "priority": "EMERGENCY",
                    "ra": 1.1,
                    "idPlan": "REF-PLAN-ID",
                    "planIndex": 8,
                    "targetSize": 1.1,
                    "uctFollowUp": false,
                    "xAngle": 1.1,
                    "az": 1.1,
                    "integrationTime": 1.1,
                    "freqMin": 1.1,
                    "taskCategory": 4,
                    "numObs": 9,
                    "msgType": "SU67",
                    "idStateVector": "STATEVECTOR-ID",
                    "satNo": 101,
                    "idOnOrbit": "REF-ONORBIT-ID",
                    "esId": "ES-ID",
                    "stopLon": 1.1,
                    "origin": "Example source",
                    "freq": 1.1,
                    "range": 1.1,
                    "epoch": "2018-01-01T16:00:00.123Z",
                    "lon": 1.1,
                    "freqMax": 1.1,
                    "visMag": 1.1,
                    "origSensorId": "ORIGSENSOR-ID",
                    "trueAnomoly": 1.1,
                    "duration": 11,
                    "semiMajorAxis": 1.1,
                    "spectralModel": "Example Model",
                    "scenario": "Example direction",
                    "irradiance": 1.1,
                    "startTime": "2018-01-01T16:00:00.123Z",
                    "polarization": "H",
                    "obType": "RADAR",
                    "classificationMarking": "U",
                    "origObjectId": "ORIGOBJECT-ID",
                    "inclination": 1.1,
                    "rcs": 1.1,
                    "orientAngle": 1.1,
                    "reflectance": 1.1,
                    "eccentricity": 1.1,
                    "externalId": "EXTERNAL-ID",
                    "stopAlt": 1.1,
                    "visMagMax": 1.1,
                    "idParentReq": "da98671b-34db-47bf-8c8d-7c668b92c800",
                    "dataMode": "TEST",
                    "numFrames": 6,
                    "extentAz": 1.1,
                    "idManifold": "REF-MANIFOLD-ID",
                    "createdBy": "some.user",
                    "iron": 3,
                    "endTime": "2018-01-01T18:00:00.123Z",
                    "orbitRegime": "GEO",
                    "taskId": "TASK-ID",
                    "customer": "Bluestaq"
                }
            },
            "CollectRequest_Full": {
                "required": [
                    "classificationMarking",
                    "dataMode",
                    "source",
                    "startTime",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "maxLength": 36,
                        "minLength": 1,
                        "type": "string",
                        "description": "Unique identifier of the record, auto-generated by the system.",
                        "example": "COLLECTREQUEST-ID"
                    },
                    "classificationMarking": {
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string",
                        "description": "Classification marking of the data in IC/CAPCO Portion-marked\nformat.",
                        "example": "U"
                    },
                    "idParentReq": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "The unique ID of the collect request record from which this\nrequest originated. This may be used for cases of sensor-to-sensor tasking,\nsuch as tip/cue operations.",
                        "example": "da98671b-34db-47bf-8c8d-7c668b92c800"
                    },
                    "msgType": {
                        "maxLength": 16,
                        "minLength": 0,
                        "type": "string",
                        "description": "The type of external message from which this request originated.",
                        "example": "SU67"
                    },
                    "msgCreateDate": {
                        "type": "string",
                        "description": "The timestamp of the external message from which this request\noriginated, if applicable, in ISO8601 UTC format with millisecond precision.",
                        "format": "date-time",
                        "example": "2024-04-25T08:17:01.346Z"
                    },
                    "type": {
                        "maxLength": 36,
                        "minLength": 1,
                        "type": "string",
                        "description": "The type of this collect or contact request (DIRECTED SEARCH,\nDWELL, OBJECT, POL, RATE TRACK, SEARCH, SOI, STARE, TTC, VOLUME SEARCH,\netc.).",
                        "example": "DWELL"
                    },
                    "idPlan": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "Unique identifier of the parent plan or schedule associated\nwith this request.  If null, this request is assumed not associated\nwith a plan or schedule.",
                        "example": "REF-PLAN-ID"
                    },
                    "planIndex": {
                        "type": "integer",
                        "description": "Index number (integer) for records within a collection plan\nor schedule.",
                        "format": "int32",
                        "example": 8
                    },
                    "taskId": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "Task ID associated with this request.  A task ID may be associated\nwith a single collect request or may be used to tie together the sub-requests\nof a full collect, for example a DWELL consisting of many dwell points.",
                        "example": "TASK-ID"
                    },
                    "dwellId": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "The dwell ID associated with this request.  A dwell ID is dwell\npoint specific and a DWELL request consist of many dwell point requests.",
                        "example": "DWELL-ID"
                    },
                    "externalId": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional ID from external systems.  This field has no meaning\nwithin UDL and is provided as a convenience for systems that require tracking\nof an internal system generated ID.",
                        "example": "EXTERNAL-ID"
                    },
                    "idSensor": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "Unique identifier of the requested/scheduled/planned sensor\nassociated with this request.  If both idSensor and origSensorId are\nnull then the request is assumed to be a general request for observations\nor contact on an object, if specified, or an area/volume.  In this case,\nthe requester may specify a desired obType.",
                        "example": "REF-SENSOR-ID"
                    },
                    "origSensorId": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional identifier provided by the source to indicate the\nsensor identifier requested/scheduled/planned for this request. This\nmay be an internal identifier and not necessarily a valid sensor ID.\nIf both idSensor and origSensorId are null then the request is assumed\nto be a general request for observations or contact on an object, if\nspecified, or an area/volume.  In this case, the requester may specify\na desired obType.",
                        "example": "ORIGSENSOR-ID"
                    },
                    "obType": {
                        "maxLength": 24,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional type of observation (EO, IR, RADAR, RF-ACTIVE, RF-PASSIVE,\nOTHER) requested.  This field may correspond to a request of a specific\nsensor, or to a general non sensor specific request.",
                        "example": "RADAR"
                    },
                    "priority": {
                        "maxLength": 24,
                        "minLength": 0,
                        "type": "string",
                        "description": "The priority of the collect request  (EMERGENCY, FLASH, IMMEDIATE,\nPRIORITY, ROUTINE).",
                        "example": "EMERGENCY"
                    },
                    "taskCategory": {
                        "type": "integer",
                        "description": "The (SSN) tasking category (1-5) associated with this request.  The\ntasking category defines the priority of gathering and transmitting the\nrequested observational data.  Note that category definitions are sensor\ntype specific.",
                        "format": "int32",
                        "example": 4
                    },
                    "suffix": {
                        "maxLength": 1,
                        "minLength": 0,
                        "type": "string",
                        "description": "The (SSN) tasking suffix (A-Z) associated with this request.  The\nsuffix defines the amount of observational data and the frequency of collection.  Note\nthat suffix definitions are sensor type specific.",
                        "example": "T"
                    },
                    "uctFollowUp": {
                        "type": "boolean",
                        "description": "Boolean indicating that this collect request is UCT follow-up.",
                        "example": false
                    },
                    "startTime": {
                        "type": "string",
                        "description": "The start time or earliest time of the collect or contact\nrequest window, in ISO 8601 UTC format.",
                        "format": "date-time",
                        "example": "2018-01-01T16:00:00.123Z"
                    },
                    "endTime": {
                        "type": "string",
                        "description": "The end time of the collect or contact request window, in\nISO 8601 UTC format.  If no endTime or duration is provided it is assumed\nthe request is either ongoing or that the request is for a specified\nnumber of tracks (numTracks).  If both duration and endTime are provided,\nthe endTime is assumed to take precedence.",
                        "format": "date-time",
                        "example": "2018-01-01T18:00:00.123Z"
                    },
                    "idOnOrbit": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "Unique identifier of the target on-orbit object for this request.",
                        "readOnly": true,
                        "example": "REF-ONORBIT-ID"
                    },
                    "satNo": {
                        "type": "integer",
                        "description": "Satellite/catalog number of the target on-orbit object for\nthis request.",
                        "format": "int32",
                        "example": 101
                    },
                    "origObjectId": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional identifier provided by the data source to indicate\nthe target object of this request. This may be an internal identifier\nand not necessarily map to a valid satellite number.",
                        "example": "ORIGOBJECT-ID"
                    },
                    "taskGroup": {
                        "maxLength": 16,
                        "minLength": 0,
                        "type": "string",
                        "description": "The tasking group to which the target object is assigned.",
                        "example": "729"
                    },
                    "iron": {
                        "type": "integer",
                        "description": "Inter-Range Operations Number.  Four-digit identifier used\nto schedule and identify AFSCN contact support for booster, launch,\nand on-orbit operations.",
                        "format": "int32",
                        "example": 3
                    },
                    "orbitRegime": {
                        "maxLength": 12,
                        "minLength": 0,
                        "type": "string",
                        "description": "The orbit regime of the target (GEO, HEO, LAUNCH, LEO, MEO,\nOTHER).",
                        "example": "GEO"
                    },
                    "targetSize": {
                        "type": "number",
                        "description": "The minimum object (diameter) size, in meters, to be reported.",
                        "format": "double",
                        "example": 1.1
                    },
                    "rcsMin": {
                        "type": "number",
                        "description": "The minimum Radar Cross-Section of the target, in m^2.  If\nonly minimum RCS is provided it is assumed to be minimum reportable\nRCS.",
                        "format": "double",
                        "example": 1.1
                    },
                    "rcs": {
                        "type": "number",
                        "description": "The Radar Cross-Section of the target, in m^2.",
                        "format": "double",
                        "example": 1.1
                    },
                    "rcsMax": {
                        "type": "number",
                        "description": "The maximum Radar Cross-Section of the target, in m^2.",
                        "format": "double",
                        "example": 1.1
                    },
                    "freqMin": {
                        "type": "number",
                        "description": "The minimum frequency of interest, in MHz.  If only minimum\nfrequency is provided it is assumed to be minimum reportable frequency.",
                        "format": "double",
                        "example": 1.1
                    },
                    "freq": {
                        "type": "number",
                        "description": "The estimated or expected emission frequency of the target,\nin MHz.",
                        "format": "double",
                        "example": 1.1
                    },
                    "freqMax": {
                        "type": "number",
                        "description": "The maximum frequency of interest, in MHz.",
                        "format": "double",
                        "example": 1.1
                    },
                    "polarization": {
                        "maxLength": 4,
                        "minLength": 0,
                        "type": "string",
                        "description": "The RF polarization (H, LHC, RHC, V).",
                        "example": "H"
                    },
                    "visMagMin": {
                        "type": "number",
                        "description": "The minimum estimated or expected visual magnitude of the\ntarget, in Magnitudes (M).  If only minimum vismag is provided it is\nassumed to be minimum reportable vismag.",
                        "format": "double",
                        "example": 1.1
                    },
                    "visMag": {
                        "type": "number",
                        "description": "The estimated or expected visual magnitude of the target,\nin Magnitudes (M).",
                        "format": "double",
                        "example": 1.1
                    },
                    "visMagMax": {
                        "type": "number",
                        "description": "The maximum estimated or expected visual magnitude of the\ntarget, in Magnitudes (M).",
                        "format": "double",
                        "example": 1.1
                    },
                    "spectralModel": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "The spectral model used for the irradiance calculation.",
                        "example": "Example Model"
                    },
                    "reflectance": {
                        "type": "number",
                        "description": "The fraction of solar energy reflected from target.",
                        "format": "double",
                        "example": 1.1
                    },
                    "irradiance": {
                        "type": "number",
                        "description": "The target object irradiance value.",
                        "format": "double",
                        "example": 1.1
                    },
                    "numFrames": {
                        "type": "integer",
                        "description": "For optical sensors, the requested number of frames to capture\nat each sensor step.",
                        "format": "int32",
                        "example": 6
                    },
                    "frameRate": {
                        "type": "number",
                        "description": "For optical sensors, the frame rate of the camera, in Hz.",
                        "format": "double",
                        "example": 1.1
                    },
                    "integrationTime": {
                        "type": "number",
                        "description": "For optical sensors, the integration time per camera frame,\nin milliseconds.",
                        "format": "double",
                        "example": 1.1
                    },
                    "numTracks": {
                        "type": "integer",
                        "description": "The number of requested tracks on the target.  If numTracks\nis not provided it is assumed to indicate all possible observations every\npass over the request duration or within the request start/end window.",
                        "format": "int32",
                        "example": 3
                    },
                    "numObs": {
                        "minimum": 1,
                        "type": "integer",
                        "description": "The number of requested observations on the target.",
                        "format": "int32",
                        "example": 9
                    },
                    "duration": {
                        "type": "integer",
                        "description": "The duration of the collect request, in seconds.  If both\nduration and endTime are provided, the endTime is assumed to take precedence.",
                        "format": "int32",
                        "example": 11
                    },
                    "srchPattern": {
                        "maxLength": 24,
                        "minLength": 0,
                        "type": "string",
                        "description": "The search pattern to be executed for this request (e.g. PICKET-FENCE,\nSCAN, etc.).",
                        "example": "SCAN"
                    },
                    "scenario": {
                        "maxLength": 24,
                        "minLength": 0,
                        "type": "string",
                        "description": "Pre-coordinated code, direction, or configuration to be executed\nby the sensor or site for this collect or contact.",
                        "example": "Example direction"
                    },
                    "idElset": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "ID of the UDL Elset of the object associated with this request.",
                        "example": "REF-ELSET-ID"
                    },
                    "idManifold": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "ID of the UDL Manifold Elset of the object associated with\nthis request.  A Manifold Elset provides theoretical Keplerian orbital\nelements belonging to an object of interest's manifold describing a possible/theoretical\norbit for an object of interest for tasking purposes.",
                        "example": "REF-MANIFOLD-ID"
                    },
                    "idStateVector": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "ID of the UDL State Vector of the object or central vector\nassociated with this request.",
                        "example": "STATEVECTOR-ID"
                    },
                    "esId": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "ID of the UDL Ephemeris Set of the object associated with this\nrequest.",
                        "example": "ES-ID"
                    },
                    "epoch": {
                        "type": "string",
                        "description": "Epoch time, in ISO 8601 UTC format, of the orbital elements.",
                        "format": "date-time",
                        "example": "2018-01-01T16:00:00.123Z"
                    },
                    "semiMajorAxis": {
                        "type": "number",
                        "description": "The average of the periapsis and apoapsis distances, in kilometers.\nFor circular orbits, the semimajor axis is the distance between the\ncenters of the bodies.",
                        "format": "double",
                        "example": 1.1
                    },
                    "eccentricity": {
                        "type": "number",
                        "description": "The orbital eccentricity of an astronomical object is a parameter\nthat determines the amount by which its orbit around another body deviates\nfrom a perfect circle.",
                        "format": "double",
                        "example": 1.1
                    },
                    "inclination": {
                        "type": "number",
                        "description": "The angle, in degrees, between the equator and the orbit plane\nwhen looking from the center of the Earth. Inclination ranges from 0-180\ndegrees, with 0-90 representing posigrade orbits and 90-180 representing\nretrograde orbits.",
                        "format": "double",
                        "example": 1.1
                    },
                    "raan": {
                        "type": "number",
                        "description": "Right ascension of the ascending node, or RAAN is the angle\nas measured in degrees eastwards (or, as seen from the north, counterclockwise)\nfrom the First Point of Aries to the ascending node.",
                        "format": "double",
                        "example": 1.1
                    },
                    "argOfPerigee": {
                        "type": "number",
                        "description": "The argument of perigee is the angle, in degrees, formed between\nthe perigee and the ascending node.",
                        "format": "double",
                        "example": 1.1
                    },
                    "trueAnomoly": {
                        "type": "number",
                        "description": "The true anomaly defines the angular position, in degrees,\nof the object on it's orbital path as measured from the orbit focal\npoint at epoch.  The true anomaly is referenced from perigee.",
                        "format": "double",
                        "example": 1.1
                    },
                    "ra": {
                        "type": "number",
                        "description": "The expected or directed right ascension angle, in degrees,\nfor search or target acquisition.",
                        "format": "double",
                        "example": 1.1
                    },
                    "dec": {
                        "type": "number",
                        "description": "The expected or directed declination angle, in degrees, for\nsearch or target acquisition.",
                        "format": "double",
                        "example": 1.1
                    },
                    "az": {
                        "type": "number",
                        "description": "The expected or directed azimuth angle, in degrees, for search\nor target acquisition.",
                        "format": "double",
                        "example": 1.1
                    },
                    "el": {
                        "type": "number",
                        "description": "The expected or directed elevation angle, in degrees, for\nsearch or target acquisition.",
                        "format": "double",
                        "example": 1.1
                    },
                    "range": {
                        "type": "number",
                        "description": "The expected acquisition range or defined center range, in\nkm.",
                        "format": "double",
                        "example": 1.1
                    },
                    "extentAz": {
                        "type": "number",
                        "description": "The extent of the azimuth angle, in degrees, from center azimuth\nto define a spatial volume.",
                        "format": "double",
                        "example": 1.1
                    },
                    "extentEl": {
                        "type": "number",
                        "description": "The extent of the elevation angle, in degrees, from center\nelevation to define a spatial volume.",
                        "format": "double",
                        "example": 1.1
                    },
                    "extentRange": {
                        "type": "number",
                        "description": "The extent of the range, in km, from center range to define\na spatial volume.",
                        "format": "double",
                        "example": 1.1
                    },
                    "lat": {
                        "maximum": 90,
                        "minimum": -90,
                        "type": "number",
                        "description": "WGS-84 latitude, in degrees. -90 to 90 degrees (negative values\nsouth of equator).  If an accompanying stopLat is provided, then the\nlat value can be assumed to be the starting latitude of a volume definition.",
                        "format": "double",
                        "example": 1.1
                    },
                    "lon": {
                        "maximum": 180,
                        "minimum": -180,
                        "type": "number",
                        "description": "WGS-84 longitude, in degrees. -180 to 180 degrees (negative\nvalues west of Prime Meridian).  If an accompanying stopLon is provided,\nthen lon value can be assumed to be the starting longitude of a volume\ndefinition.",
                        "format": "double",
                        "example": 1.1
                    },
                    "alt": {
                        "type": "number",
                        "description": "Height above WGS-84 ellipsoid (HAE), in kilometers.  If an\naccompanying stopAlt is provided, then alt value can be assumed to be\nthe starting altitude of a volume definition.",
                        "format": "double",
                        "example": 1.1
                    },
                    "stopLat": {
                        "maximum": 90,
                        "minimum": -90,
                        "type": "number",
                        "description": "The stopping WGS-84 latitude of a volume definition, in degrees.\n-90 to 90 degrees (negative values south of equator).  The stopLat\nvalue is only meaningful if a (starting) lat value is provided.",
                        "format": "double",
                        "example": 1.1
                    },
                    "stopLon": {
                        "maximum": 180,
                        "minimum": -180,
                        "type": "number",
                        "description": "The stopping WGS-84 longitude of a volume definition, in degrees.\n-180 to 180 degrees (negative values west of Prime Meridian).  The\nstopLon value is only meaningful if a (starting) lon value is provided.",
                        "format": "double",
                        "example": 1.1
                    },
                    "stopAlt": {
                        "type": "number",
                        "description": "The stopping HAE WGS-84 height above ellipsoid (HAE), of a\nvolume definition, in kilometers.  The stopAlt value is only meaningful\nif a (starting) alt value is provided.",
                        "format": "double",
                        "example": 1.1
                    },
                    "srchInc": {
                        "type": "number",
                        "description": "The maximum inclination, in degrees, to be used in search\noperations.",
                        "format": "double",
                        "example": 1.1
                    },
                    "xAngle": {
                        "type": "number",
                        "description": "The angular distance, in degrees, in the sensor-x direction\nfrom scan center defined by the central vector.  The specification of\nxAngle and yAngle defines a rectangle of width 2*xAngle and height 2*yAngle\ncentered about the central vector.",
                        "format": "double",
                        "example": 1.1
                    },
                    "yAngle": {
                        "type": "number",
                        "description": "The angular distance, in degrees, in the sensor-y direction\nfrom scan center defined by the central vector.  The specification of\nxAngle and yAngle defines a rectangle of width 2*xAngle and height 2*yAngle\ncentered about the central vector.",
                        "format": "double",
                        "example": 1.1
                    },
                    "orientAngle": {
                        "type": "number",
                        "description": "The magnitude of rotation, in degrees, between the xAngle\ndirection and locally defined equinoctial plane.  A positive value indicates\nclockwise rotation about the sensor boresight vector.",
                        "format": "double",
                        "example": 1.1
                    },
                    "customer": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "The customer for this request.",
                        "example": "Bluestaq"
                    },
                    "notes": {
                        "maxLength": 512,
                        "minLength": 0,
                        "type": "string",
                        "description": "Notes or comments associated with this request.",
                        "example": "Example notes"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Time the row was last updated in the database, auto-populated\nby the system.",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2018-01-01T16:00:00.123Z"
                    },
                    "updatedBy": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "Application user who updated the row in the database, auto-populated\nby the system.",
                        "readOnly": true,
                        "example": "some.user"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Time the row was created in the database, auto-populated by\nthe system.",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2018-01-01T16:00:00.123Z"
                    },
                    "createdBy": {
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string",
                        "description": "Application user who created the row in the database, auto-populated\nby the system.",
                        "readOnly": true,
                        "example": "some.user"
                    },
                    "source": {
                        "maxLength": 36,
                        "minLength": 1,
                        "type": "string",
                        "description": "Source of the data.",
                        "example": "Bluestaq"
                    },
                    "origin": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "Originating system or organization which produced the data,\nif different from the source. The origin may be different than the source\nif the source was a mediating system which forwarded the data on behalf\nof the origin system. If null, the source may be assumed to be the origin.",
                        "example": "Example source"
                    },
                    "origNetwork": {
                        "maxLength": 32,
                        "minLength": 0,
                        "type": "string",
                        "description": "The originating source network on which this record was created,\nauto-populated by the system.",
                        "readOnly": true,
                        "example": "ORIG"
                    },
                    "dataMode": {
                        "type": "string",
                        "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
                        "example": "TEST",
                        "enum": [
                            "REAL",
                            "TEST",
                            "SIMULATED",
                            "EXERCISE"
                        ]
                    }
                },
                "description": "Collect Requests support several types of individual requests,\nor planned/scheduled tasks on sensors and/or orbital objects. Options are\nprovided to accomodate most common sensor contact and collection applications,\nincluding single sensor-object tasking, search operations, and TT&C support.\nMultiple requests originating from a plan or schedule may be associated\nto a sensor plan if desired.",
                "example": {
                    "visMagMin": 1.1,
                    "argOfPerigee": 1.1,
                    "dec": 1.1,
                    "notes": "Example notes",
                    "extentEl": 1.1,
                    "source": "Bluestaq",
                    "type": "DWELL",
                    "suffix": "T",
                    "numTracks": 3,
                    "taskGroup": "729",
                    "origNetwork": "ORIG",
                    "frameRate": 1.1,
                    "createdAt": "2018-01-01T16:00:00.123Z",
                    "idElset": "REF-ELSET-ID",
                    "stopLat": 1.1,
                    "rcsMax": 1.1,
                    "idSensor": "REF-SENSOR-ID",
                    "id": "COLLECTREQUEST-ID",
                    "yAngle": 1.1,
                    "lat": 1.1,
                    "srchPattern": "SCAN",
                    "updatedAt": "2018-01-01T16:00:00.123Z",
                    "rcsMin": 1.1,
                    "extentRange": 1.1,
                    "srchInc": 1.1,
                    "updatedBy": "some.user",
                    "el": 1.1,
                    "alt": 1.1,
                    "raan": 1.1,
                    "msgCreateDate": "2024-04-25T08:17:01.346Z",
                    "dwellId": "DWELL-ID",
                    "priority": "EMERGENCY",
                    "ra": 1.1,
                    "idPlan": "REF-PLAN-ID",
                    "planIndex": 8,
                    "targetSize": 1.1,
                    "uctFollowUp": false,
                    "xAngle": 1.1,
                    "az": 1.1,
                    "integrationTime": 1.1,
                    "freqMin": 1.1,
                    "taskCategory": 4,
                    "numObs": 9,
                    "msgType": "SU67",
                    "idStateVector": "STATEVECTOR-ID",
                    "satNo": 101,
                    "idOnOrbit": "REF-ONORBIT-ID",
                    "esId": "ES-ID",
                    "stopLon": 1.1,
                    "origin": "Example source",
                    "freq": 1.1,
                    "range": 1.1,
                    "epoch": "2018-01-01T16:00:00.123Z",
                    "lon": 1.1,
                    "freqMax": 1.1,
                    "visMag": 1.1,
                    "origSensorId": "ORIGSENSOR-ID",
                    "trueAnomoly": 1.1,
                    "duration": 11,
                    "semiMajorAxis": 1.1,
                    "spectralModel": "Example Model",
                    "scenario": "Example direction",
                    "irradiance": 1.1,
                    "startTime": "2018-01-01T16:00:00.123Z",
                    "polarization": "H",
                    "obType": "RADAR",
                    "classificationMarking": "U",
                    "origObjectId": "ORIGOBJECT-ID",
                    "inclination": 1.1,
                    "rcs": 1.1,
                    "orientAngle": 1.1,
                    "reflectance": 1.1,
                    "eccentricity": 1.1,
                    "externalId": "EXTERNAL-ID",
                    "stopAlt": 1.1,
                    "visMagMax": 1.1,
                    "idParentReq": "da98671b-34db-47bf-8c8d-7c668b92c800",
                    "dataMode": "TEST",
                    "numFrames": 6,
                    "extentAz": 1.1,
                    "idManifold": "REF-MANIFOLD-ID",
                    "createdBy": "some.user",
                    "iron": 3,
                    "endTime": "2018-01-01T18:00:00.123Z",
                    "orbitRegime": "GEO",
                    "taskId": "TASK-ID",
                    "customer": "Bluestaq"
                }
            },
            "CollectRequest_Ingest": {
                "required": [
                    "classificationMarking",
                    "dataMode",
                    "source",
                    "startTime",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "maxLength": 36,
                        "minLength": 1,
                        "type": "string",
                        "description": "Unique identifier of the record, auto-generated by the system.",
                        "example": "COLLECTREQUEST-ID"
                    },
                    "classificationMarking": {
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string",
                        "description": "Classification marking of the data in IC/CAPCO Portion-marked\nformat.",
                        "example": "U"
                    },
                    "idParentReq": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "The unique ID of the collect request record from which this\nrequest originated. This may be used for cases of sensor-to-sensor tasking,\nsuch as tip/cue operations.",
                        "example": "da98671b-34db-47bf-8c8d-7c668b92c800"
                    },
                    "msgType": {
                        "maxLength": 16,
                        "minLength": 0,
                        "type": "string",
                        "description": "The type of external message from which this request originated.",
                        "example": "SU67"
                    },
                    "msgCreateDate": {
                        "type": "string",
                        "description": "The timestamp of the external message from which this request\noriginated, if applicable, in ISO8601 UTC format with millisecond precision.",
                        "format": "date-time",
                        "example": "2024-04-25T08:17:01.346Z"
                    },
                    "type": {
                        "maxLength": 36,
                        "minLength": 1,
                        "type": "string",
                        "description": "The type of this collect or contact request (DIRECTED SEARCH,\nDWELL, OBJECT, POL, RATE TRACK, SEARCH, SOI, STARE, TTC, VOLUME SEARCH,\netc.).",
                        "example": "DWELL"
                    },
                    "idPlan": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "Unique identifier of the parent plan or schedule associated\nwith this request.  If null, this request is assumed not associated\nwith a plan or schedule.",
                        "example": "REF-PLAN-ID"
                    },
                    "planIndex": {
                        "type": "integer",
                        "description": "Index number (integer) for records within a collection plan\nor schedule.",
                        "format": "int32",
                        "example": 8
                    },
                    "taskId": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "Task ID associated with this request.  A task ID may be associated\nwith a single collect request or may be used to tie together the sub-requests\nof a full collect, for example a DWELL consisting of many dwell points.",
                        "example": "TASK-ID"
                    },
                    "dwellId": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "The dwell ID associated with this request.  A dwell ID is dwell\npoint specific and a DWELL request consist of many dwell point requests.",
                        "example": "DWELL-ID"
                    },
                    "externalId": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional ID from external systems.  This field has no meaning\nwithin UDL and is provided as a convenience for systems that require tracking\nof an internal system generated ID.",
                        "example": "EXTERNAL-ID"
                    },
                    "idSensor": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "Unique identifier of the requested/scheduled/planned sensor\nassociated with this request.  If both idSensor and origSensorId are\nnull then the request is assumed to be a general request for observations\nor contact on an object, if specified, or an area/volume.  In this case,\nthe requester may specify a desired obType.",
                        "example": "REF-SENSOR-ID"
                    },
                    "origSensorId": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional identifier provided by the source to indicate the\nsensor identifier requested/scheduled/planned for this request. This\nmay be an internal identifier and not necessarily a valid sensor ID.\nIf both idSensor and origSensorId are null then the request is assumed\nto be a general request for observations or contact on an object, if\nspecified, or an area/volume.  In this case, the requester may specify\na desired obType.",
                        "example": "ORIGSENSOR-ID"
                    },
                    "obType": {
                        "maxLength": 24,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional type of observation (EO, IR, RADAR, RF-ACTIVE, RF-PASSIVE,\nOTHER) requested.  This field may correspond to a request of a specific\nsensor, or to a general non sensor specific request.",
                        "example": "RADAR"
                    },
                    "priority": {
                        "maxLength": 24,
                        "minLength": 0,
                        "type": "string",
                        "description": "The priority of the collect request  (EMERGENCY, FLASH, IMMEDIATE,\nPRIORITY, ROUTINE).",
                        "example": "EMERGENCY"
                    },
                    "taskCategory": {
                        "type": "integer",
                        "description": "The (SSN) tasking category (1-5) associated with this request.  The\ntasking category defines the priority of gathering and transmitting the\nrequested observational data.  Note that category definitions are sensor\ntype specific.",
                        "format": "int32",
                        "example": 4
                    },
                    "suffix": {
                        "maxLength": 1,
                        "minLength": 0,
                        "type": "string",
                        "description": "The (SSN) tasking suffix (A-Z) associated with this request.  The\nsuffix defines the amount of observational data and the frequency of collection.  Note\nthat suffix definitions are sensor type specific.",
                        "example": "T"
                    },
                    "uctFollowUp": {
                        "type": "boolean",
                        "description": "Boolean indicating that this collect request is UCT follow-up.",
                        "example": false
                    },
                    "startTime": {
                        "type": "string",
                        "description": "The start time or earliest time of the collect or contact\nrequest window, in ISO 8601 UTC format.",
                        "format": "date-time",
                        "example": "2018-01-01T16:00:00.123Z"
                    },
                    "endTime": {
                        "type": "string",
                        "description": "The end time of the collect or contact request window, in\nISO 8601 UTC format.  If no endTime or duration is provided it is assumed\nthe request is either ongoing or that the request is for a specified\nnumber of tracks (numTracks).  If both duration and endTime are provided,\nthe endTime is assumed to take precedence.",
                        "format": "date-time",
                        "example": "2018-01-01T18:00:00.123Z"
                    },
                    "idOnOrbit": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "Unique identifier of the target on-orbit object for this request.",
                        "readOnly": true,
                        "example": "REF-ONORBIT-ID"
                    },
                    "satNo": {
                        "type": "integer",
                        "description": "Satellite/catalog number of the target on-orbit object for\nthis request.",
                        "format": "int32",
                        "example": 101
                    },
                    "origObjectId": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional identifier provided by the data source to indicate\nthe target object of this request. This may be an internal identifier\nand not necessarily map to a valid satellite number.",
                        "example": "ORIGOBJECT-ID"
                    },
                    "taskGroup": {
                        "maxLength": 16,
                        "minLength": 0,
                        "type": "string",
                        "description": "The tasking group to which the target object is assigned.",
                        "example": "729"
                    },
                    "iron": {
                        "type": "integer",
                        "description": "Inter-Range Operations Number.  Four-digit identifier used\nto schedule and identify AFSCN contact support for booster, launch,\nand on-orbit operations.",
                        "format": "int32",
                        "example": 3
                    },
                    "orbitRegime": {
                        "maxLength": 12,
                        "minLength": 0,
                        "type": "string",
                        "description": "The orbit regime of the target (GEO, HEO, LAUNCH, LEO, MEO,\nOTHER).",
                        "example": "GEO"
                    },
                    "targetSize": {
                        "type": "number",
                        "description": "The minimum object (diameter) size, in meters, to be reported.",
                        "format": "double",
                        "example": 1.1
                    },
                    "rcsMin": {
                        "type": "number",
                        "description": "The minimum Radar Cross-Section of the target, in m^2.  If\nonly minimum RCS is provided it is assumed to be minimum reportable\nRCS.",
                        "format": "double",
                        "example": 1.1
                    },
                    "rcs": {
                        "type": "number",
                        "description": "The Radar Cross-Section of the target, in m^2.",
                        "format": "double",
                        "example": 1.1
                    },
                    "rcsMax": {
                        "type": "number",
                        "description": "The maximum Radar Cross-Section of the target, in m^2.",
                        "format": "double",
                        "example": 1.1
                    },
                    "freqMin": {
                        "type": "number",
                        "description": "The minimum frequency of interest, in MHz.  If only minimum\nfrequency is provided it is assumed to be minimum reportable frequency.",
                        "format": "double",
                        "example": 1.1
                    },
                    "freq": {
                        "type": "number",
                        "description": "The estimated or expected emission frequency of the target,\nin MHz.",
                        "format": "double",
                        "example": 1.1
                    },
                    "freqMax": {
                        "type": "number",
                        "description": "The maximum frequency of interest, in MHz.",
                        "format": "double",
                        "example": 1.1
                    },
                    "polarization": {
                        "maxLength": 4,
                        "minLength": 0,
                        "type": "string",
                        "description": "The RF polarization (H, LHC, RHC, V).",
                        "example": "H"
                    },
                    "visMagMin": {
                        "type": "number",
                        "description": "The minimum estimated or expected visual magnitude of the\ntarget, in Magnitudes (M).  If only minimum vismag is provided it is\nassumed to be minimum reportable vismag.",
                        "format": "double",
                        "example": 1.1
                    },
                    "visMag": {
                        "type": "number",
                        "description": "The estimated or expected visual magnitude of the target,\nin Magnitudes (M).",
                        "format": "double",
                        "example": 1.1
                    },
                    "visMagMax": {
                        "type": "number",
                        "description": "The maximum estimated or expected visual magnitude of the\ntarget, in Magnitudes (M).",
                        "format": "double",
                        "example": 1.1
                    },
                    "spectralModel": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "The spectral model used for the irradiance calculation.",
                        "example": "Example Model"
                    },
                    "reflectance": {
                        "type": "number",
                        "description": "The fraction of solar energy reflected from target.",
                        "format": "double",
                        "example": 1.1
                    },
                    "irradiance": {
                        "type": "number",
                        "description": "The target object irradiance value.",
                        "format": "double",
                        "example": 1.1
                    },
                    "numFrames": {
                        "type": "integer",
                        "description": "For optical sensors, the requested number of frames to capture\nat each sensor step.",
                        "format": "int32",
                        "example": 6
                    },
                    "frameRate": {
                        "type": "number",
                        "description": "For optical sensors, the frame rate of the camera, in Hz.",
                        "format": "double",
                        "example": 1.1
                    },
                    "integrationTime": {
                        "type": "number",
                        "description": "For optical sensors, the integration time per camera frame,\nin milliseconds.",
                        "format": "double",
                        "example": 1.1
                    },
                    "numTracks": {
                        "type": "integer",
                        "description": "The number of requested tracks on the target.  If numTracks\nis not provided it is assumed to indicate all possible observations every\npass over the request duration or within the request start/end window.",
                        "format": "int32",
                        "example": 3
                    },
                    "numObs": {
                        "minimum": 1,
                        "type": "integer",
                        "description": "The number of requested observations on the target.",
                        "format": "int32",
                        "example": 9
                    },
                    "duration": {
                        "type": "integer",
                        "description": "The duration of the collect request, in seconds.  If both\nduration and endTime are provided, the endTime is assumed to take precedence.",
                        "format": "int32",
                        "example": 11
                    },
                    "srchPattern": {
                        "maxLength": 24,
                        "minLength": 0,
                        "type": "string",
                        "description": "The search pattern to be executed for this request (e.g. PICKET-FENCE,\nSCAN, etc.).",
                        "example": "SCAN"
                    },
                    "scenario": {
                        "maxLength": 24,
                        "minLength": 0,
                        "type": "string",
                        "description": "Pre-coordinated code, direction, or configuration to be executed\nby the sensor or site for this collect or contact.",
                        "example": "Example direction"
                    },
                    "idElset": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "ID of the UDL Elset of the object associated with this request.",
                        "example": "REF-ELSET-ID"
                    },
                    "idManifold": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "ID of the UDL Manifold Elset of the object associated with\nthis request.  A Manifold Elset provides theoretical Keplerian orbital\nelements belonging to an object of interest's manifold describing a possible/theoretical\norbit for an object of interest for tasking purposes.",
                        "example": "REF-MANIFOLD-ID"
                    },
                    "idStateVector": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "ID of the UDL State Vector of the object or central vector\nassociated with this request.",
                        "example": "STATEVECTOR-ID"
                    },
                    "esId": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "ID of the UDL Ephemeris Set of the object associated with this\nrequest.",
                        "example": "ES-ID"
                    },
                    "epoch": {
                        "type": "string",
                        "description": "Epoch time, in ISO 8601 UTC format, of the orbital elements.",
                        "format": "date-time",
                        "example": "2018-01-01T16:00:00.123Z"
                    },
                    "semiMajorAxis": {
                        "type": "number",
                        "description": "The average of the periapsis and apoapsis distances, in kilometers.\nFor circular orbits, the semimajor axis is the distance between the\ncenters of the bodies.",
                        "format": "double",
                        "example": 1.1
                    },
                    "eccentricity": {
                        "type": "number",
                        "description": "The orbital eccentricity of an astronomical object is a parameter\nthat determines the amount by which its orbit around another body deviates\nfrom a perfect circle.",
                        "format": "double",
                        "example": 1.1
                    },
                    "inclination": {
                        "type": "number",
                        "description": "The angle, in degrees, between the equator and the orbit plane\nwhen looking from the center of the Earth. Inclination ranges from 0-180\ndegrees, with 0-90 representing posigrade orbits and 90-180 representing\nretrograde orbits.",
                        "format": "double",
                        "example": 1.1
                    },
                    "raan": {
                        "type": "number",
                        "description": "Right ascension of the ascending node, or RAAN is the angle\nas measured in degrees eastwards (or, as seen from the north, counterclockwise)\nfrom the First Point of Aries to the ascending node.",
                        "format": "double",
                        "example": 1.1
                    },
                    "argOfPerigee": {
                        "type": "number",
                        "description": "The argument of perigee is the angle, in degrees, formed between\nthe perigee and the ascending node.",
                        "format": "double",
                        "example": 1.1
                    },
                    "trueAnomoly": {
                        "type": "number",
                        "description": "The true anomaly defines the angular position, in degrees,\nof the object on it's orbital path as measured from the orbit focal\npoint at epoch.  The true anomaly is referenced from perigee.",
                        "format": "double",
                        "example": 1.1
                    },
                    "ra": {
                        "type": "number",
                        "description": "The expected or directed right ascension angle, in degrees,\nfor search or target acquisition.",
                        "format": "double",
                        "example": 1.1
                    },
                    "dec": {
                        "type": "number",
                        "description": "The expected or directed declination angle, in degrees, for\nsearch or target acquisition.",
                        "format": "double",
                        "example": 1.1
                    },
                    "az": {
                        "type": "number",
                        "description": "The expected or directed azimuth angle, in degrees, for search\nor target acquisition.",
                        "format": "double",
                        "example": 1.1
                    },
                    "el": {
                        "type": "number",
                        "description": "The expected or directed elevation angle, in degrees, for\nsearch or target acquisition.",
                        "format": "double",
                        "example": 1.1
                    },
                    "range": {
                        "type": "number",
                        "description": "The expected acquisition range or defined center range, in\nkm.",
                        "format": "double",
                        "example": 1.1
                    },
                    "extentAz": {
                        "type": "number",
                        "description": "The extent of the azimuth angle, in degrees, from center azimuth\nto define a spatial volume.",
                        "format": "double",
                        "example": 1.1
                    },
                    "extentEl": {
                        "type": "number",
                        "description": "The extent of the elevation angle, in degrees, from center\nelevation to define a spatial volume.",
                        "format": "double",
                        "example": 1.1
                    },
                    "extentRange": {
                        "type": "number",
                        "description": "The extent of the range, in km, from center range to define\na spatial volume.",
                        "format": "double",
                        "example": 1.1
                    },
                    "lat": {
                        "maximum": 90,
                        "minimum": -90,
                        "type": "number",
                        "description": "WGS-84 latitude, in degrees. -90 to 90 degrees (negative values\nsouth of equator).  If an accompanying stopLat is provided, then the\nlat value can be assumed to be the starting latitude of a volume definition.",
                        "format": "double",
                        "example": 1.1
                    },
                    "lon": {
                        "maximum": 180,
                        "minimum": -180,
                        "type": "number",
                        "description": "WGS-84 longitude, in degrees. -180 to 180 degrees (negative\nvalues west of Prime Meridian).  If an accompanying stopLon is provided,\nthen lon value can be assumed to be the starting longitude of a volume\ndefinition.",
                        "format": "double",
                        "example": 1.1
                    },
                    "alt": {
                        "type": "number",
                        "description": "Height above WGS-84 ellipsoid (HAE), in kilometers.  If an\naccompanying stopAlt is provided, then alt value can be assumed to be\nthe starting altitude of a volume definition.",
                        "format": "double",
                        "example": 1.1
                    },
                    "stopLat": {
                        "maximum": 90,
                        "minimum": -90,
                        "type": "number",
                        "description": "The stopping WGS-84 latitude of a volume definition, in degrees.\n-90 to 90 degrees (negative values south of equator).  The stopLat\nvalue is only meaningful if a (starting) lat value is provided.",
                        "format": "double",
                        "example": 1.1
                    },
                    "stopLon": {
                        "maximum": 180,
                        "minimum": -180,
                        "type": "number",
                        "description": "The stopping WGS-84 longitude of a volume definition, in degrees.\n-180 to 180 degrees (negative values west of Prime Meridian).  The\nstopLon value is only meaningful if a (starting) lon value is provided.",
                        "format": "double",
                        "example": 1.1
                    },
                    "stopAlt": {
                        "type": "number",
                        "description": "The stopping HAE WGS-84 height above ellipsoid (HAE), of a\nvolume definition, in kilometers.  The stopAlt value is only meaningful\nif a (starting) alt value is provided.",
                        "format": "double",
                        "example": 1.1
                    },
                    "srchInc": {
                        "type": "number",
                        "description": "The maximum inclination, in degrees, to be used in search\noperations.",
                        "format": "double",
                        "example": 1.1
                    },
                    "xAngle": {
                        "type": "number",
                        "description": "The angular distance, in degrees, in the sensor-x direction\nfrom scan center defined by the central vector.  The specification of\nxAngle and yAngle defines a rectangle of width 2*xAngle and height 2*yAngle\ncentered about the central vector.",
                        "format": "double",
                        "example": 1.1
                    },
                    "yAngle": {
                        "type": "number",
                        "description": "The angular distance, in degrees, in the sensor-y direction\nfrom scan center defined by the central vector.  The specification of\nxAngle and yAngle defines a rectangle of width 2*xAngle and height 2*yAngle\ncentered about the central vector.",
                        "format": "double",
                        "example": 1.1
                    },
                    "orientAngle": {
                        "type": "number",
                        "description": "The magnitude of rotation, in degrees, between the xAngle\ndirection and locally defined equinoctial plane.  A positive value indicates\nclockwise rotation about the sensor boresight vector.",
                        "format": "double",
                        "example": 1.1
                    },
                    "customer": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "The customer for this request.",
                        "example": "Bluestaq"
                    },
                    "notes": {
                        "maxLength": 512,
                        "minLength": 0,
                        "type": "string",
                        "description": "Notes or comments associated with this request.",
                        "example": "Example notes"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Time the row was created in the database, auto-populated by\nthe system.",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2018-01-01T16:00:00.123Z"
                    },
                    "createdBy": {
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string",
                        "description": "Application user who created the row in the database, auto-populated\nby the system.",
                        "readOnly": true,
                        "example": "some.user"
                    },
                    "source": {
                        "maxLength": 36,
                        "minLength": 1,
                        "type": "string",
                        "description": "Source of the data.",
                        "example": "Bluestaq"
                    },
                    "origin": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "Originating system or organization which produced the data,\nif different from the source. The origin may be different than the source\nif the source was a mediating system which forwarded the data on behalf\nof the origin system. If null, the source may be assumed to be the origin.",
                        "example": "Example source"
                    },
                    "origNetwork": {
                        "maxLength": 32,
                        "minLength": 0,
                        "type": "string",
                        "description": "The originating source network on which this record was created,\nauto-populated by the system.",
                        "readOnly": true,
                        "example": "ORIG"
                    },
                    "dataMode": {
                        "type": "string",
                        "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
                        "example": "TEST",
                        "enum": [
                            "REAL",
                            "TEST",
                            "SIMULATED",
                            "EXERCISE"
                        ]
                    }
                },
                "description": "Collect Requests support several types of individual requests,\nor planned/scheduled tasks on sensors and/or orbital objects. Options are\nprovided to accomodate most common sensor contact and collection applications,\nincluding single sensor-object tasking, search operations, and TT&C support.\nMultiple requests originating from a plan or schedule may be associated\nto a sensor plan if desired."
            },
            "CollectResponse_Abridged": {
                "required": [
                    "classificationMarking",
                    "dataMode",
                    "idRequest",
                    "source"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "maxLength": 36,
                        "minLength": 1,
                        "type": "string",
                        "description": "Unique identifier of the record, auto-generated by the system.",
                        "example": "COLLECTRESPONSE-ID"
                    },
                    "classificationMarking": {
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string",
                        "description": "Classification marking of the data in IC/CAPCO Portion-marked\nformat.",
                        "example": "U"
                    },
                    "idRequest": {
                        "maxLength": 36,
                        "minLength": 1,
                        "type": "string",
                        "description": "Unique identifier of the request associated with this response.",
                        "example": "REF-REQUEST-ID"
                    },
                    "idOnOrbit": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "Unique identifier of the target on-orbit object associated\nwith this response.",
                        "readOnly": true,
                        "example": "REF-ONORBIT-ID"
                    },
                    "origObjectId": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional identifier provided by data source to indicate the\ntarget object of this response. This may be an internal identifier and\nnot necessarily a valid satellite number.",
                        "example": "ORIGOBJECT-ID"
                    },
                    "satNo": {
                        "type": "integer",
                        "description": "Satellite/catalog number of the target on-orbit object.",
                        "format": "int32",
                        "example": 101
                    },
                    "taskId": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional task ID associated with the request/response.",
                        "example": "TASK-ID"
                    },
                    "idPlan": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "Unique identifier of the parent plan or schedule associated\nwith the request/response.",
                        "example": "REF-PLAN-ID"
                    },
                    "externalId": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "UUID from external systems.  This field has no meaning within\nUDL and is provided as a convenience for systems that require tracking\nof internal system generated ID.",
                        "example": "EXTERNAL-ID"
                    },
                    "status": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "The status of the request (ACCEPTED, CANCELLED, COLLECTED, COMPLETED, DELIVERED, FAILED, PARTIAL, PROPOSED, REJECTED, SCHEDULED):\n\nACCEPTED: The collect or contact request has been received and accepted.\n\nCANCELLED: A previously scheduled collect or contact whose execution was cancelled.\n\nCOLLECTED: The collect has been accomplished. A collected state implies that additional activity is required for delivery/completion.\n\nCOMPLETED: The collect or contact has been completed. For many systems completed and delivered constitute an equivalent successful end state.\n\nDELIVERED: The collected observation(s) have been delivered to the requestor. For many systems completed and delivered constitute an equivalent successful end state. A DELIVERED state is typically used for systems that exhibit a delay between collect and delivery, such as with space-based systems which require ground contact to deliver observations.\n\nFAILED: The collect or contact was attempted and failed, or the delivery of the collected observation(s) failed. A FAILED status may be accompanied by an error code (errCode), if available.\n\nPARTIAL: A PARTIAL state indicates that a part of a multi-track request has been accomplished, but the full request is incomplete. A PARTIAL status should ultimately be resolved to an end state.\n\nPROPOSED: Indicates that the request was received and alternate collect or contact time(s) (altStartTime, altEndTime) have been proposed. If an alternate is accepted by the requestor the current request should be cancelled and a new request created.\n\nREJECTED: The request has been received and rejected by the provider. A REJECTED status may be accompanied by an explanation (notes) of the reason that the request was rejected.\n\nSCHEDULED: The request was received and has been scheduled for execution.",
                        "example": "ACCEPTED"
                    },
                    "actualStartTime": {
                        "type": "string",
                        "description": "The actual start time of the collect or contact, in ISO 8601\nUTC format.",
                        "format": "date-time",
                        "example": "2018-01-01T16:00:00.123Z"
                    },
                    "actualEndTime": {
                        "type": "string",
                        "description": "The actual end time of the collect or contact, in ISO 8601\nUTC format.",
                        "format": "date-time",
                        "example": "2018-01-01T18:00:00.123Z"
                    },
                    "altStartTime": {
                        "type": "string",
                        "description": "Proposed alternative start time, in ISO 8601 UTC format.",
                        "format": "date-time",
                        "example": "2018-01-01T16:00:00.123Z"
                    },
                    "altEndTime": {
                        "type": "string",
                        "description": "Proposed alternative end time, in ISO 8601 UTC format.",
                        "format": "date-time",
                        "example": "2018-01-01T18:00:00.123Z"
                    },
                    "errCode": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "Error code associated with this request/response.",
                        "example": "ERROR CODE"
                    },
                    "srcTyps": {
                        "type": "array",
                        "description": "Array of UDL record type(s) (DOA, ELSET, EO, RADAR, RF, SV)\ncollected or produced in response to the associated request.  See the\nassociated 'srcIds' array for the record UUIDs, positionally corresponding\nto the record types in this array.  The 'srcTyps' and 'srcIds' arrays\nmust match in size.  The appropriate API operation can be used to retrieve\nthe specified object(s) (e.g. /udl/rfobservation/{uuid}).",
                        "example": [
                            "DOA",
                            "DWELL"
                        ],
                        "items": {
                            "type": "string",
                            "example": [
                                "DOA",
                                "DWELL"
                            ]
                        }
                    },
                    "srcIds": {
                        "type": "array",
                        "description": "Array of UUIDs of the UDL data record(s) collected in response\nto the associated request.  See the associated 'srcTyps' array for the\nspecific types of data, positionally corresponding to the UUIDs in this\narray.  The 'srcTyps' and 'srcIds' arrays must match in size.  The appropriate\nAPI operation can be used to retrieve the specified object(s) (e.g.\n/udl/rfobservation/{uuid}).",
                        "example": [
                            "DOA_ID",
                            "DWELL_ID"
                        ],
                        "items": {
                            "type": "string",
                            "example": [
                                "DOA_ID",
                                "DWELL_ID"
                            ]
                        }
                    },
                    "notes": {
                        "maxLength": 1024,
                        "minLength": 0,
                        "type": "string",
                        "description": "Notes or comments associated with this response.",
                        "example": "Example notes"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Time the row was created in the database, auto-populated by\nthe system.",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2018-01-01T16:00:00.123Z"
                    },
                    "createdBy": {
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string",
                        "description": "Application user who created the row in the database, auto-populated\nby the system.",
                        "readOnly": true,
                        "example": "some.user"
                    },
                    "source": {
                        "maxLength": 36,
                        "minLength": 1,
                        "type": "string",
                        "description": "Source of the data.",
                        "example": "Bluestaq"
                    },
                    "origin": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "Originating system or organization which produced the data,\nif different from the source. The origin may be different than the source\nif the source was a mediating system which forwarded the data on behalf\nof the origin system. If null, the source may be assumed to be the origin.",
                        "example": "THIRD_PARTY_DATASOURCE"
                    },
                    "origNetwork": {
                        "maxLength": 32,
                        "minLength": 0,
                        "type": "string",
                        "description": "The originating source network on which this record was created,\nauto-populated by the system.",
                        "readOnly": true,
                        "example": "ORIG"
                    },
                    "idSensor": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "Unique identifier of the reporting sensor.",
                        "example": "REF-SENSOR-ID"
                    },
                    "origSensorId": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional identifier provided by the collection source to indicate\nthe sensor identifier responding to this collect or contact. This may\nbe an internal identifier and not necessarily a valid sensor ID.",
                        "example": "ORIGSENSOR-ID"
                    },
                    "dataMode": {
                        "type": "string",
                        "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
                        "example": "TEST",
                        "enum": [
                            "REAL",
                            "TEST",
                            "SIMULATED",
                            "EXERCISE"
                        ]
                    }
                },
                "description": "Collect response supports the response and status of individual\ncollect requests. Each response is referenced by the UUID of the request,\nand contains information including the status of the request, collection\ntimes and types, and reference(s) to the observations collected. There may\nbe multiple responses associated with a request, either from multiple collectors\nor to relay status changes prior to completion and delivery.",
                "example": {
                    "actualStartTime": "2018-01-01T16:00:00.123Z",
                    "notes": "Example notes",
                    "satNo": 101,
                    "srcIds": [
                        "DOA_ID",
                        "DWELL_ID"
                    ],
                    "idOnOrbit": "REF-ONORBIT-ID",
                    "origin": "THIRD_PARTY_DATASOURCE",
                    "source": "Bluestaq",
                    "origSensorId": "ORIGSENSOR-ID",
                    "origNetwork": "ORIG",
                    "createdAt": "2018-01-01T16:00:00.123Z",
                    "idSensor": "REF-SENSOR-ID",
                    "id": "COLLECTRESPONSE-ID",
                    "classificationMarking": "U",
                    "srcTyps": [
                        "DOA",
                        "DWELL"
                    ],
                    "origObjectId": "ORIGOBJECT-ID",
                    "externalId": "EXTERNAL-ID",
                    "idPlan": "REF-PLAN-ID",
                    "dataMode": "TEST",
                    "createdBy": "some.user",
                    "errCode": "ERROR CODE",
                    "altEndTime": "2018-01-01T18:00:00.123Z",
                    "actualEndTime": "2018-01-01T18:00:00.123Z",
                    "idRequest": "REF-REQUEST-ID",
                    "taskId": "TASK-ID",
                    "status": "ACCEPTED",
                    "altStartTime": "2018-01-01T16:00:00.123Z"
                }
            },
            "CollectResponse_Full": {
                "required": [
                    "classificationMarking",
                    "dataMode",
                    "idRequest",
                    "source"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "maxLength": 36,
                        "minLength": 1,
                        "type": "string",
                        "description": "Unique identifier of the record, auto-generated by the system.",
                        "example": "COLLECTRESPONSE-ID"
                    },
                    "classificationMarking": {
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string",
                        "description": "Classification marking of the data in IC/CAPCO Portion-marked\nformat.",
                        "example": "U"
                    },
                    "idRequest": {
                        "maxLength": 36,
                        "minLength": 1,
                        "type": "string",
                        "description": "Unique identifier of the request associated with this response.",
                        "example": "REF-REQUEST-ID"
                    },
                    "idOnOrbit": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "Unique identifier of the target on-orbit object associated\nwith this response.",
                        "readOnly": true,
                        "example": "REF-ONORBIT-ID"
                    },
                    "origObjectId": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional identifier provided by data source to indicate the\ntarget object of this response. This may be an internal identifier and\nnot necessarily a valid satellite number.",
                        "example": "ORIGOBJECT-ID"
                    },
                    "satNo": {
                        "type": "integer",
                        "description": "Satellite/catalog number of the target on-orbit object.",
                        "format": "int32",
                        "example": 101
                    },
                    "taskId": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional task ID associated with the request/response.",
                        "example": "TASK-ID"
                    },
                    "idPlan": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "Unique identifier of the parent plan or schedule associated\nwith the request/response.",
                        "example": "REF-PLAN-ID"
                    },
                    "externalId": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "UUID from external systems.  This field has no meaning within\nUDL and is provided as a convenience for systems that require tracking\nof internal system generated ID.",
                        "example": "EXTERNAL-ID"
                    },
                    "status": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "The status of the request (ACCEPTED, CANCELLED, COLLECTED, COMPLETED, DELIVERED, FAILED, PARTIAL, PROPOSED, REJECTED, SCHEDULED):\n\nACCEPTED: The collect or contact request has been received and accepted.\n\nCANCELLED: A previously scheduled collect or contact whose execution was cancelled.\n\nCOLLECTED: The collect has been accomplished. A collected state implies that additional activity is required for delivery/completion.\n\nCOMPLETED: The collect or contact has been completed. For many systems completed and delivered constitute an equivalent successful end state.\n\nDELIVERED: The collected observation(s) have been delivered to the requestor. For many systems completed and delivered constitute an equivalent successful end state. A DELIVERED state is typically used for systems that exhibit a delay between collect and delivery, such as with space-based systems which require ground contact to deliver observations.\n\nFAILED: The collect or contact was attempted and failed, or the delivery of the collected observation(s) failed. A FAILED status may be accompanied by an error code (errCode), if available.\n\nPARTIAL: A PARTIAL state indicates that a part of a multi-track request has been accomplished, but the full request is incomplete. A PARTIAL status should ultimately be resolved to an end state.\n\nPROPOSED: Indicates that the request was received and alternate collect or contact time(s) (altStartTime, altEndTime) have been proposed. If an alternate is accepted by the requestor the current request should be cancelled and a new request created.\n\nREJECTED: The request has been received and rejected by the provider. A REJECTED status may be accompanied by an explanation (notes) of the reason that the request was rejected.\n\nSCHEDULED: The request was received and has been scheduled for execution.",
                        "example": "ACCEPTED"
                    },
                    "actualStartTime": {
                        "type": "string",
                        "description": "The actual start time of the collect or contact, in ISO 8601\nUTC format.",
                        "format": "date-time",
                        "example": "2018-01-01T16:00:00.123Z"
                    },
                    "actualEndTime": {
                        "type": "string",
                        "description": "The actual end time of the collect or contact, in ISO 8601\nUTC format.",
                        "format": "date-time",
                        "example": "2018-01-01T18:00:00.123Z"
                    },
                    "altStartTime": {
                        "type": "string",
                        "description": "Proposed alternative start time, in ISO 8601 UTC format.",
                        "format": "date-time",
                        "example": "2018-01-01T16:00:00.123Z"
                    },
                    "altEndTime": {
                        "type": "string",
                        "description": "Proposed alternative end time, in ISO 8601 UTC format.",
                        "format": "date-time",
                        "example": "2018-01-01T18:00:00.123Z"
                    },
                    "errCode": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "Error code associated with this request/response.",
                        "example": "ERROR CODE"
                    },
                    "srcTyps": {
                        "type": "array",
                        "description": "Array of UDL record type(s) (DOA, ELSET, EO, RADAR, RF, SV)\ncollected or produced in response to the associated request.  See the\nassociated 'srcIds' array for the record UUIDs, positionally corresponding\nto the record types in this array.  The 'srcTyps' and 'srcIds' arrays\nmust match in size.  The appropriate API operation can be used to retrieve\nthe specified object(s) (e.g. /udl/rfobservation/{uuid}).",
                        "example": [
                            "DOA",
                            "DWELL"
                        ],
                        "items": {
                            "type": "string",
                            "example": [
                                "DOA",
                                "DWELL"
                            ]
                        }
                    },
                    "srcIds": {
                        "type": "array",
                        "description": "Array of UUIDs of the UDL data record(s) collected in response\nto the associated request.  See the associated 'srcTyps' array for the\nspecific types of data, positionally corresponding to the UUIDs in this\narray.  The 'srcTyps' and 'srcIds' arrays must match in size.  The appropriate\nAPI operation can be used to retrieve the specified object(s) (e.g.\n/udl/rfobservation/{uuid}).",
                        "example": [
                            "DOA_ID",
                            "DWELL_ID"
                        ],
                        "items": {
                            "type": "string",
                            "example": [
                                "DOA_ID",
                                "DWELL_ID"
                            ]
                        }
                    },
                    "notes": {
                        "maxLength": 1024,
                        "minLength": 0,
                        "type": "string",
                        "description": "Notes or comments associated with this response.",
                        "example": "Example notes"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Time the row was created in the database, auto-populated by\nthe system.",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2018-01-01T16:00:00.123Z"
                    },
                    "createdBy": {
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string",
                        "description": "Application user who created the row in the database, auto-populated\nby the system.",
                        "readOnly": true,
                        "example": "some.user"
                    },
                    "source": {
                        "maxLength": 36,
                        "minLength": 1,
                        "type": "string",
                        "description": "Source of the data.",
                        "example": "Bluestaq"
                    },
                    "origin": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "Originating system or organization which produced the data,\nif different from the source. The origin may be different than the source\nif the source was a mediating system which forwarded the data on behalf\nof the origin system. If null, the source may be assumed to be the origin.",
                        "example": "THIRD_PARTY_DATASOURCE"
                    },
                    "origNetwork": {
                        "maxLength": 32,
                        "minLength": 0,
                        "type": "string",
                        "description": "The originating source network on which this record was created,\nauto-populated by the system.",
                        "readOnly": true,
                        "example": "ORIG"
                    },
                    "idSensor": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "Unique identifier of the reporting sensor.",
                        "example": "REF-SENSOR-ID"
                    },
                    "origSensorId": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional identifier provided by the collection source to indicate\nthe sensor identifier responding to this collect or contact. This may\nbe an internal identifier and not necessarily a valid sensor ID.",
                        "example": "ORIGSENSOR-ID"
                    },
                    "dataMode": {
                        "type": "string",
                        "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
                        "example": "TEST",
                        "enum": [
                            "REAL",
                            "TEST",
                            "SIMULATED",
                            "EXERCISE"
                        ]
                    }
                },
                "description": "Collect response supports the response and status of individual\ncollect requests. Each response is referenced by the UUID of the request,\nand contains information including the status of the request, collection\ntimes and types, and reference(s) to the observations collected. There may\nbe multiple responses associated with a request, either from multiple collectors\nor to relay status changes prior to completion and delivery.",
                "readOnly": true,
                "example": {
                    "actualStartTime": "2018-01-01T16:00:00.123Z",
                    "notes": "Example notes",
                    "satNo": 101,
                    "srcIds": [
                        "DOA_ID",
                        "DWELL_ID"
                    ],
                    "idOnOrbit": "REF-ONORBIT-ID",
                    "origin": "THIRD_PARTY_DATASOURCE",
                    "source": "Bluestaq",
                    "origSensorId": "ORIGSENSOR-ID",
                    "origNetwork": "ORIG",
                    "createdAt": "2018-01-01T16:00:00.123Z",
                    "idSensor": "REF-SENSOR-ID",
                    "id": "COLLECTRESPONSE-ID",
                    "classificationMarking": "U",
                    "srcTyps": [
                        "DOA",
                        "DWELL"
                    ],
                    "origObjectId": "ORIGOBJECT-ID",
                    "externalId": "EXTERNAL-ID",
                    "idPlan": "REF-PLAN-ID",
                    "dataMode": "TEST",
                    "createdBy": "some.user",
                    "errCode": "ERROR CODE",
                    "altEndTime": "2018-01-01T18:00:00.123Z",
                    "actualEndTime": "2018-01-01T18:00:00.123Z",
                    "idRequest": "REF-REQUEST-ID",
                    "taskId": "TASK-ID",
                    "status": "ACCEPTED",
                    "altStartTime": "2018-01-01T16:00:00.123Z"
                }
            },
            "CollectResponse_Ingest": {
                "required": [
                    "classificationMarking",
                    "dataMode",
                    "idRequest",
                    "source"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "maxLength": 36,
                        "minLength": 1,
                        "type": "string",
                        "description": "Unique identifier of the record, auto-generated by the system.",
                        "example": "COLLECTRESPONSE-ID"
                    },
                    "classificationMarking": {
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string",
                        "description": "Classification marking of the data in IC/CAPCO Portion-marked\nformat.",
                        "example": "U"
                    },
                    "idRequest": {
                        "maxLength": 36,
                        "minLength": 1,
                        "type": "string",
                        "description": "Unique identifier of the request associated with this response.",
                        "example": "REF-REQUEST-ID"
                    },
                    "idOnOrbit": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "Unique identifier of the target on-orbit object associated\nwith this response.",
                        "readOnly": true,
                        "example": "REF-ONORBIT-ID"
                    },
                    "origObjectId": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional identifier provided by data source to indicate the\ntarget object of this response. This may be an internal identifier and\nnot necessarily a valid satellite number.",
                        "example": "ORIGOBJECT-ID"
                    },
                    "satNo": {
                        "type": "integer",
                        "description": "Satellite/catalog number of the target on-orbit object.",
                        "format": "int32",
                        "example": 101
                    },
                    "taskId": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional task ID associated with the request/response.",
                        "example": "TASK-ID"
                    },
                    "idPlan": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "Unique identifier of the parent plan or schedule associated\nwith the request/response.",
                        "example": "REF-PLAN-ID"
                    },
                    "externalId": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "UUID from external systems.  This field has no meaning within\nUDL and is provided as a convenience for systems that require tracking\nof internal system generated ID.",
                        "example": "EXTERNAL-ID"
                    },
                    "status": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "The status of the request (ACCEPTED, CANCELLED, COLLECTED, COMPLETED, DELIVERED, FAILED, PARTIAL, PROPOSED, REJECTED, SCHEDULED):\n\nACCEPTED: The collect or contact request has been received and accepted.\n\nCANCELLED: A previously scheduled collect or contact whose execution was cancelled.\n\nCOLLECTED: The collect has been accomplished. A collected state implies that additional activity is required for delivery/completion.\n\nCOMPLETED: The collect or contact has been completed. For many systems completed and delivered constitute an equivalent successful end state.\n\nDELIVERED: The collected observation(s) have been delivered to the requestor. For many systems completed and delivered constitute an equivalent successful end state. A DELIVERED state is typically used for systems that exhibit a delay between collect and delivery, such as with space-based systems which require ground contact to deliver observations.\n\nFAILED: The collect or contact was attempted and failed, or the delivery of the collected observation(s) failed. A FAILED status may be accompanied by an error code (errCode), if available.\n\nPARTIAL: A PARTIAL state indicates that a part of a multi-track request has been accomplished, but the full request is incomplete. A PARTIAL status should ultimately be resolved to an end state.\n\nPROPOSED: Indicates that the request was received and alternate collect or contact time(s) (altStartTime, altEndTime) have been proposed. If an alternate is accepted by the requestor the current request should be cancelled and a new request created.\n\nREJECTED: The request has been received and rejected by the provider. A REJECTED status may be accompanied by an explanation (notes) of the reason that the request was rejected.\n\nSCHEDULED: The request was received and has been scheduled for execution.",
                        "example": "ACCEPTED"
                    },
                    "actualStartTime": {
                        "type": "string",
                        "description": "The actual start time of the collect or contact, in ISO 8601\nUTC format.",
                        "format": "date-time",
                        "example": "2018-01-01T16:00:00.123Z"
                    },
                    "actualEndTime": {
                        "type": "string",
                        "description": "The actual end time of the collect or contact, in ISO 8601\nUTC format.",
                        "format": "date-time",
                        "example": "2018-01-01T18:00:00.123Z"
                    },
                    "altStartTime": {
                        "type": "string",
                        "description": "Proposed alternative start time, in ISO 8601 UTC format.",
                        "format": "date-time",
                        "example": "2018-01-01T16:00:00.123Z"
                    },
                    "altEndTime": {
                        "type": "string",
                        "description": "Proposed alternative end time, in ISO 8601 UTC format.",
                        "format": "date-time",
                        "example": "2018-01-01T18:00:00.123Z"
                    },
                    "errCode": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "Error code associated with this request/response.",
                        "example": "ERROR CODE"
                    },
                    "srcTyps": {
                        "type": "array",
                        "description": "Array of UDL record type(s) (DOA, ELSET, EO, RADAR, RF, SV)\ncollected or produced in response to the associated request.  See the\nassociated 'srcIds' array for the record UUIDs, positionally corresponding\nto the record types in this array.  The 'srcTyps' and 'srcIds' arrays\nmust match in size.  The appropriate API operation can be used to retrieve\nthe specified object(s) (e.g. /udl/rfobservation/{uuid}).",
                        "example": [
                            "DOA",
                            "DWELL"
                        ],
                        "items": {
                            "type": "string",
                            "example": [
                                "DOA",
                                "DWELL"
                            ]
                        }
                    },
                    "srcIds": {
                        "type": "array",
                        "description": "Array of UUIDs of the UDL data record(s) collected in response\nto the associated request.  See the associated 'srcTyps' array for the\nspecific types of data, positionally corresponding to the UUIDs in this\narray.  The 'srcTyps' and 'srcIds' arrays must match in size.  The appropriate\nAPI operation can be used to retrieve the specified object(s) (e.g.\n/udl/rfobservation/{uuid}).",
                        "example": [
                            "DOA_ID",
                            "DWELL_ID"
                        ],
                        "items": {
                            "type": "string",
                            "example": [
                                "DOA_ID",
                                "DWELL_ID"
                            ]
                        }
                    },
                    "notes": {
                        "maxLength": 1024,
                        "minLength": 0,
                        "type": "string",
                        "description": "Notes or comments associated with this response.",
                        "example": "Example notes"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Time the row was created in the database, auto-populated by\nthe system.",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2018-01-01T16:00:00.123Z"
                    },
                    "createdBy": {
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string",
                        "description": "Application user who created the row in the database, auto-populated\nby the system.",
                        "readOnly": true,
                        "example": "some.user"
                    },
                    "source": {
                        "maxLength": 36,
                        "minLength": 1,
                        "type": "string",
                        "description": "Source of the data.",
                        "example": "Bluestaq"
                    },
                    "origin": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "Originating system or organization which produced the data,\nif different from the source. The origin may be different than the source\nif the source was a mediating system which forwarded the data on behalf\nof the origin system. If null, the source may be assumed to be the origin.",
                        "example": "THIRD_PARTY_DATASOURCE"
                    },
                    "origNetwork": {
                        "maxLength": 32,
                        "minLength": 0,
                        "type": "string",
                        "description": "The originating source network on which this record was created,\nauto-populated by the system.",
                        "readOnly": true,
                        "example": "ORIG"
                    },
                    "idSensor": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "Unique identifier of the reporting sensor.",
                        "example": "REF-SENSOR-ID"
                    },
                    "origSensorId": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional identifier provided by the collection source to indicate\nthe sensor identifier responding to this collect or contact. This may\nbe an internal identifier and not necessarily a valid sensor ID.",
                        "example": "ORIGSENSOR-ID"
                    },
                    "dataMode": {
                        "type": "string",
                        "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
                        "example": "TEST",
                        "enum": [
                            "REAL",
                            "TEST",
                            "SIMULATED",
                            "EXERCISE"
                        ]
                    }
                },
                "description": "Collect response supports the response and status of individual\ncollect requests. Each response is referenced by the UUID of the request,\nand contains information including the status of the request, collection\ntimes and types, and reference(s) to the observations collected. There may\nbe multiple responses associated with a request, either from multiple collectors\nor to relay status changes prior to completion and delivery."
            },
            "Elset_Abridged": {
                "required": [
                    "classificationMarking",
                    "dataMode",
                    "epoch",
                    "source"
                ],
                "type": "object",
                "properties": {
                    "idElset": {
                        "maxLength": 36,
                        "minLength": 1,
                        "type": "string",
                        "description": "Unique identifier of the record, auto-generated by the system.",
                        "example": "ELSET-ID"
                    },
                    "classificationMarking": {
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string",
                        "description": "Classification marking of the data in IC/CAPCO Portion-marked\nformat.",
                        "example": "U"
                    },
                    "satNo": {
                        "type": "integer",
                        "description": "Satellite/catalog number of the target on-orbit object.",
                        "format": "int32",
                        "example": 12
                    },
                    "epoch": {
                        "type": "string",
                        "description": "Elset epoch time in ISO 8601 UTC format, with microsecond\nprecision.",
                        "format": "date-time",
                        "example": "2018-01-01T16:00:00.123Z"
                    },
                    "meanMotion": {
                        "type": "number",
                        "description": "Mean motion is the angular speed required for a body to complete\none orbit, assuming constant speed in a circular orbit which completes\nin the same time as the variable speed, elliptical orbit of the actual\nbody. Measured in revolutions per day.",
                        "format": "double",
                        "example": 1.1
                    },
                    "idOnOrbit": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "Unique identifier of the satellite on-orbit object, if correlated.\nFor the public catalog, the idOnOrbit is typically the satellite number\nas a string, but may be a UUID for analyst or other unknown or untracked\nsatellites.",
                        "readOnly": true,
                        "example": "ONORBIT-ID"
                    },
                    "uct": {
                        "type": "boolean",
                        "description": "Boolean indicating this Elset was unable to be correlated\nto a known object. This flag should only be set to true by data providers\nafter an attempt to correlate to an on-orbit object was made and failed.\nIf unable to correlate, the 'origObjectId' field may be populated with\nan internal data provider specific identifier.",
                        "example": false
                    },
                    "eccentricity": {
                        "type": "number",
                        "description": "The orbital eccentricity of an astronomical object is a parameter\nthat determines the amount by which its orbit around another body deviates\nfrom a perfect circle. A value of 0 is a circular orbit, values between\n0 and 1 form an elliptic orbit, 1 is a parabolic escape orbit, and greater\nthan 1 is a hyperbolic escape orbit.",
                        "format": "double",
                        "example": 0.333
                    },
                    "inclination": {
                        "type": "number",
                        "description": "The angle between the equator and the orbit when looking from\nthe center of the Earth. If the orbit went exactly around the equator\nfrom left to right, then the inclination would be 0. The inclination\nranges from 0 to 180 degrees.",
                        "format": "double",
                        "example": 45.1
                    },
                    "raan": {
                        "type": "number",
                        "description": "Right ascension of the ascending node, or RAAN is the angle\nas measured in degrees eastwards (or, as seen from the north, counterclockwise)\nfrom the First Point of Aries to the ascending node, which is where\nthe orbit crosses the equator when traveling north.",
                        "format": "double",
                        "example": 1.1
                    },
                    "argOfPerigee": {
                        "type": "number",
                        "description": "The argument of perigee is the angle in degrees formed between\nthe perigee and the ascending node. If the perigee would occur at the\nascending node, the argument of perigee would be 0.",
                        "format": "double",
                        "example": 1.1
                    },
                    "meanAnomaly": {
                        "type": "number",
                        "description": "Where the satellite is in its orbital path. The mean anomaly\nranges from 0 to 360 degrees. The mean anomaly is referenced to the\nperigee. If the satellite were at the perigee, the mean anomaly would\nbe 0.",
                        "format": "double",
                        "example": 179.1
                    },
                    "revNo": {
                        "type": "integer",
                        "description": "The current revolution number. The value is incremented when\na satellite crosses the equator on an ascending pass.",
                        "format": "int32",
                        "example": 111
                    },
                    "bStar": {
                        "type": "number",
                        "description": "The drag term for SGP4 orbital model, used for calculating\ndecay constants for altitude, eccentricity etc, measured in inverse\nearth radii.",
                        "format": "double",
                        "example": 1.1
                    },
                    "agom": {
                        "type": "number",
                        "description": "AGOM, expressed in m^2/kg, is the value of the (averaged)\nobject Area times the solar radiation pressure coefficient(Gamma) over\nthe object Mass. Applicable only with ephemType4.",
                        "format": "double",
                        "example": 0.0126
                    },
                    "ballisticCoeff": {
                        "type": "number",
                        "description": "Ballistic coefficient, in m^2/kg. Applicable only with ephemType4.",
                        "format": "double",
                        "example": 0.00815
                    },
                    "meanMotionDot": {
                        "type": "number",
                        "description": "1st derivative of the mean motion with respect to time. Units\nare revolutions per day squared.",
                        "format": "double",
                        "example": 1.1
                    },
                    "meanMotionDDot": {
                        "type": "number",
                        "description": "2nd derivative of the mean motion with respect to time. Units\nare revolutions per day cubed.",
                        "format": "double",
                        "example": 1.1
                    },
                    "semiMajorAxis": {
                        "type": "number",
                        "description": "The sum of the periapsis and apoapsis distances divided by\ntwo. For circular orbits, the semimajor axis is the distance between\nthe centers of the bodies, not the distance of the bodies from the center\nof mass. Units are kilometers.",
                        "format": "double",
                        "example": 1.1
                    },
                    "period": {
                        "type": "number",
                        "description": "Period of the orbit equal to inverse of mean motion, in minutes.",
                        "format": "double",
                        "example": 1.1
                    },
                    "apogee": {
                        "type": "number",
                        "description": "The orbit point furthest from the center of the earth in kilometers.\nIf not provided, apogee will be computed from the TLE according to the\nfollowing. Using mu, the standard gravitational parameter for the earth\n(398600.4418), semi-major axis A = (mu/(n * 2 * pi/(24*3600))^2)(1/3).\nUsing semi-major axis A, eccentricity E, apogee = (A * (1 + E)) in km.\nNote that the calculations are for computing the apogee radius from\nthe center of the earth, to compute apogee altitude the radius of the\nearth should be subtracted (6378.135 km).",
                        "format": "double",
                        "example": 1.1
                    },
                    "perigee": {
                        "type": "number",
                        "description": "The orbit point nearest to the center of the earth in kilometers.\nIf not provided, perigee will be computed from the TLE according to\nthe following. Using mu, the standard gravitational parameter for the\nearth (398600.4418), semi-major axis A = (mu/(n * 2 * pi/(24*3600))^2)(1/3).\nUsing semi-major axis A, eccentricity E, perigee = (A * (1 - E)) in\nkm. Note that the calculations are for computing the perigee radius\nfrom the center of the earth, to compute perigee altitude the radius\nof the earth should be subtracted (6378.135 km).",
                        "format": "double",
                        "example": 1.1
                    },
                    "origObjectId": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional identifier provided by elset source to indicate the\ntarget onorbit object of this elset. This may be an internal identifier\nand not necessarily map to a valid satellite number.",
                        "example": "ORIGOBJECT-ID"
                    },
                    "line1": {
                        "maxLength": 69,
                        "minLength": 0,
                        "type": "string",
                        "description": "Read only derived/generated line1 of a legacy TLE (two line\nelement set) format, ignored on create/edit operations.",
                        "readOnly": true,
                        "example": "Example line1"
                    },
                    "line2": {
                        "maxLength": 69,
                        "minLength": 0,
                        "type": "string",
                        "description": "Read only derived/generated line2 of a legacy TLE (two line\nelement set) format, ignored on create/edit operations.",
                        "readOnly": true,
                        "example": "Example line2"
                    },
                    "descriptor": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional source-provided and searchable metadata or descriptor\nof the data.",
                        "example": "Example description"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Time the row was created in the database, auto-populated by\nthe system.",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2018-01-01T16:00:00.123Z"
                    },
                    "createdBy": {
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string",
                        "description": "Application user who created the row in the database, auto-populated\nby the system.",
                        "readOnly": true,
                        "example": "some.user"
                    },
                    "origin": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "Originating system or organization which produced the data,\nif different from the source. The origin may be different than the source\nif the source was a mediating system which forwarded the data on behalf\nof the origin system. If null, the source may be assumed to be the origin.",
                        "example": "THIRD_PARTY_DATASOURCE"
                    },
                    "sourceDL": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "The source data library from which this record was received.\nThis could be a remote or tactical UDL or another data library. If null,\nthe record should be assumed to have originated from the primary Enterprise\nUDL.",
                        "readOnly": true,
                        "example": "AXE"
                    },
                    "source": {
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string",
                        "description": "Source of the data.",
                        "example": "Bluestaq"
                    },
                    "dataMode": {
                        "type": "string",
                        "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
                        "example": "TEST",
                        "enum": [
                            "REAL",
                            "TEST",
                            "SIMULATED",
                            "EXERCISE"
                        ]
                    },
                    "algorithm": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional algorithm used to produce this record.",
                        "example": "Example algorithm"
                    },
                    "transactionId": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional identifier to track a commercial or marketplace transaction\nexecuted to produce this data.",
                        "example": "TRANSACTION-ID"
                    },
                    "ephemType": {
                        "type": "integer",
                        "description": "The ephemeris type associated with this TLE:\n\n0:&nbsp;SGP4 if orbital period&nbsp;&lt;&nbsp;225 minutes, and SDP4 otherwise\n\n1:&nbsp;SGP\n\n2:&nbsp;SGP4\n\n3:&nbsp;SDP4\n\n4:&nbsp;SGP8, also referred to as SGP4-XP\n\n5:&nbsp;SDP8\n\n",
                        "format": "int32",
                        "example": 1
                    },
                    "origNetwork": {
                        "maxLength": 32,
                        "minLength": 0,
                        "type": "string",
                        "description": "The originating source network on which this record was created,\nauto-populated by the system.",
                        "readOnly": true,
                        "example": "ORIG"
                    }
                },
                "description": "An element set is a collection of Keplerian orbital elements describing\nan orbit of a particular satellite. The data is used along with an orbit\npropagator in order to predict the motion of a satellite. The element set,\nor elset for short, consists of identification data, the classical elements\nand drag parameters.",
                "example": {
                    "argOfPerigee": 1.1,
                    "apogee": 1.1,
                    "satNo": 12,
                    "idOnOrbit": "ONORBIT-ID",
                    "meanMotionDDot": 1.1,
                    "origin": "THIRD_PARTY_DATASOURCE",
                    "epoch": "2018-01-01T16:00:00.123Z",
                    "descriptor": "Example description",
                    "source": "Bluestaq",
                    "origNetwork": "ORIG",
                    "perigee": 1.1,
                    "semiMajorAxis": 1.1,
                    "createdAt": "2018-01-01T16:00:00.123Z",
                    "idElset": "ELSET-ID",
                    "ephemType": 1,
                    "ballisticCoeff": 0.00815,
                    "bStar": 1.1,
                    "classificationMarking": "U",
                    "line2": "Example line2",
                    "origObjectId": "ORIGOBJECT-ID",
                    "line1": "Example line1",
                    "algorithm": "Example algorithm",
                    "inclination": 45.1,
                    "period": 1.1,
                    "meanMotion": 1.1,
                    "uct": false,
                    "eccentricity": 0.333,
                    "raan": 1.1,
                    "agom": 0.0126,
                    "transactionId": "TRANSACTION-ID",
                    "revNo": 111,
                    "dataMode": "TEST",
                    "meanMotionDot": 1.1,
                    "createdBy": "some.user",
                    "sourceDL": "AXE",
                    "meanAnomaly": 179.1
                }
            },
            "Elset_Full": {
                "required": [
                    "classificationMarking",
                    "dataMode",
                    "epoch",
                    "source"
                ],
                "type": "object",
                "properties": {
                    "idElset": {
                        "maxLength": 36,
                        "minLength": 1,
                        "type": "string",
                        "description": "Unique identifier of the record, auto-generated by the system.",
                        "example": "ELSET-ID"
                    },
                    "classificationMarking": {
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string",
                        "description": "Classification marking of the data in IC/CAPCO Portion-marked\nformat.",
                        "example": "U"
                    },
                    "satNo": {
                        "type": "integer",
                        "description": "Satellite/catalog number of the target on-orbit object.",
                        "format": "int32",
                        "example": 12
                    },
                    "epoch": {
                        "type": "string",
                        "description": "Elset epoch time in ISO 8601 UTC format, with microsecond\nprecision.",
                        "format": "date-time",
                        "example": "2018-01-01T16:00:00.123Z"
                    },
                    "meanMotion": {
                        "type": "number",
                        "description": "Mean motion is the angular speed required for a body to complete\none orbit, assuming constant speed in a circular orbit which completes\nin the same time as the variable speed, elliptical orbit of the actual\nbody. Measured in revolutions per day.",
                        "format": "double",
                        "example": 1.1
                    },
                    "idOnOrbit": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "Unique identifier of the satellite on-orbit object, if correlated.\nFor the public catalog, the idOnOrbit is typically the satellite number\nas a string, but may be a UUID for analyst or other unknown or untracked\nsatellites.",
                        "readOnly": true,
                        "example": "ONORBIT-ID"
                    },
                    "uct": {
                        "type": "boolean",
                        "description": "Boolean indicating this Elset was unable to be correlated\nto a known object. This flag should only be set to true by data providers\nafter an attempt to correlate to an on-orbit object was made and failed.\nIf unable to correlate, the 'origObjectId' field may be populated with\nan internal data provider specific identifier.",
                        "example": false
                    },
                    "eccentricity": {
                        "type": "number",
                        "description": "The orbital eccentricity of an astronomical object is a parameter\nthat determines the amount by which its orbit around another body deviates\nfrom a perfect circle. A value of 0 is a circular orbit, values between\n0 and 1 form an elliptic orbit, 1 is a parabolic escape orbit, and greater\nthan 1 is a hyperbolic escape orbit.",
                        "format": "double",
                        "example": 0.333
                    },
                    "inclination": {
                        "type": "number",
                        "description": "The angle between the equator and the orbit when looking from\nthe center of the Earth. If the orbit went exactly around the equator\nfrom left to right, then the inclination would be 0. The inclination\nranges from 0 to 180 degrees.",
                        "format": "double",
                        "example": 45.1
                    },
                    "raan": {
                        "type": "number",
                        "description": "Right ascension of the ascending node, or RAAN is the angle\nas measured in degrees eastwards (or, as seen from the north, counterclockwise)\nfrom the First Point of Aries to the ascending node, which is where\nthe orbit crosses the equator when traveling north.",
                        "format": "double",
                        "example": 1.1
                    },
                    "argOfPerigee": {
                        "type": "number",
                        "description": "The argument of perigee is the angle in degrees formed between\nthe perigee and the ascending node. If the perigee would occur at the\nascending node, the argument of perigee would be 0.",
                        "format": "double",
                        "example": 1.1
                    },
                    "meanAnomaly": {
                        "type": "number",
                        "description": "Where the satellite is in its orbital path. The mean anomaly\nranges from 0 to 360 degrees. The mean anomaly is referenced to the\nperigee. If the satellite were at the perigee, the mean anomaly would\nbe 0.",
                        "format": "double",
                        "example": 179.1
                    },
                    "revNo": {
                        "type": "integer",
                        "description": "The current revolution number. The value is incremented when\na satellite crosses the equator on an ascending pass.",
                        "format": "int32",
                        "example": 111
                    },
                    "bStar": {
                        "type": "number",
                        "description": "The drag term for SGP4 orbital model, used for calculating\ndecay constants for altitude, eccentricity etc, measured in inverse\nearth radii.",
                        "format": "double",
                        "example": 1.1
                    },
                    "agom": {
                        "type": "number",
                        "description": "AGOM, expressed in m^2/kg, is the value of the (averaged)\nobject Area times the solar radiation pressure coefficient(Gamma) over\nthe object Mass. Applicable only with ephemType4.",
                        "format": "double",
                        "example": 0.0126
                    },
                    "ballisticCoeff": {
                        "type": "number",
                        "description": "Ballistic coefficient, in m^2/kg. Applicable only with ephemType4.",
                        "format": "double",
                        "example": 0.00815
                    },
                    "meanMotionDot": {
                        "type": "number",
                        "description": "1st derivative of the mean motion with respect to time. Units\nare revolutions per day squared.",
                        "format": "double",
                        "example": 1.1
                    },
                    "meanMotionDDot": {
                        "type": "number",
                        "description": "2nd derivative of the mean motion with respect to time. Units\nare revolutions per day cubed.",
                        "format": "double",
                        "example": 1.1
                    },
                    "semiMajorAxis": {
                        "type": "number",
                        "description": "The sum of the periapsis and apoapsis distances divided by\ntwo. For circular orbits, the semimajor axis is the distance between\nthe centers of the bodies, not the distance of the bodies from the center\nof mass. Units are kilometers.",
                        "format": "double",
                        "example": 1.1
                    },
                    "period": {
                        "type": "number",
                        "description": "Period of the orbit equal to inverse of mean motion, in minutes.",
                        "format": "double",
                        "example": 1.1
                    },
                    "apogee": {
                        "type": "number",
                        "description": "The orbit point furthest from the center of the earth in kilometers.\nIf not provided, apogee will be computed from the TLE according to the\nfollowing. Using mu, the standard gravitational parameter for the earth\n(398600.4418), semi-major axis A = (mu/(n * 2 * pi/(24*3600))^2)(1/3).\nUsing semi-major axis A, eccentricity E, apogee = (A * (1 + E)) in km.\nNote that the calculations are for computing the apogee radius from\nthe center of the earth, to compute apogee altitude the radius of the\nearth should be subtracted (6378.135 km).",
                        "format": "double",
                        "example": 1.1
                    },
                    "perigee": {
                        "type": "number",
                        "description": "The orbit point nearest to the center of the earth in kilometers.\nIf not provided, perigee will be computed from the TLE according to\nthe following. Using mu, the standard gravitational parameter for the\nearth (398600.4418), semi-major axis A = (mu/(n * 2 * pi/(24*3600))^2)(1/3).\nUsing semi-major axis A, eccentricity E, perigee = (A * (1 - E)) in\nkm. Note that the calculations are for computing the perigee radius\nfrom the center of the earth, to compute perigee altitude the radius\nof the earth should be subtracted (6378.135 km).",
                        "format": "double",
                        "example": 1.1
                    },
                    "origObjectId": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional identifier provided by elset source to indicate the\ntarget onorbit object of this elset. This may be an internal identifier\nand not necessarily map to a valid satellite number.",
                        "example": "ORIGOBJECT-ID"
                    },
                    "effectiveFrom": {
                        "type": "string",
                        "description": "Read-only start time at which this elset was the 'current'\nelset for its satellite. This field and is set by the system automatically\nand ignored on create/edit operations.",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2018-01-01T16:00:00.123Z"
                    },
                    "effectiveUntil": {
                        "type": "string",
                        "description": "Read-only end time at which this elset was no longer the 'current'\nelset for its satellite. This field and is set by the system automatically\nand ignored on create/edit operations.",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2018-01-01T16:00:00.123Z"
                    },
                    "line1": {
                        "maxLength": 69,
                        "minLength": 0,
                        "type": "string",
                        "description": "Read only derived/generated line1 of a legacy TLE (two line\nelement set) format, ignored on create/edit operations.",
                        "readOnly": true,
                        "example": "Example line1"
                    },
                    "line2": {
                        "maxLength": 69,
                        "minLength": 0,
                        "type": "string",
                        "description": "Read only derived/generated line2 of a legacy TLE (two line\nelement set) format, ignored on create/edit operations.",
                        "readOnly": true,
                        "example": "Example line2"
                    },
                    "descriptor": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional source-provided and searchable metadata or descriptor\nof the data.",
                        "example": "Example description"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Time the row was created in the database, auto-populated by\nthe system.",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2018-01-01T16:00:00.123Z"
                    },
                    "createdBy": {
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string",
                        "description": "Application user who created the row in the database, auto-populated\nby the system.",
                        "readOnly": true,
                        "example": "some.user"
                    },
                    "rawFileURI": {
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional URI location in the document repository of the raw\nfile parsed by the system to produce this record. To download the raw\nfile, prepend https://udl-hostname/scs/download?id= to this value.",
                        "example": "Example URI"
                    },
                    "origin": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "Originating system or organization which produced the data,\nif different from the source. The origin may be different than the source\nif the source was a mediating system which forwarded the data on behalf\nof the origin system. If null, the source may be assumed to be the origin.",
                        "example": "THIRD_PARTY_DATASOURCE"
                    },
                    "sourceDL": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "The source data library from which this record was received.\nThis could be a remote or tactical UDL or another data library. If null,\nthe record should be assumed to have originated from the primary Enterprise\nUDL.",
                        "readOnly": true,
                        "example": "AXE"
                    },
                    "source": {
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string",
                        "description": "Source of the data.",
                        "example": "Bluestaq"
                    },
                    "dataMode": {
                        "type": "string",
                        "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
                        "example": "TEST",
                        "enum": [
                            "REAL",
                            "TEST",
                            "SIMULATED",
                            "EXERCISE"
                        ]
                    },
                    "algorithm": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional algorithm used to produce this record.",
                        "example": "Example algorithm"
                    },
                    "transactionId": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional identifier to track a commercial or marketplace transaction\nexecuted to produce this data.",
                        "example": "TRANSACTION-ID"
                    },
                    "ephemType": {
                        "type": "integer",
                        "description": "The ephemeris type associated with this TLE:\n\n0:&nbsp;SGP4 if orbital period&nbsp;&lt;&nbsp;225 minutes, and SDP4 otherwise\n\n1:&nbsp;SGP\n\n2:&nbsp;SGP4\n\n3:&nbsp;SDP4\n\n4:&nbsp;SGP8, also referred to as SGP4-XP\n\n5:&nbsp;SDP8\n\n",
                        "format": "int32",
                        "example": 1
                    },
                    "origNetwork": {
                        "maxLength": 32,
                        "minLength": 0,
                        "type": "string",
                        "description": "The originating source network on which this record was created,\nauto-populated by the system.",
                        "readOnly": true,
                        "example": "ORIG"
                    }
                },
                "description": "An element set is a collection of Keplerian orbital elements describing\nan orbit of a particular satellite. The data is used along with an orbit\npropagator in order to predict the motion of a satellite. The element set,\nor elset for short, consists of identification data, the classical elements\nand drag parameters.",
                "example": {
                    "argOfPerigee": 1.1,
                    "apogee": 1.1,
                    "satNo": 12,
                    "idOnOrbit": "ONORBIT-ID",
                    "meanMotionDDot": 1.1,
                    "origin": "THIRD_PARTY_DATASOURCE",
                    "epoch": "2018-01-01T16:00:00.123Z",
                    "descriptor": "Example description",
                    "source": "Bluestaq",
                    "origNetwork": "ORIG",
                    "perigee": 1.1,
                    "semiMajorAxis": 1.1,
                    "createdAt": "2018-01-01T16:00:00.123Z",
                    "idElset": "ELSET-ID",
                    "ephemType": 1,
                    "ballisticCoeff": 0.00815,
                    "bStar": 1.1,
                    "rawFileURI": "Example URI",
                    "classificationMarking": "U",
                    "line2": "Example line2",
                    "origObjectId": "ORIGOBJECT-ID",
                    "line1": "Example line1",
                    "algorithm": "Example algorithm",
                    "inclination": 45.1,
                    "effectiveUntil": "2018-01-01T16:00:00.123Z",
                    "period": 1.1,
                    "meanMotion": 1.1,
                    "uct": false,
                    "eccentricity": 0.333,
                    "raan": 1.1,
                    "agom": 0.0126,
                    "transactionId": "TRANSACTION-ID",
                    "revNo": 111,
                    "dataMode": "TEST",
                    "meanMotionDot": 1.1,
                    "createdBy": "some.user",
                    "sourceDL": "AXE",
                    "meanAnomaly": 179.1,
                    "effectiveFrom": "2018-01-01T16:00:00.123Z"
                }
            },
            "Elset_Ingest": {
                "required": [
                    "classificationMarking",
                    "dataMode",
                    "epoch",
                    "source"
                ],
                "type": "object",
                "properties": {
                    "idElset": {
                        "maxLength": 36,
                        "minLength": 1,
                        "type": "string",
                        "description": "Unique identifier of the record, auto-generated by the system.",
                        "example": "ELSET-ID"
                    },
                    "classificationMarking": {
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string",
                        "description": "Classification marking of the data in IC/CAPCO Portion-marked\nformat.",
                        "example": "U"
                    },
                    "satNo": {
                        "type": "integer",
                        "description": "Satellite/catalog number of the target on-orbit object.",
                        "format": "int32",
                        "example": 12
                    },
                    "epoch": {
                        "type": "string",
                        "description": "Elset epoch time in ISO 8601 UTC format, with microsecond\nprecision.",
                        "format": "date-time",
                        "example": "2018-01-01T16:00:00.123Z"
                    },
                    "meanMotion": {
                        "type": "number",
                        "description": "Mean motion is the angular speed required for a body to complete\none orbit, assuming constant speed in a circular orbit which completes\nin the same time as the variable speed, elliptical orbit of the actual\nbody. Measured in revolutions per day.",
                        "format": "double",
                        "example": 1.1
                    },
                    "idOnOrbit": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "Unique identifier of the satellite on-orbit object, if correlated.\nFor the public catalog, the idOnOrbit is typically the satellite number\nas a string, but may be a UUID for analyst or other unknown or untracked\nsatellites.",
                        "readOnly": true,
                        "example": "ONORBIT-ID"
                    },
                    "uct": {
                        "type": "boolean",
                        "description": "Boolean indicating this Elset was unable to be correlated\nto a known object. This flag should only be set to true by data providers\nafter an attempt to correlate to an on-orbit object was made and failed.\nIf unable to correlate, the 'origObjectId' field may be populated with\nan internal data provider specific identifier.",
                        "example": false
                    },
                    "eccentricity": {
                        "type": "number",
                        "description": "The orbital eccentricity of an astronomical object is a parameter\nthat determines the amount by which its orbit around another body deviates\nfrom a perfect circle. A value of 0 is a circular orbit, values between\n0 and 1 form an elliptic orbit, 1 is a parabolic escape orbit, and greater\nthan 1 is a hyperbolic escape orbit.",
                        "format": "double",
                        "example": 0.333
                    },
                    "inclination": {
                        "type": "number",
                        "description": "The angle between the equator and the orbit when looking from\nthe center of the Earth. If the orbit went exactly around the equator\nfrom left to right, then the inclination would be 0. The inclination\nranges from 0 to 180 degrees.",
                        "format": "double",
                        "example": 45.1
                    },
                    "raan": {
                        "type": "number",
                        "description": "Right ascension of the ascending node, or RAAN is the angle\nas measured in degrees eastwards (or, as seen from the north, counterclockwise)\nfrom the First Point of Aries to the ascending node, which is where\nthe orbit crosses the equator when traveling north.",
                        "format": "double",
                        "example": 1.1
                    },
                    "argOfPerigee": {
                        "type": "number",
                        "description": "The argument of perigee is the angle in degrees formed between\nthe perigee and the ascending node. If the perigee would occur at the\nascending node, the argument of perigee would be 0.",
                        "format": "double",
                        "example": 1.1
                    },
                    "meanAnomaly": {
                        "type": "number",
                        "description": "Where the satellite is in its orbital path. The mean anomaly\nranges from 0 to 360 degrees. The mean anomaly is referenced to the\nperigee. If the satellite were at the perigee, the mean anomaly would\nbe 0.",
                        "format": "double",
                        "example": 179.1
                    },
                    "revNo": {
                        "type": "integer",
                        "description": "The current revolution number. The value is incremented when\na satellite crosses the equator on an ascending pass.",
                        "format": "int32",
                        "example": 111
                    },
                    "bStar": {
                        "type": "number",
                        "description": "The drag term for SGP4 orbital model, used for calculating\ndecay constants for altitude, eccentricity etc, measured in inverse\nearth radii.",
                        "format": "double",
                        "example": 1.1
                    },
                    "agom": {
                        "type": "number",
                        "description": "AGOM, expressed in m^2/kg, is the value of the (averaged)\nobject Area times the solar radiation pressure coefficient(Gamma) over\nthe object Mass. Applicable only with ephemType4.",
                        "format": "double",
                        "example": 0.0126
                    },
                    "ballisticCoeff": {
                        "type": "number",
                        "description": "Ballistic coefficient, in m^2/kg. Applicable only with ephemType4.",
                        "format": "double",
                        "example": 0.00815
                    },
                    "meanMotionDot": {
                        "type": "number",
                        "description": "1st derivative of the mean motion with respect to time. Units\nare revolutions per day squared.",
                        "format": "double",
                        "example": 1.1
                    },
                    "meanMotionDDot": {
                        "type": "number",
                        "description": "2nd derivative of the mean motion with respect to time. Units\nare revolutions per day cubed.",
                        "format": "double",
                        "example": 1.1
                    },
                    "semiMajorAxis": {
                        "type": "number",
                        "description": "The sum of the periapsis and apoapsis distances divided by\ntwo. For circular orbits, the semimajor axis is the distance between\nthe centers of the bodies, not the distance of the bodies from the center\nof mass. Units are kilometers.",
                        "format": "double",
                        "example": 1.1
                    },
                    "period": {
                        "type": "number",
                        "description": "Period of the orbit equal to inverse of mean motion, in minutes.",
                        "format": "double",
                        "example": 1.1
                    },
                    "apogee": {
                        "type": "number",
                        "description": "The orbit point furthest from the center of the earth in kilometers.\nIf not provided, apogee will be computed from the TLE according to the\nfollowing. Using mu, the standard gravitational parameter for the earth\n(398600.4418), semi-major axis A = (mu/(n * 2 * pi/(24*3600))^2)(1/3).\nUsing semi-major axis A, eccentricity E, apogee = (A * (1 + E)) in km.\nNote that the calculations are for computing the apogee radius from\nthe center of the earth, to compute apogee altitude the radius of the\nearth should be subtracted (6378.135 km).",
                        "format": "double",
                        "example": 1.1
                    },
                    "perigee": {
                        "type": "number",
                        "description": "The orbit point nearest to the center of the earth in kilometers.\nIf not provided, perigee will be computed from the TLE according to\nthe following. Using mu, the standard gravitational parameter for the\nearth (398600.4418), semi-major axis A = (mu/(n * 2 * pi/(24*3600))^2)(1/3).\nUsing semi-major axis A, eccentricity E, perigee = (A * (1 - E)) in\nkm. Note that the calculations are for computing the perigee radius\nfrom the center of the earth, to compute perigee altitude the radius\nof the earth should be subtracted (6378.135 km).",
                        "format": "double",
                        "example": 1.1
                    },
                    "origObjectId": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional identifier provided by elset source to indicate the\ntarget onorbit object of this elset. This may be an internal identifier\nand not necessarily map to a valid satellite number.",
                        "example": "ORIGOBJECT-ID"
                    },
                    "line1": {
                        "maxLength": 69,
                        "minLength": 0,
                        "type": "string",
                        "description": "Read only derived/generated line1 of a legacy TLE (two line\nelement set) format, ignored on create/edit operations.",
                        "readOnly": true,
                        "example": "Example line1"
                    },
                    "line2": {
                        "maxLength": 69,
                        "minLength": 0,
                        "type": "string",
                        "description": "Read only derived/generated line2 of a legacy TLE (two line\nelement set) format, ignored on create/edit operations.",
                        "readOnly": true,
                        "example": "Example line2"
                    },
                    "descriptor": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional source-provided and searchable metadata or descriptor\nof the data.",
                        "example": "Example description"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Time the row was created in the database, auto-populated by\nthe system.",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2018-01-01T16:00:00.123Z"
                    },
                    "createdBy": {
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string",
                        "description": "Application user who created the row in the database, auto-populated\nby the system.",
                        "readOnly": true,
                        "example": "some.user"
                    },
                    "rawFileURI": {
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional URI location in the document repository of the raw\nfile parsed by the system to produce this record. To download the raw\nfile, prepend https://udl-hostname/scs/download?id= to this value.",
                        "example": "Example URI"
                    },
                    "origin": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "Originating system or organization which produced the data,\nif different from the source. The origin may be different than the source\nif the source was a mediating system which forwarded the data on behalf\nof the origin system. If null, the source may be assumed to be the origin.",
                        "example": "THIRD_PARTY_DATASOURCE"
                    },
                    "sourceDL": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "The source data library from which this record was received.\nThis could be a remote or tactical UDL or another data library. If null,\nthe record should be assumed to have originated from the primary Enterprise\nUDL.",
                        "readOnly": true,
                        "example": "AXE"
                    },
                    "source": {
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string",
                        "description": "Source of the data.",
                        "example": "Bluestaq"
                    },
                    "dataMode": {
                        "type": "string",
                        "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
                        "example": "TEST",
                        "enum": [
                            "REAL",
                            "TEST",
                            "SIMULATED",
                            "EXERCISE"
                        ]
                    },
                    "algorithm": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional algorithm used to produce this record.",
                        "example": "Example algorithm"
                    },
                    "transactionId": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional identifier to track a commercial or marketplace transaction\nexecuted to produce this data.",
                        "example": "TRANSACTION-ID"
                    },
                    "ephemType": {
                        "type": "integer",
                        "description": "The ephemeris type associated with this TLE:\n\n0:&nbsp;SGP4 if orbital period&nbsp;&lt;&nbsp;225 minutes, and SDP4 otherwise\n\n1:&nbsp;SGP\n\n2:&nbsp;SGP4\n\n3:&nbsp;SDP4\n\n4:&nbsp;SGP8, also referred to as SGP4-XP\n\n5:&nbsp;SDP8\n\n",
                        "format": "int32",
                        "example": 1
                    },
                    "origNetwork": {
                        "maxLength": 32,
                        "minLength": 0,
                        "type": "string",
                        "description": "The originating source network on which this record was created,\nauto-populated by the system.",
                        "readOnly": true,
                        "example": "ORIG"
                    }
                },
                "description": "An element set is a collection of Keplerian orbital elements describing\nan orbit of a particular satellite. The data is used along with an orbit\npropagator in order to predict the motion of a satellite. The element set,\nor elset for short, consists of identification data, the classical elements\nand drag parameters."
            },
            "EOObservation_Abridged": {
                "required": [
                    "classificationMarking",
                    "dataMode",
                    "obTime",
                    "source"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "maxLength": 36,
                        "minLength": 1,
                        "type": "string",
                        "description": "Unique identifier of the record, auto-generated by the system.",
                        "example": "EOOBSERVATION-ID"
                    },
                    "classificationMarking": {
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string",
                        "description": "Classification marking of the data in IC/CAPCO Portion-marked\nformat.",
                        "example": "U"
                    },
                    "obTime": {
                        "type": "string",
                        "description": "Ob detection time in ISO 8601 UTC with microsecond precision.",
                        "format": "date-time",
                        "example": "2018-01-01T16:00:00.123Z"
                    },
                    "corrQuality": {
                        "type": "number",
                        "description": "Object Correlation Quality value (non-standardized). Users\nshould consult data providers regarding the expected range of values.",
                        "format": "double",
                        "example": 1.1
                    },
                    "idOnOrbit": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "Unique identifier of the target on-orbit object, if correlated.",
                        "readOnly": true,
                        "example": "ONORBIT-ID"
                    },
                    "idSensor": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "Unique identifier of the reporting sensor.",
                        "example": "SENSOR-ID"
                    },
                    "idSkyImagery": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "Unique identifier of the Sky Imagery.",
                        "example": "SKYIMAGERY-ID"
                    },
                    "collectMethod": {
                        "maxLength": 24,
                        "minLength": 0,
                        "type": "string",
                        "description": "Method indicating telescope movement during collection (AUTOTRACK,\nMANUAL AUTOTRACK, MANUAL RATE TRACK, MANUAL SIDEREAL, SIDEREAL, RATE\nTRACK).",
                        "example": "AUTOTRACK"
                    },
                    "satNo": {
                        "type": "integer",
                        "description": "Satellite/Catalog number of the target on-orbit object.",
                        "format": "int32",
                        "example": 5
                    },
                    "taskId": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional identifier to indicate the specific tasking which\nproduced this observation.",
                        "example": "TASK-ID"
                    },
                    "transactionId": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional identifier to track a commercial or marketplace transaction\nexecuted to produce this data.",
                        "example": "TRANSACTION-ID"
                    },
                    "trackId": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional identifier of the track to which this observation\nbelongs.",
                        "example": "TRACK-ID"
                    },
                    "obPosition": {
                        "maxLength": 8,
                        "minLength": 0,
                        "type": "string",
                        "description": "The position of this observation within a track (FENCE, FIRST,\nIN, LAST, SINGLE).  This identifier is optional and, if null, no assumption\nshould be made regarding whether other observations may or may not exist\nto compose a track.",
                        "example": "FIRST"
                    },
                    "origObjectId": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional identifier provided by observation source to indicate\nthe target onorbit object of this observation. This may be an internal\nidentifier and not necessarily a valid satellite number.",
                        "example": "ORIGOBJECT-ID"
                    },
                    "origSensorId": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional identifier provided by observation source to indicate\nthe sensor identifier which produced this observation. This may be an\ninternal identifier and not necessarily a valid sensor ID.",
                        "example": "ORIGSENSOR-ID"
                    },
                    "uct": {
                        "type": "boolean",
                        "description": "Boolean indicating this observation is part of an uncorrelated\ntrack or was unable to be correlated to a known object. This flag should\nonly be set to true by data providers after an attempt to correlate\nto an on-orbit object was made and failed. If unable to correlate, the\n'origObjectId' field may be populated with an internal data provider\nspecific identifier.",
                        "example": false
                    },
                    "azimuth": {
                        "type": "number",
                        "description": "Line of sight azimuth angle in degrees and topocentric frame.",
                        "format": "double",
                        "example": 1.1
                    },
                    "azimuthUnc": {
                        "type": "number",
                        "description": "One sigma uncertainty in the line of sight azimuth angle,\nin degrees.",
                        "format": "double",
                        "example": 1.1
                    },
                    "azimuthBias": {
                        "type": "number",
                        "description": "Sensor line of sight azimuth angle bias in degrees.",
                        "format": "double",
                        "example": 1.1
                    },
                    "azimuthRate": {
                        "type": "number",
                        "description": "Rate of change of the line of sight azimuth in degrees per\nsecond.",
                        "format": "double",
                        "example": 1.1
                    },
                    "elevation": {
                        "type": "number",
                        "description": "Line of sight elevation in degrees and topocentric frame.",
                        "format": "double",
                        "example": 1.1
                    },
                    "elevationUnc": {
                        "type": "number",
                        "description": "One sigma uncertainty in the line of sight elevation angle,\nin degrees.",
                        "format": "double",
                        "example": 1.1
                    },
                    "elevationBias": {
                        "type": "number",
                        "description": "Sensor line of sight elevation bias in degrees.",
                        "format": "double",
                        "example": 1.1
                    },
                    "elevationRate": {
                        "type": "number",
                        "description": "Rate of change of the line of sight elevation in degrees per\nsecond.",
                        "format": "double",
                        "example": 1.1
                    },
                    "range": {
                        "type": "number",
                        "description": "Line of sight range in km.",
                        "format": "double",
                        "example": 1.1
                    },
                    "rangeUnc": {
                        "type": "number",
                        "description": "One sigma uncertainty in the line of sight range, in km.",
                        "format": "double",
                        "example": 1.1
                    },
                    "rangeBias": {
                        "type": "number",
                        "description": "Sensor line of sight range bias in km.",
                        "format": "double",
                        "example": 1.1
                    },
                    "rangeRate": {
                        "type": "number",
                        "description": "Rate of change of the line of sight range in km/sec.",
                        "format": "double",
                        "example": 1.1
                    },
                    "rangeRateUnc": {
                        "type": "number",
                        "description": "One sigma uncertainty in the line of sight range rate, in\nkm/sec.",
                        "format": "double",
                        "example": 1.1
                    },
                    "ra": {
                        "type": "number",
                        "description": "Line of sight right ascension, in degrees, in the specified\nreferenceFrame.  If referenceFrame is null then J2K should be assumed.",
                        "format": "double",
                        "example": 1.1
                    },
                    "raRate": {
                        "type": "number",
                        "description": "Line of sight right ascension rate of change, in degrees/sec,\nin the specified referenceFrame.  If referenceFrame is null then J2K\nshould be assumed.",
                        "format": "double",
                        "example": 1.1
                    },
                    "raUnc": {
                        "type": "number",
                        "description": "One sigma uncertainty in the line of sight right ascension\nangle, in degrees.",
                        "format": "double",
                        "example": 1.1
                    },
                    "raBias": {
                        "type": "number",
                        "description": "Sensor line of sight right ascension bias in degrees.",
                        "format": "double",
                        "example": 1.1
                    },
                    "declination": {
                        "type": "number",
                        "description": "Line of sight declination, in degrees, in the specified referenceFrame.\nIf referenceFrame is null then J2K should be assumed.",
                        "format": "double",
                        "example": 1.1
                    },
                    "declinationRate": {
                        "type": "number",
                        "description": "Line of sight declination rate of change, in degrees/sec,\nin the specified referenceFrame.  If referenceFrame is null then J2K\nshould be assumed.",
                        "format": "double",
                        "example": 1.1
                    },
                    "declinationUnc": {
                        "type": "number",
                        "description": "One sigma uncertainty in the line of sight declination angle,\nin degrees.",
                        "format": "double",
                        "example": 1.1
                    },
                    "declinationBias": {
                        "type": "number",
                        "description": "Sensor line of sight declination angle bias in degrees.",
                        "format": "double",
                        "example": 1.1
                    },
                    "losx": {
                        "type": "number",
                        "description": "Line-of-sight cartesian X position of the target, in km, in\nthe specified referenceFrame.  If referenceFrame is null then J2K should\nbe assumed.",
                        "format": "double",
                        "example": 1.1
                    },
                    "losy": {
                        "type": "number",
                        "description": "Line-of-sight cartesian Y position of the target, in km, in\nthe specified referenceFrame.  If referenceFrame is null then J2K should\nbe assumed.",
                        "format": "double",
                        "example": 1.1
                    },
                    "losz": {
                        "type": "number",
                        "description": "Line-of-sight cartesian Z position of the target, in km, in\nthe specified referenceFrame.  If referenceFrame is null then J2K should\nbe assumed.",
                        "format": "double",
                        "example": 1.1
                    },
                    "losUnc": {
                        "type": "number",
                        "description": "One sigma uncertainty in the line of sight pointing in micro-radians.",
                        "format": "double",
                        "example": 1.1
                    },
                    "losxvel": {
                        "type": "number",
                        "description": "Line-of-sight cartesian X velocity of target, in km/sec, in\nthe specified referenceFrame.  If referenceFrame is null then J2K should\nbe assumed.",
                        "format": "double",
                        "example": 1.1
                    },
                    "losyvel": {
                        "type": "number",
                        "description": "Line-of-sight cartesian Y velocity of target, in km/sec, in\nthe specified referenceFrame.  If referenceFrame is null then J2K should\nbe assumed.",
                        "format": "double",
                        "example": 1.1
                    },
                    "loszvel": {
                        "type": "number",
                        "description": "Line-of-sight cartesian Z velocity of target, in km/sec, in\nthe specified referenceFrame.  If referenceFrame is null then J2K should\nbe assumed.",
                        "format": "double",
                        "example": 1.1
                    },
                    "senlat": {
                        "type": "number",
                        "description": "Sensor WGS84 latitude at obTime (if mobile/onorbit) in degrees.\nIf null, can be obtained from sensor info. -90 to 90 degrees (negative\nvalues south of equator).",
                        "format": "double",
                        "example": 45.1
                    },
                    "senlon": {
                        "type": "number",
                        "description": "Sensor WGS84 longitude at obTime (if mobile/onorbit) in degrees.\nIf null, can be obtained from sensor info. -180 to 180 degrees (negative\nvalues west of Prime Meridian).",
                        "format": "double",
                        "example": 179.1
                    },
                    "senalt": {
                        "type": "number",
                        "description": "Sensor altitude at obTime (if mobile/onorbit) in km.",
                        "format": "double",
                        "example": 1.1
                    },
                    "senx": {
                        "type": "number",
                        "description": "Cartesian X position of the observing mobile/onorbit sensor\nat obTime, in km, in the specified senReferenceFrame.  If senReferenceFrame\nis null then J2K should be assumed.",
                        "format": "double",
                        "example": 1.1
                    },
                    "seny": {
                        "type": "number",
                        "description": "Cartesian Y position of the observing mobile/onorbit sensor\nat obTime, in km, in the specified senReferenceFrame.  If senReferenceFrame\nis null then J2K should be assumed.",
                        "format": "double",
                        "example": 1.1
                    },
                    "senz": {
                        "type": "number",
                        "description": "Cartesian Z position of the observing mobile/onorbit sensor\nat obTime, in km, in the specified senReferenceFrame.  If senReferenceFrame\nis null then J2K should be assumed.",
                        "format": "double",
                        "example": 1.1
                    },
                    "fovCount": {
                        "type": "integer",
                        "description": "The number of RSOs detected in the sensor field of view.",
                        "format": "int32",
                        "example": 1
                    },
                    "expDuration": {
                        "type": "number",
                        "description": "Image exposure duration in seconds.",
                        "format": "double",
                        "example": 1.1
                    },
                    "zeroptd": {
                        "type": "number",
                        "description": "Formula: 2.5 * log_10 (zero_mag_counts / expDuration).",
                        "format": "double",
                        "example": 1.1
                    },
                    "netObjSig": {
                        "type": "number",
                        "description": "Net object signature = counts / expDuration.",
                        "format": "double",
                        "example": 1.1
                    },
                    "netObjSigUnc": {
                        "type": "number",
                        "description": "Net object signature uncertainty = counts uncertainty / expDuration.",
                        "format": "double",
                        "example": 1.1
                    },
                    "mag": {
                        "type": "number",
                        "description": "Calibrated magnitude in units of magnitudes.",
                        "format": "double",
                        "example": 1.1
                    },
                    "magUnc": {
                        "type": "number",
                        "description": "Uncertainty of calibrated magnitude in units of magnitudes.",
                        "format": "double",
                        "example": 1.1
                    },
                    "magNormRange": {
                        "type": "number",
                        "description": "Formula: mag - 5.0 * log_10(geo_range / 1000000.0).",
                        "format": "double",
                        "example": 1.1
                    },
                    "geolat": {
                        "type": "number",
                        "description": "For GEO detections, the latitude in degrees north.",
                        "format": "double",
                        "example": 1.1
                    },
                    "geolon": {
                        "type": "number",
                        "description": "For GEO detections, the longitude in degrees east.",
                        "format": "double",
                        "example": 1.1
                    },
                    "geoalt": {
                        "type": "number",
                        "description": "For GEO detections, the altitude in km.",
                        "format": "double",
                        "example": 1.1
                    },
                    "georange": {
                        "type": "number",
                        "description": "For GEO detections, the range in km.",
                        "format": "double",
                        "example": 1.1
                    },
                    "skyBkgrnd": {
                        "type": "number",
                        "description": "Average Sky Background signal, in Magnitudes. Sky Background\nrefers to the incoming light from an apparently empty part of the night\nsky.",
                        "format": "double",
                        "example": 1.1
                    },
                    "primaryExtinction": {
                        "type": "number",
                        "description": "Primary Extinction Coefficient, in Magnitudes. Primary Extinction\nis the coefficient applied to the airmass to determine how much the\nobserved visual magnitude has been attenuated by the atmosphere. Extinction,\nin general, describes the absorption and scattering of electromagnetic\nradiation by dust and gas between an emitting astronomical object and\nthe observer.  See the EOObservationDetails API for specification of\nextinction coefficients for multiple spectral filters.",
                        "format": "double",
                        "example": 1.1
                    },
                    "primaryExtinctionUnc": {
                        "type": "number",
                        "description": "Primary Extinction Coefficient Uncertainty, in Magnitudes.",
                        "format": "double",
                        "example": 1.1
                    },
                    "solarPhaseAngle": {
                        "type": "number",
                        "description": "The angle, in degrees, between the target-to-observer vector\nand the target-to-sun vector.",
                        "format": "double",
                        "example": 1.1
                    },
                    "solarEqPhaseAngle": {
                        "type": "number",
                        "description": "The angle, in degrees, between the projections of the target-to-observer\nvector and the target-to-sun vector onto the equatorial plane. The angle\nis represented as negative when closing and positive when opening.",
                        "format": "double",
                        "example": 1.1
                    },
                    "solarDecAngle": {
                        "type": "number",
                        "description": "Angle from the sun to the equatorial plane.",
                        "format": "double",
                        "example": 1.1
                    },
                    "shutterDelay": {
                        "type": "number",
                        "description": "Shutter delay in seconds.",
                        "format": "double",
                        "example": 1.1
                    },
                    "timingBias": {
                        "type": "number",
                        "description": "Sensor timing bias in seconds.",
                        "format": "double",
                        "example": 1.1
                    },
                    "rawFileURI": {
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional URI location in the document repository of the raw\nfile parsed by the system to produce this record. To download the raw\nfile, prepend https://udl-hostname/scs/download?id= to this value.",
                        "example": "Example URI"
                    },
                    "intensity": {
                        "type": "number",
                        "description": "Intensity of the target for IR observations, in kw/sr/um.",
                        "format": "double",
                        "example": 1.1
                    },
                    "bgIntensity": {
                        "type": "number",
                        "description": "Background intensity for IR observations, in kw/sr/um.",
                        "format": "double",
                        "example": 1.1
                    },
                    "descriptor": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional source-provided and searchable metadata or descriptor\nof the data.",
                        "example": "PROVIDED_DATA1"
                    },
                    "source": {
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string",
                        "description": "Source of the data.",
                        "example": "Bluestaq"
                    },
                    "origin": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "Originating system or organization which produced the data,\nif different from the source. The origin may be different than the source\nif the source was a mediating system which forwarded the data on behalf\nof the origin system. If null, the source may be assumed to be the origin.",
                        "example": "THIRD_PARTY_DATASOURCE"
                    },
                    "dataMode": {
                        "type": "string",
                        "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
                        "example": "TEST",
                        "enum": [
                            "REAL",
                            "TEST",
                            "SIMULATED",
                            "EXERCISE"
                        ]
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Time the row was created in the database, auto-populated by\nthe system.",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2018-01-01T16:00:00.123Z"
                    },
                    "createdBy": {
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string",
                        "description": "Application user who created the row in the database, auto-populated\nby the system.",
                        "readOnly": true,
                        "example": "some.user"
                    },
                    "referenceFrame": {
                        "maxLength": 24,
                        "minLength": 0,
                        "type": "string",
                        "description": "The reference frame of the EOObservation measurements. If the\nreferenceFrame is null it is assumed to be J2000.",
                        "example": "J2000",
                        "enum": [
                            "J2000",
                            "GCRF",
                            "ITRF",
                            "TEME"
                        ]
                    },
                    "senReferenceFrame": {
                        "maxLength": 24,
                        "minLength": 0,
                        "type": "string",
                        "description": "The reference frame of the observing sensor state. If the senReferenceFrame\nis null it is assumed to be J2000.",
                        "example": "J2000",
                        "enum": [
                            "J2000",
                            "EFG/TDR",
                            "ECR/ECEF",
                            "TEME",
                            "ITRF",
                            "GCRF"
                        ]
                    },
                    "umbra": {
                        "type": "boolean",
                        "description": "Boolean indicating that the target object was in umbral eclipse\nat the time of this observation.",
                        "example": false
                    },
                    "penumbra": {
                        "type": "boolean",
                        "description": "Boolean indicating that the target object was in a penumbral\neclipse at the time of this observation.",
                        "example": false
                    },
                    "origNetwork": {
                        "maxLength": 32,
                        "minLength": 0,
                        "type": "string",
                        "description": "The originating source network on which this record was created,\nauto-populated by the system.",
                        "readOnly": true,
                        "example": "ORIG"
                    },
                    "sourceDL": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "The source data library from which this record was received.\nThis could be a remote or tactical UDL or another data library. If null,\nthe record should be assumed to have originated from the primary Enterprise\nUDL.",
                        "readOnly": true,
                        "example": "AXE"
                    },
                    "type": {
                        "type": "string",
                        "description": "Read only enumeration specifying the type of observation (e.g.\nOPTICAL, RADAR, RF, etc).",
                        "readOnly": true,
                        "example": "OPTICAL"
                    }
                },
                "description": "Model representation of observation data for electro-optical based\nsensor phenomenologies. ECI J2K is the preferred reference frame for EOObservations,\nhowever, several user-specified reference frames are accommodated. Users\nshould check the EOObservation record as well as the 'Discover' tab in the\nstorefront to confirm the coordinate frames used by the data provider.",
                "example": {
                    "elevationBias": 1.1,
                    "timingBias": 1.1,
                    "netObjSigUnc": 1.1,
                    "fovCount": 1,
                    "azimuth": 1.1,
                    "shutterDelay": 1.1,
                    "descriptor": "PROVIDED_DATA1",
                    "source": "Bluestaq",
                    "type": "OPTICAL",
                    "rangeRate": 1.1,
                    "origNetwork": "ORIG",
                    "collectMethod": "AUTOTRACK",
                    "magUnc": 1.1,
                    "createdAt": "2018-01-01T16:00:00.123Z",
                    "primaryExtinction": 1.1,
                    "senReferenceFrame": "J2000",
                    "losz": 1.1,
                    "rawFileURI": "Example URI",
                    "idSensor": "SENSOR-ID",
                    "losx": 1.1,
                    "id": "EOOBSERVATION-ID",
                    "losy": 1.1,
                    "bgIntensity": 1.1,
                    "netObjSig": 1.1,
                    "corrQuality": 1.1,
                    "trackId": "TRACK-ID",
                    "uct": false,
                    "seny": 1.1,
                    "geolat": 1.1,
                    "raRate": 1.1,
                    "senx": 1.1,
                    "loszvel": 1.1,
                    "senz": 1.1,
                    "transactionId": "TRANSACTION-ID",
                    "declinationUnc": 1.1,
                    "ra": 1.1,
                    "solarEqPhaseAngle": 1.1,
                    "penumbra": false,
                    "declinationRate": 1.1,
                    "zeroptd": 1.1,
                    "obTime": "2018-01-01T16:00:00.123Z",
                    "rangeBias": 1.1,
                    "referenceFrame": "J2000",
                    "geoalt": 1.1,
                    "georange": 1.1,
                    "senlat": 45.1,
                    "idSkyImagery": "SKYIMAGERY-ID",
                    "satNo": 5,
                    "magNormRange": 1.1,
                    "idOnOrbit": "ONORBIT-ID",
                    "origin": "THIRD_PARTY_DATASOURCE",
                    "azimuthRate": 1.1,
                    "raUnc": 1.1,
                    "range": 1.1,
                    "skyBkgrnd": 1.1,
                    "losyvel": 1.1,
                    "origSensorId": "ORIGSENSOR-ID",
                    "senalt": 1.1,
                    "primaryExtinctionUnc": 1.1,
                    "mag": 1.1,
                    "azimuthUnc": 1.1,
                    "solarDecAngle": 1.1,
                    "azimuthBias": 1.1,
                    "umbra": false,
                    "classificationMarking": "U",
                    "geolon": 1.1,
                    "origObjectId": "ORIGOBJECT-ID",
                    "elevation": 1.1,
                    "losxvel": 1.1,
                    "rangeRateUnc": 1.1,
                    "elevationRate": 1.1,
                    "losUnc": 1.1,
                    "expDuration": 1.1,
                    "obPosition": "FIRST",
                    "senlon": 179.1,
                    "solarPhaseAngle": 1.1,
                    "intensity": 1.1,
                    "dataMode": "TEST",
                    "declination": 1.1,
                    "declinationBias": 1.1,
                    "createdBy": "some.user",
                    "sourceDL": "AXE",
                    "raBias": 1.1,
                    "elevationUnc": 1.1,
                    "taskId": "TASK-ID",
                    "rangeUnc": 1.1
                }
            },
            "EOObservation_Full": {
                "required": [
                    "classificationMarking",
                    "dataMode",
                    "obTime",
                    "source"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "maxLength": 36,
                        "minLength": 1,
                        "type": "string",
                        "description": "Unique identifier of the record, auto-generated by the system.",
                        "example": "EOOBSERVATION-ID"
                    },
                    "classificationMarking": {
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string",
                        "description": "Classification marking of the data in IC/CAPCO Portion-marked\nformat.",
                        "example": "U"
                    },
                    "obTime": {
                        "type": "string",
                        "description": "Ob detection time in ISO 8601 UTC with microsecond precision.",
                        "format": "date-time",
                        "example": "2018-01-01T16:00:00.123Z"
                    },
                    "corrQuality": {
                        "type": "number",
                        "description": "Object Correlation Quality value (non-standardized). Users\nshould consult data providers regarding the expected range of values.",
                        "format": "double",
                        "example": 1.1
                    },
                    "idOnOrbit": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "Unique identifier of the target on-orbit object, if correlated.",
                        "readOnly": true,
                        "example": "ONORBIT-ID"
                    },
                    "idSensor": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "Unique identifier of the reporting sensor.",
                        "example": "SENSOR-ID"
                    },
                    "idSkyImagery": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "Unique identifier of the Sky Imagery.",
                        "example": "SKYIMAGERY-ID"
                    },
                    "collectMethod": {
                        "maxLength": 24,
                        "minLength": 0,
                        "type": "string",
                        "description": "Method indicating telescope movement during collection (AUTOTRACK,\nMANUAL AUTOTRACK, MANUAL RATE TRACK, MANUAL SIDEREAL, SIDEREAL, RATE\nTRACK).",
                        "example": "AUTOTRACK"
                    },
                    "satNo": {
                        "type": "integer",
                        "description": "Satellite/Catalog number of the target on-orbit object.",
                        "format": "int32",
                        "example": 5
                    },
                    "taskId": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional identifier to indicate the specific tasking which\nproduced this observation.",
                        "example": "TASK-ID"
                    },
                    "transactionId": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional identifier to track a commercial or marketplace transaction\nexecuted to produce this data.",
                        "example": "TRANSACTION-ID"
                    },
                    "trackId": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional identifier of the track to which this observation\nbelongs.",
                        "example": "TRACK-ID"
                    },
                    "obPosition": {
                        "maxLength": 8,
                        "minLength": 0,
                        "type": "string",
                        "description": "The position of this observation within a track (FENCE, FIRST,\nIN, LAST, SINGLE).  This identifier is optional and, if null, no assumption\nshould be made regarding whether other observations may or may not exist\nto compose a track.",
                        "example": "FIRST"
                    },
                    "origObjectId": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional identifier provided by observation source to indicate\nthe target onorbit object of this observation. This may be an internal\nidentifier and not necessarily a valid satellite number.",
                        "example": "ORIGOBJECT-ID"
                    },
                    "origSensorId": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional identifier provided by observation source to indicate\nthe sensor identifier which produced this observation. This may be an\ninternal identifier and not necessarily a valid sensor ID.",
                        "example": "ORIGSENSOR-ID"
                    },
                    "uct": {
                        "type": "boolean",
                        "description": "Boolean indicating this observation is part of an uncorrelated\ntrack or was unable to be correlated to a known object. This flag should\nonly be set to true by data providers after an attempt to correlate\nto an on-orbit object was made and failed. If unable to correlate, the\n'origObjectId' field may be populated with an internal data provider\nspecific identifier.",
                        "example": false
                    },
                    "azimuth": {
                        "type": "number",
                        "description": "Line of sight azimuth angle in degrees and topocentric frame.",
                        "format": "double",
                        "example": 1.1
                    },
                    "azimuthUnc": {
                        "type": "number",
                        "description": "One sigma uncertainty in the line of sight azimuth angle,\nin degrees.",
                        "format": "double",
                        "example": 1.1
                    },
                    "azimuthBias": {
                        "type": "number",
                        "description": "Sensor line of sight azimuth angle bias in degrees.",
                        "format": "double",
                        "example": 1.1
                    },
                    "azimuthRate": {
                        "type": "number",
                        "description": "Rate of change of the line of sight azimuth in degrees per\nsecond.",
                        "format": "double",
                        "example": 1.1
                    },
                    "elevation": {
                        "type": "number",
                        "description": "Line of sight elevation in degrees and topocentric frame.",
                        "format": "double",
                        "example": 1.1
                    },
                    "elevationUnc": {
                        "type": "number",
                        "description": "One sigma uncertainty in the line of sight elevation angle,\nin degrees.",
                        "format": "double",
                        "example": 1.1
                    },
                    "elevationBias": {
                        "type": "number",
                        "description": "Sensor line of sight elevation bias in degrees.",
                        "format": "double",
                        "example": 1.1
                    },
                    "elevationRate": {
                        "type": "number",
                        "description": "Rate of change of the line of sight elevation in degrees per\nsecond.",
                        "format": "double",
                        "example": 1.1
                    },
                    "range": {
                        "type": "number",
                        "description": "Line of sight range in km.",
                        "format": "double",
                        "example": 1.1
                    },
                    "rangeUnc": {
                        "type": "number",
                        "description": "One sigma uncertainty in the line of sight range, in km.",
                        "format": "double",
                        "example": 1.1
                    },
                    "rangeBias": {
                        "type": "number",
                        "description": "Sensor line of sight range bias in km.",
                        "format": "double",
                        "example": 1.1
                    },
                    "rangeRate": {
                        "type": "number",
                        "description": "Rate of change of the line of sight range in km/sec.",
                        "format": "double",
                        "example": 1.1
                    },
                    "rangeRateUnc": {
                        "type": "number",
                        "description": "One sigma uncertainty in the line of sight range rate, in\nkm/sec.",
                        "format": "double",
                        "example": 1.1
                    },
                    "ra": {
                        "type": "number",
                        "description": "Line of sight right ascension, in degrees, in the specified\nreferenceFrame.  If referenceFrame is null then J2K should be assumed.",
                        "format": "double",
                        "example": 1.1
                    },
                    "raRate": {
                        "type": "number",
                        "description": "Line of sight right ascension rate of change, in degrees/sec,\nin the specified referenceFrame.  If referenceFrame is null then J2K\nshould be assumed.",
                        "format": "double",
                        "example": 1.1
                    },
                    "raUnc": {
                        "type": "number",
                        "description": "One sigma uncertainty in the line of sight right ascension\nangle, in degrees.",
                        "format": "double",
                        "example": 1.1
                    },
                    "raBias": {
                        "type": "number",
                        "description": "Sensor line of sight right ascension bias in degrees.",
                        "format": "double",
                        "example": 1.1
                    },
                    "declination": {
                        "type": "number",
                        "description": "Line of sight declination, in degrees, in the specified referenceFrame.\nIf referenceFrame is null then J2K should be assumed.",
                        "format": "double",
                        "example": 1.1
                    },
                    "declinationRate": {
                        "type": "number",
                        "description": "Line of sight declination rate of change, in degrees/sec,\nin the specified referenceFrame.  If referenceFrame is null then J2K\nshould be assumed.",
                        "format": "double",
                        "example": 1.1
                    },
                    "declinationUnc": {
                        "type": "number",
                        "description": "One sigma uncertainty in the line of sight declination angle,\nin degrees.",
                        "format": "double",
                        "example": 1.1
                    },
                    "declinationBias": {
                        "type": "number",
                        "description": "Sensor line of sight declination angle bias in degrees.",
                        "format": "double",
                        "example": 1.1
                    },
                    "losx": {
                        "type": "number",
                        "description": "Line-of-sight cartesian X position of the target, in km, in\nthe specified referenceFrame.  If referenceFrame is null then J2K should\nbe assumed.",
                        "format": "double",
                        "example": 1.1
                    },
                    "losy": {
                        "type": "number",
                        "description": "Line-of-sight cartesian Y position of the target, in km, in\nthe specified referenceFrame.  If referenceFrame is null then J2K should\nbe assumed.",
                        "format": "double",
                        "example": 1.1
                    },
                    "losz": {
                        "type": "number",
                        "description": "Line-of-sight cartesian Z position of the target, in km, in\nthe specified referenceFrame.  If referenceFrame is null then J2K should\nbe assumed.",
                        "format": "double",
                        "example": 1.1
                    },
                    "losUnc": {
                        "type": "number",
                        "description": "One sigma uncertainty in the line of sight pointing in micro-radians.",
                        "format": "double",
                        "example": 1.1
                    },
                    "losxvel": {
                        "type": "number",
                        "description": "Line-of-sight cartesian X velocity of target, in km/sec, in\nthe specified referenceFrame.  If referenceFrame is null then J2K should\nbe assumed.",
                        "format": "double",
                        "example": 1.1
                    },
                    "losyvel": {
                        "type": "number",
                        "description": "Line-of-sight cartesian Y velocity of target, in km/sec, in\nthe specified referenceFrame.  If referenceFrame is null then J2K should\nbe assumed.",
                        "format": "double",
                        "example": 1.1
                    },
                    "loszvel": {
                        "type": "number",
                        "description": "Line-of-sight cartesian Z velocity of target, in km/sec, in\nthe specified referenceFrame.  If referenceFrame is null then J2K should\nbe assumed.",
                        "format": "double",
                        "example": 1.1
                    },
                    "senlat": {
                        "type": "number",
                        "description": "Sensor WGS84 latitude at obTime (if mobile/onorbit) in degrees.\nIf null, can be obtained from sensor info. -90 to 90 degrees (negative\nvalues south of equator).",
                        "format": "double",
                        "example": 45.1
                    },
                    "senlon": {
                        "type": "number",
                        "description": "Sensor WGS84 longitude at obTime (if mobile/onorbit) in degrees.\nIf null, can be obtained from sensor info. -180 to 180 degrees (negative\nvalues west of Prime Meridian).",
                        "format": "double",
                        "example": 179.1
                    },
                    "senalt": {
                        "type": "number",
                        "description": "Sensor altitude at obTime (if mobile/onorbit) in km.",
                        "format": "double",
                        "example": 1.1
                    },
                    "senx": {
                        "type": "number",
                        "description": "Cartesian X position of the observing mobile/onorbit sensor\nat obTime, in km, in the specified senReferenceFrame.  If senReferenceFrame\nis null then J2K should be assumed.",
                        "format": "double",
                        "example": 1.1
                    },
                    "seny": {
                        "type": "number",
                        "description": "Cartesian Y position of the observing mobile/onorbit sensor\nat obTime, in km, in the specified senReferenceFrame.  If senReferenceFrame\nis null then J2K should be assumed.",
                        "format": "double",
                        "example": 1.1
                    },
                    "senz": {
                        "type": "number",
                        "description": "Cartesian Z position of the observing mobile/onorbit sensor\nat obTime, in km, in the specified senReferenceFrame.  If senReferenceFrame\nis null then J2K should be assumed.",
                        "format": "double",
                        "example": 1.1
                    },
                    "senvelx": {
                        "type": "number",
                        "description": "Cartesian X velocity of the observing mobile/onorbit sensor\nat obTime, in km/sec, in the specified senReferenceFrame.  If senReferenceFrame\nis null then J2K should be assumed.",
                        "format": "double",
                        "example": 1.1
                    },
                    "senvely": {
                        "type": "number",
                        "description": "Cartesian Y velocity of the observing mobile/onorbit sensor\nat obTime, in km/sec, in the specified senReferenceFrame.  If senReferenceFrame\nis null then J2K should be assumed.",
                        "format": "double",
                        "example": 1.1
                    },
                    "senvelz": {
                        "type": "number",
                        "description": "Cartesian Z velocity of the observing mobile/onorbit sensor\nat obTime, in km/sec, in the specified senReferenceFrame.  If senReferenceFrame\nis null then J2K should be assumed.",
                        "format": "double",
                        "example": 1.1
                    },
                    "fovCount": {
                        "type": "integer",
                        "description": "The number of RSOs detected in the sensor field of view.",
                        "format": "int32",
                        "example": 1
                    },
                    "expDuration": {
                        "type": "number",
                        "description": "Image exposure duration in seconds.",
                        "format": "double",
                        "example": 1.1
                    },
                    "zeroptd": {
                        "type": "number",
                        "description": "Formula: 2.5 * log_10 (zero_mag_counts / expDuration).",
                        "format": "double",
                        "example": 1.1
                    },
                    "netObjSig": {
                        "type": "number",
                        "description": "Net object signature = counts / expDuration.",
                        "format": "double",
                        "example": 1.1
                    },
                    "netObjSigUnc": {
                        "type": "number",
                        "description": "Net object signature uncertainty = counts uncertainty / expDuration.",
                        "format": "double",
                        "example": 1.1
                    },
                    "mag": {
                        "type": "number",
                        "description": "Calibrated magnitude in units of magnitudes.",
                        "format": "double",
                        "example": 1.1
                    },
                    "magUnc": {
                        "type": "number",
                        "description": "Uncertainty of calibrated magnitude in units of magnitudes.",
                        "format": "double",
                        "example": 1.1
                    },
                    "magNormRange": {
                        "type": "number",
                        "description": "Formula: mag - 5.0 * log_10(geo_range / 1000000.0).",
                        "format": "double",
                        "example": 1.1
                    },
                    "geolat": {
                        "type": "number",
                        "description": "For GEO detections, the latitude in degrees north.",
                        "format": "double",
                        "example": 1.1
                    },
                    "geolon": {
                        "type": "number",
                        "description": "For GEO detections, the longitude in degrees east.",
                        "format": "double",
                        "example": 1.1
                    },
                    "geoalt": {
                        "type": "number",
                        "description": "For GEO detections, the altitude in km.",
                        "format": "double",
                        "example": 1.1
                    },
                    "georange": {
                        "type": "number",
                        "description": "For GEO detections, the range in km.",
                        "format": "double",
                        "example": 1.1
                    },
                    "skyBkgrnd": {
                        "type": "number",
                        "description": "Average Sky Background signal, in Magnitudes. Sky Background\nrefers to the incoming light from an apparently empty part of the night\nsky.",
                        "format": "double",
                        "example": 1.1
                    },
                    "primaryExtinction": {
                        "type": "number",
                        "description": "Primary Extinction Coefficient, in Magnitudes. Primary Extinction\nis the coefficient applied to the airmass to determine how much the\nobserved visual magnitude has been attenuated by the atmosphere. Extinction,\nin general, describes the absorption and scattering of electromagnetic\nradiation by dust and gas between an emitting astronomical object and\nthe observer.  See the EOObservationDetails API for specification of\nextinction coefficients for multiple spectral filters.",
                        "format": "double",
                        "example": 1.1
                    },
                    "primaryExtinctionUnc": {
                        "type": "number",
                        "description": "Primary Extinction Coefficient Uncertainty, in Magnitudes.",
                        "format": "double",
                        "example": 1.1
                    },
                    "solarPhaseAngle": {
                        "type": "number",
                        "description": "The angle, in degrees, between the target-to-observer vector\nand the target-to-sun vector.",
                        "format": "double",
                        "example": 1.1
                    },
                    "solarEqPhaseAngle": {
                        "type": "number",
                        "description": "The angle, in degrees, between the projections of the target-to-observer\nvector and the target-to-sun vector onto the equatorial plane. The angle\nis represented as negative when closing and positive when opening.",
                        "format": "double",
                        "example": 1.1
                    },
                    "solarDecAngle": {
                        "type": "number",
                        "description": "Angle from the sun to the equatorial plane.",
                        "format": "double",
                        "example": 1.1
                    },
                    "shutterDelay": {
                        "type": "number",
                        "description": "Shutter delay in seconds.",
                        "format": "double",
                        "example": 1.1
                    },
                    "timingBias": {
                        "type": "number",
                        "description": "Sensor timing bias in seconds.",
                        "format": "double",
                        "example": 1.1
                    },
                    "rawFileURI": {
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional URI location in the document repository of the raw\nfile parsed by the system to produce this record. To download the raw\nfile, prepend https://udl-hostname/scs/download?id= to this value.",
                        "example": "Example URI"
                    },
                    "intensity": {
                        "type": "number",
                        "description": "Intensity of the target for IR observations, in kw/sr/um.",
                        "format": "double",
                        "example": 1.1
                    },
                    "bgIntensity": {
                        "type": "number",
                        "description": "Background intensity for IR observations, in kw/sr/um.",
                        "format": "double",
                        "example": 1.1
                    },
                    "descriptor": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional source-provided and searchable metadata or descriptor\nof the data.",
                        "example": "PROVIDED_DATA1"
                    },
                    "source": {
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string",
                        "description": "Source of the data.",
                        "example": "Bluestaq"
                    },
                    "origin": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "Originating system or organization which produced the data,\nif different from the source. The origin may be different than the source\nif the source was a mediating system which forwarded the data on behalf\nof the origin system. If null, the source may be assumed to be the origin.",
                        "example": "THIRD_PARTY_DATASOURCE"
                    },
                    "dataMode": {
                        "type": "string",
                        "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
                        "example": "TEST",
                        "enum": [
                            "REAL",
                            "TEST",
                            "SIMULATED",
                            "EXERCISE"
                        ]
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Time the row was created in the database, auto-populated by\nthe system.",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2018-01-01T16:00:00.123Z"
                    },
                    "createdBy": {
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string",
                        "description": "Application user who created the row in the database, auto-populated\nby the system.",
                        "readOnly": true,
                        "example": "some.user"
                    },
                    "zeroPtdUnc": {
                        "type": "number",
                        "description": "This is the uncertainty in the zero point for the filter used\nfor this observation/row in units of mag. For use with differential photometry.",
                        "format": "double",
                        "example": 1.1
                    },
                    "referenceFrame": {
                        "type": "string",
                        "description": "The reference frame of the EOObservation measurements. If the\nreferenceFrame is null it is assumed to be J2000.",
                        "example": "J2000",
                        "enum": [
                            "J2000",
                            "GCRF",
                            "ITRF",
                            "TEME"
                        ]
                    },
                    "senReferenceFrame": {
                        "type": "string",
                        "description": "The reference frame of the observing sensor state. If the senReferenceFrame\nis null it is assumed to be J2000.",
                        "example": "J2000",
                        "enum": [
                            "J2000",
                            "EFG/TDR",
                            "ECR/ECEF",
                            "TEME",
                            "ITRF",
                            "GCRF"
                        ]
                    },
                    "umbra": {
                        "type": "boolean",
                        "description": "Boolean indicating that the target object was in umbral eclipse\nat the time of this observation.",
                        "example": false
                    },
                    "penumbra": {
                        "type": "boolean",
                        "description": "Boolean indicating that the target object was in a penumbral\neclipse at the time of this observation.",
                        "example": false
                    },
                    "origNetwork": {
                        "maxLength": 32,
                        "minLength": 0,
                        "type": "string",
                        "description": "The originating source network on which this record was created,\nauto-populated by the system.",
                        "readOnly": true,
                        "example": "ORIG"
                    },
                    "sourceDL": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "The source data library from which this record was received.\nThis could be a remote or tactical UDL or another data library. If null,\nthe record should be assumed to have originated from the primary Enterprise\nUDL.",
                        "readOnly": true,
                        "example": "AXE"
                    },
                    "type": {
                        "type": "string",
                        "description": "Read only enumeration specifying the type of observation (e.g.\nOPTICAL, RADAR, RF, etc).",
                        "readOnly": true,
                        "example": "OPTICAL"
                    }
                },
                "description": "Model representation of observation data for electro-optical based\nsensor phenomenologies. ECI J2K is the preferred reference frame for EOObservations,\nhowever, several user-specified reference frames are accommodated. Users\nshould check the EOObservation record as well as the 'Discover' tab in the\nstorefront to confirm the coordinate frames used by the data provider.",
                "example": {
                    "elevationBias": 1.1,
                    "timingBias": 1.1,
                    "netObjSigUnc": 1.1,
                    "fovCount": 1,
                    "azimuth": 1.1,
                    "shutterDelay": 1.1,
                    "descriptor": "PROVIDED_DATA1",
                    "source": "Bluestaq",
                    "type": "OPTICAL",
                    "rangeRate": 1.1,
                    "origNetwork": "ORIG",
                    "collectMethod": "AUTOTRACK",
                    "magUnc": 1.1,
                    "createdAt": "2018-01-01T16:00:00.123Z",
                    "primaryExtinction": 1.1,
                    "senReferenceFrame": "J2000",
                    "losz": 1.1,
                    "rawFileURI": "Example URI",
                    "idSensor": "SENSOR-ID",
                    "losx": 1.1,
                    "id": "EOOBSERVATION-ID",
                    "losy": 1.1,
                    "zeroPtdUnc": 1.1,
                    "bgIntensity": 1.1,
                    "netObjSig": 1.1,
                    "corrQuality": 1.1,
                    "trackId": "TRACK-ID",
                    "uct": false,
                    "seny": 1.1,
                    "geolat": 1.1,
                    "raRate": 1.1,
                    "senx": 1.1,
                    "loszvel": 1.1,
                    "senz": 1.1,
                    "transactionId": "TRANSACTION-ID",
                    "declinationUnc": 1.1,
                    "ra": 1.1,
                    "solarEqPhaseAngle": 1.1,
                    "penumbra": false,
                    "declinationRate": 1.1,
                    "zeroptd": 1.1,
                    "obTime": "2018-01-01T16:00:00.123Z",
                    "rangeBias": 1.1,
                    "referenceFrame": "J2000",
                    "geoalt": 1.1,
                    "georange": 1.1,
                    "senlat": 45.1,
                    "idSkyImagery": "SKYIMAGERY-ID",
                    "satNo": 5,
                    "magNormRange": 1.1,
                    "idOnOrbit": "ONORBIT-ID",
                    "origin": "THIRD_PARTY_DATASOURCE",
                    "azimuthRate": 1.1,
                    "raUnc": 1.1,
                    "range": 1.1,
                    "skyBkgrnd": 1.1,
                    "losyvel": 1.1,
                    "origSensorId": "ORIGSENSOR-ID",
                    "senalt": 1.1,
                    "primaryExtinctionUnc": 1.1,
                    "senvelz": 1.1,
                    "mag": 1.1,
                    "azimuthUnc": 1.1,
                    "senvely": 1.1,
                    "solarDecAngle": 1.1,
                    "azimuthBias": 1.1,
                    "umbra": false,
                    "classificationMarking": "U",
                    "senvelx": 1.1,
                    "geolon": 1.1,
                    "origObjectId": "ORIGOBJECT-ID",
                    "elevation": 1.1,
                    "losxvel": 1.1,
                    "rangeRateUnc": 1.1,
                    "elevationRate": 1.1,
                    "losUnc": 1.1,
                    "expDuration": 1.1,
                    "obPosition": "FIRST",
                    "senlon": 179.1,
                    "solarPhaseAngle": 1.1,
                    "intensity": 1.1,
                    "dataMode": "TEST",
                    "declination": 1.1,
                    "declinationBias": 1.1,
                    "createdBy": "some.user",
                    "sourceDL": "AXE",
                    "raBias": 1.1,
                    "elevationUnc": 1.1,
                    "taskId": "TASK-ID",
                    "rangeUnc": 1.1
                }
            },
            "EOObservation_Ingest": {
                "required": [
                    "classificationMarking",
                    "dataMode",
                    "obTime",
                    "source"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "maxLength": 36,
                        "minLength": 1,
                        "type": "string",
                        "description": "Unique identifier of the record, auto-generated by the system.",
                        "example": "EOOBSERVATION-ID"
                    },
                    "classificationMarking": {
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string",
                        "description": "Classification marking of the data in IC/CAPCO Portion-marked\nformat.",
                        "example": "U"
                    },
                    "obTime": {
                        "type": "string",
                        "description": "Ob detection time in ISO 8601 UTC with microsecond precision.",
                        "format": "date-time",
                        "example": "2018-01-01T16:00:00.123Z"
                    },
                    "corrQuality": {
                        "type": "number",
                        "description": "Object Correlation Quality value (non-standardized). Users\nshould consult data providers regarding the expected range of values.",
                        "format": "double",
                        "example": 1.1
                    },
                    "idOnOrbit": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "Unique identifier of the target on-orbit object, if correlated.",
                        "readOnly": true,
                        "example": "ONORBIT-ID"
                    },
                    "idSensor": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "Unique identifier of the reporting sensor.",
                        "example": "SENSOR-ID"
                    },
                    "idSkyImagery": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "Unique identifier of the Sky Imagery.",
                        "example": "SKYIMAGERY-ID"
                    },
                    "collectMethod": {
                        "maxLength": 24,
                        "minLength": 0,
                        "type": "string",
                        "description": "Method indicating telescope movement during collection (AUTOTRACK,\nMANUAL AUTOTRACK, MANUAL RATE TRACK, MANUAL SIDEREAL, SIDEREAL, RATE\nTRACK).",
                        "example": "AUTOTRACK"
                    },
                    "satNo": {
                        "type": "integer",
                        "description": "Satellite/Catalog number of the target on-orbit object.",
                        "format": "int32",
                        "example": 5
                    },
                    "taskId": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional identifier to indicate the specific tasking which\nproduced this observation.",
                        "example": "TASK-ID"
                    },
                    "transactionId": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional identifier to track a commercial or marketplace transaction\nexecuted to produce this data.",
                        "example": "TRANSACTION-ID"
                    },
                    "trackId": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional identifier of the track to which this observation\nbelongs.",
                        "example": "TRACK-ID"
                    },
                    "obPosition": {
                        "maxLength": 8,
                        "minLength": 0,
                        "type": "string",
                        "description": "The position of this observation within a track (FENCE, FIRST,\nIN, LAST, SINGLE).  This identifier is optional and, if null, no assumption\nshould be made regarding whether other observations may or may not exist\nto compose a track.",
                        "example": "FIRST"
                    },
                    "origObjectId": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional identifier provided by observation source to indicate\nthe target onorbit object of this observation. This may be an internal\nidentifier and not necessarily a valid satellite number.",
                        "example": "ORIGOBJECT-ID"
                    },
                    "origSensorId": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional identifier provided by observation source to indicate\nthe sensor identifier which produced this observation. This may be an\ninternal identifier and not necessarily a valid sensor ID.",
                        "example": "ORIGSENSOR-ID"
                    },
                    "uct": {
                        "type": "boolean",
                        "description": "Boolean indicating this observation is part of an uncorrelated\ntrack or was unable to be correlated to a known object. This flag should\nonly be set to true by data providers after an attempt to correlate\nto an on-orbit object was made and failed. If unable to correlate, the\n'origObjectId' field may be populated with an internal data provider\nspecific identifier.",
                        "example": false
                    },
                    "azimuth": {
                        "type": "number",
                        "description": "Line of sight azimuth angle in degrees and topocentric frame.",
                        "format": "double",
                        "example": 1.1
                    },
                    "azimuthUnc": {
                        "type": "number",
                        "description": "One sigma uncertainty in the line of sight azimuth angle,\nin degrees.",
                        "format": "double",
                        "example": 1.1
                    },
                    "azimuthBias": {
                        "type": "number",
                        "description": "Sensor line of sight azimuth angle bias in degrees.",
                        "format": "double",
                        "example": 1.1
                    },
                    "azimuthRate": {
                        "type": "number",
                        "description": "Rate of change of the line of sight azimuth in degrees per\nsecond.",
                        "format": "double",
                        "example": 1.1
                    },
                    "elevation": {
                        "type": "number",
                        "description": "Line of sight elevation in degrees and topocentric frame.",
                        "format": "double",
                        "example": 1.1
                    },
                    "elevationUnc": {
                        "type": "number",
                        "description": "One sigma uncertainty in the line of sight elevation angle,\nin degrees.",
                        "format": "double",
                        "example": 1.1
                    },
                    "elevationBias": {
                        "type": "number",
                        "description": "Sensor line of sight elevation bias in degrees.",
                        "format": "double",
                        "example": 1.1
                    },
                    "elevationRate": {
                        "type": "number",
                        "description": "Rate of change of the line of sight elevation in degrees per\nsecond.",
                        "format": "double",
                        "example": 1.1
                    },
                    "range": {
                        "type": "number",
                        "description": "Line of sight range in km.",
                        "format": "double",
                        "example": 1.1
                    },
                    "rangeUnc": {
                        "type": "number",
                        "description": "One sigma uncertainty in the line of sight range, in km.",
                        "format": "double",
                        "example": 1.1
                    },
                    "rangeBias": {
                        "type": "number",
                        "description": "Sensor line of sight range bias in km.",
                        "format": "double",
                        "example": 1.1
                    },
                    "rangeRate": {
                        "type": "number",
                        "description": "Rate of change of the line of sight range in km/sec.",
                        "format": "double",
                        "example": 1.1
                    },
                    "rangeRateUnc": {
                        "type": "number",
                        "description": "One sigma uncertainty in the line of sight range rate, in\nkm/sec.",
                        "format": "double",
                        "example": 1.1
                    },
                    "ra": {
                        "type": "number",
                        "description": "Line of sight right ascension, in degrees, in the specified\nreferenceFrame.  If referenceFrame is null then J2K should be assumed.",
                        "format": "double",
                        "example": 1.1
                    },
                    "raRate": {
                        "type": "number",
                        "description": "Line of sight right ascension rate of change, in degrees/sec,\nin the specified referenceFrame.  If referenceFrame is null then J2K\nshould be assumed.",
                        "format": "double",
                        "example": 1.1
                    },
                    "raUnc": {
                        "type": "number",
                        "description": "One sigma uncertainty in the line of sight right ascension\nangle, in degrees.",
                        "format": "double",
                        "example": 1.1
                    },
                    "raBias": {
                        "type": "number",
                        "description": "Sensor line of sight right ascension bias in degrees.",
                        "format": "double",
                        "example": 1.1
                    },
                    "declination": {
                        "type": "number",
                        "description": "Line of sight declination, in degrees, in the specified referenceFrame.\nIf referenceFrame is null then J2K should be assumed.",
                        "format": "double",
                        "example": 1.1
                    },
                    "declinationRate": {
                        "type": "number",
                        "description": "Line of sight declination rate of change, in degrees/sec,\nin the specified referenceFrame.  If referenceFrame is null then J2K\nshould be assumed.",
                        "format": "double",
                        "example": 1.1
                    },
                    "declinationUnc": {
                        "type": "number",
                        "description": "One sigma uncertainty in the line of sight declination angle,\nin degrees.",
                        "format": "double",
                        "example": 1.1
                    },
                    "declinationBias": {
                        "type": "number",
                        "description": "Sensor line of sight declination angle bias in degrees.",
                        "format": "double",
                        "example": 1.1
                    },
                    "losx": {
                        "type": "number",
                        "description": "Line-of-sight cartesian X position of the target, in km, in\nthe specified referenceFrame.  If referenceFrame is null then J2K should\nbe assumed.",
                        "format": "double",
                        "example": 1.1
                    },
                    "losy": {
                        "type": "number",
                        "description": "Line-of-sight cartesian Y position of the target, in km, in\nthe specified referenceFrame.  If referenceFrame is null then J2K should\nbe assumed.",
                        "format": "double",
                        "example": 1.1
                    },
                    "losz": {
                        "type": "number",
                        "description": "Line-of-sight cartesian Z position of the target, in km, in\nthe specified referenceFrame.  If referenceFrame is null then J2K should\nbe assumed.",
                        "format": "double",
                        "example": 1.1
                    },
                    "losUnc": {
                        "type": "number",
                        "description": "One sigma uncertainty in the line of sight pointing in micro-radians.",
                        "format": "double",
                        "example": 1.1
                    },
                    "losxvel": {
                        "type": "number",
                        "description": "Line-of-sight cartesian X velocity of target, in km/sec, in\nthe specified referenceFrame.  If referenceFrame is null then J2K should\nbe assumed.",
                        "format": "double",
                        "example": 1.1
                    },
                    "losyvel": {
                        "type": "number",
                        "description": "Line-of-sight cartesian Y velocity of target, in km/sec, in\nthe specified referenceFrame.  If referenceFrame is null then J2K should\nbe assumed.",
                        "format": "double",
                        "example": 1.1
                    },
                    "loszvel": {
                        "type": "number",
                        "description": "Line-of-sight cartesian Z velocity of target, in km/sec, in\nthe specified referenceFrame.  If referenceFrame is null then J2K should\nbe assumed.",
                        "format": "double",
                        "example": 1.1
                    },
                    "senlat": {
                        "type": "number",
                        "description": "Sensor WGS84 latitude at obTime (if mobile/onorbit) in degrees.\nIf null, can be obtained from sensor info. -90 to 90 degrees (negative\nvalues south of equator).",
                        "format": "double",
                        "example": 45.1
                    },
                    "senlon": {
                        "type": "number",
                        "description": "Sensor WGS84 longitude at obTime (if mobile/onorbit) in degrees.\nIf null, can be obtained from sensor info. -180 to 180 degrees (negative\nvalues west of Prime Meridian).",
                        "format": "double",
                        "example": 179.1
                    },
                    "senalt": {
                        "type": "number",
                        "description": "Sensor altitude at obTime (if mobile/onorbit) in km.",
                        "format": "double",
                        "example": 1.1
                    },
                    "senx": {
                        "type": "number",
                        "description": "Cartesian X position of the observing mobile/onorbit sensor\nat obTime, in km, in the specified senReferenceFrame.  If senReferenceFrame\nis null then J2K should be assumed.",
                        "format": "double",
                        "example": 1.1
                    },
                    "seny": {
                        "type": "number",
                        "description": "Cartesian Y position of the observing mobile/onorbit sensor\nat obTime, in km, in the specified senReferenceFrame.  If senReferenceFrame\nis null then J2K should be assumed.",
                        "format": "double",
                        "example": 1.1
                    },
                    "senz": {
                        "type": "number",
                        "description": "Cartesian Z position of the observing mobile/onorbit sensor\nat obTime, in km, in the specified senReferenceFrame.  If senReferenceFrame\nis null then J2K should be assumed.",
                        "format": "double",
                        "example": 1.1
                    },
                    "senvelx": {
                        "type": "number",
                        "description": "Cartesian X velocity of the observing mobile/onorbit sensor\nat obTime, in km/sec, in the specified senReferenceFrame.  If senReferenceFrame\nis null then J2K should be assumed.",
                        "format": "double",
                        "example": 1.1
                    },
                    "senvely": {
                        "type": "number",
                        "description": "Cartesian Y velocity of the observing mobile/onorbit sensor\nat obTime, in km/sec, in the specified senReferenceFrame.  If senReferenceFrame\nis null then J2K should be assumed.",
                        "format": "double",
                        "example": 1.1
                    },
                    "senvelz": {
                        "type": "number",
                        "description": "Cartesian Z velocity of the observing mobile/onorbit sensor\nat obTime, in km/sec, in the specified senReferenceFrame.  If senReferenceFrame\nis null then J2K should be assumed.",
                        "format": "double",
                        "example": 1.1
                    },
                    "fovCount": {
                        "type": "integer",
                        "description": "The number of RSOs detected in the sensor field of view.",
                        "format": "int32",
                        "example": 1
                    },
                    "expDuration": {
                        "type": "number",
                        "description": "Image exposure duration in seconds.",
                        "format": "double",
                        "example": 1.1
                    },
                    "zeroptd": {
                        "type": "number",
                        "description": "Formula: 2.5 * log_10 (zero_mag_counts / expDuration).",
                        "format": "double",
                        "example": 1.1
                    },
                    "netObjSig": {
                        "type": "number",
                        "description": "Net object signature = counts / expDuration.",
                        "format": "double",
                        "example": 1.1
                    },
                    "netObjSigUnc": {
                        "type": "number",
                        "description": "Net object signature uncertainty = counts uncertainty / expDuration.",
                        "format": "double",
                        "example": 1.1
                    },
                    "mag": {
                        "type": "number",
                        "description": "Calibrated magnitude in units of magnitudes.",
                        "format": "double",
                        "example": 1.1
                    },
                    "magUnc": {
                        "type": "number",
                        "description": "Uncertainty of calibrated magnitude in units of magnitudes.",
                        "format": "double",
                        "example": 1.1
                    },
                    "magNormRange": {
                        "type": "number",
                        "description": "Formula: mag - 5.0 * log_10(geo_range / 1000000.0).",
                        "format": "double",
                        "example": 1.1
                    },
                    "geolat": {
                        "type": "number",
                        "description": "For GEO detections, the latitude in degrees north.",
                        "format": "double",
                        "example": 1.1
                    },
                    "geolon": {
                        "type": "number",
                        "description": "For GEO detections, the longitude in degrees east.",
                        "format": "double",
                        "example": 1.1
                    },
                    "geoalt": {
                        "type": "number",
                        "description": "For GEO detections, the altitude in km.",
                        "format": "double",
                        "example": 1.1
                    },
                    "georange": {
                        "type": "number",
                        "description": "For GEO detections, the range in km.",
                        "format": "double",
                        "example": 1.1
                    },
                    "skyBkgrnd": {
                        "type": "number",
                        "description": "Average Sky Background signal, in Magnitudes. Sky Background\nrefers to the incoming light from an apparently empty part of the night\nsky.",
                        "format": "double",
                        "example": 1.1
                    },
                    "primaryExtinction": {
                        "type": "number",
                        "description": "Primary Extinction Coefficient, in Magnitudes. Primary Extinction\nis the coefficient applied to the airmass to determine how much the\nobserved visual magnitude has been attenuated by the atmosphere. Extinction,\nin general, describes the absorption and scattering of electromagnetic\nradiation by dust and gas between an emitting astronomical object and\nthe observer.  See the EOObservationDetails API for specification of\nextinction coefficients for multiple spectral filters.",
                        "format": "double",
                        "example": 1.1
                    },
                    "primaryExtinctionUnc": {
                        "type": "number",
                        "description": "Primary Extinction Coefficient Uncertainty, in Magnitudes.",
                        "format": "double",
                        "example": 1.1
                    },
                    "solarPhaseAngle": {
                        "type": "number",
                        "description": "The angle, in degrees, between the target-to-observer vector\nand the target-to-sun vector.",
                        "format": "double",
                        "example": 1.1
                    },
                    "solarEqPhaseAngle": {
                        "type": "number",
                        "description": "The angle, in degrees, between the projections of the target-to-observer\nvector and the target-to-sun vector onto the equatorial plane. The angle\nis represented as negative when closing and positive when opening.",
                        "format": "double",
                        "example": 1.1
                    },
                    "solarDecAngle": {
                        "type": "number",
                        "description": "Angle from the sun to the equatorial plane.",
                        "format": "double",
                        "example": 1.1
                    },
                    "shutterDelay": {
                        "type": "number",
                        "description": "Shutter delay in seconds.",
                        "format": "double",
                        "example": 1.1
                    },
                    "timingBias": {
                        "type": "number",
                        "description": "Sensor timing bias in seconds.",
                        "format": "double",
                        "example": 1.1
                    },
                    "rawFileURI": {
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional URI location in the document repository of the raw\nfile parsed by the system to produce this record. To download the raw\nfile, prepend https://udl-hostname/scs/download?id= to this value.",
                        "example": "Example URI"
                    },
                    "intensity": {
                        "type": "number",
                        "description": "Intensity of the target for IR observations, in kw/sr/um.",
                        "format": "double",
                        "example": 1.1
                    },
                    "bgIntensity": {
                        "type": "number",
                        "description": "Background intensity for IR observations, in kw/sr/um.",
                        "format": "double",
                        "example": 1.1
                    },
                    "descriptor": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional source-provided and searchable metadata or descriptor\nof the data.",
                        "example": "PROVIDED_DATA1"
                    },
                    "source": {
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string",
                        "description": "Source of the data.",
                        "example": "Bluestaq"
                    },
                    "origin": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "Originating system or organization which produced the data,\nif different from the source. The origin may be different than the source\nif the source was a mediating system which forwarded the data on behalf\nof the origin system. If null, the source may be assumed to be the origin.",
                        "example": "THIRD_PARTY_DATASOURCE"
                    },
                    "dataMode": {
                        "type": "string",
                        "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
                        "example": "TEST",
                        "enum": [
                            "REAL",
                            "TEST",
                            "SIMULATED",
                            "EXERCISE"
                        ]
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Time the row was created in the database, auto-populated by\nthe system.",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2018-01-01T16:00:00.123Z"
                    },
                    "createdBy": {
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string",
                        "description": "Application user who created the row in the database, auto-populated\nby the system.",
                        "readOnly": true,
                        "example": "some.user"
                    },
                    "zeroPtdUnc": {
                        "type": "number",
                        "description": "This is the uncertainty in the zero point for the filter used\nfor this observation/row in units of mag. For use with differential photometry.",
                        "format": "double",
                        "example": 1.1
                    },
                    "referenceFrame": {
                        "type": "string",
                        "description": "The reference frame of the EOObservation measurements. If the\nreferenceFrame is null it is assumed to be J2000.",
                        "example": "J2000",
                        "enum": [
                            "J2000",
                            "GCRF",
                            "ITRF",
                            "TEME"
                        ]
                    },
                    "senReferenceFrame": {
                        "type": "string",
                        "description": "The reference frame of the observing sensor state. If the senReferenceFrame\nis null it is assumed to be J2000.",
                        "example": "J2000",
                        "enum": [
                            "J2000",
                            "EFG/TDR",
                            "ECR/ECEF",
                            "TEME",
                            "ITRF",
                            "GCRF"
                        ]
                    },
                    "umbra": {
                        "type": "boolean",
                        "description": "Boolean indicating that the target object was in umbral eclipse\nat the time of this observation.",
                        "example": false
                    },
                    "penumbra": {
                        "type": "boolean",
                        "description": "Boolean indicating that the target object was in a penumbral\neclipse at the time of this observation.",
                        "example": false
                    },
                    "origNetwork": {
                        "maxLength": 32,
                        "minLength": 0,
                        "type": "string",
                        "description": "The originating source network on which this record was created,\nauto-populated by the system.",
                        "readOnly": true,
                        "example": "ORIG"
                    },
                    "sourceDL": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "The source data library from which this record was received.\nThis could be a remote or tactical UDL or another data library. If null,\nthe record should be assumed to have originated from the primary Enterprise\nUDL.",
                        "readOnly": true,
                        "example": "AXE"
                    },
                    "type": {
                        "type": "string",
                        "description": "Read only enumeration specifying the type of observation (e.g.\nOPTICAL, RADAR, RF, etc).",
                        "readOnly": true,
                        "example": "OPTICAL"
                    }
                },
                "description": "Model representation of observation data for electro-optical based\nsensor phenomenologies. ECI J2K is the preferred reference frame for EOObservations,\nhowever, several user-specified reference frames are accommodated. Users\nshould check the EOObservation record as well as the 'Discover' tab in the\nstorefront to confirm the coordinate frames used by the data provider."
            },
            "SkyImagery_Abridged": {
                "required": [
                    "classificationMarking",
                    "dataMode",
                    "expStartTime",
                    "imageType",
                    "source"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "maxLength": 36,
                        "minLength": 1,
                        "type": "string",
                        "description": "Unique identifier of the record, auto-generated by the system.",
                        "example": "SKYIMAGERY-ID"
                    },
                    "classificationMarking": {
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string",
                        "description": "Classification marking of the data in IC/CAPCO Portion-marked\nformat.",
                        "example": "U"
                    },
                    "idOnOrbit": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional identifier of the target on-orbit object, if correlated.",
                        "readOnly": true,
                        "example": "44920"
                    },
                    "origObjectId": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional identifier provided by the imaging source to indicate\nthe target onorbit object of this image. This may be an internal identifier\nand not necessarily a valid satellite number.",
                        "example": "X15-23452"
                    },
                    "idSensor": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "Unique identifier of the reporting sensor.",
                        "example": "420"
                    },
                    "satNo": {
                        "type": "integer",
                        "description": "Catalog number of the target on-orbit object.",
                        "format": "int32",
                        "example": 25544
                    },
                    "origSensorId": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional identifier provided by the imaging source to indicate\nthe sensor identifier which produced this image. This may be an internal\nidentifier and not necessarily a valid sensor ID.",
                        "example": "origSensorId"
                    },
                    "senlat": {
                        "maximum": 90,
                        "minimum": -90,
                        "type": "number",
                        "description": "Sensor latitude at exposure start epoch, in degrees. If null,\ncan be obtained from sensor info. -90 to 90 degrees (negative values\nsouth of equator).",
                        "format": "double",
                        "example": -33.283048
                    },
                    "senlon": {
                        "maximum": 180,
                        "minimum": -180,
                        "type": "number",
                        "description": "Sensor longitude at exposure start epoch, in degrees. If null,\ncan be obtained from sensor info. -180 to 180 degrees (negative values\nwest of Prime Meridian).",
                        "format": "double",
                        "example": 149.372549
                    },
                    "senalt": {
                        "type": "number",
                        "description": "Sensor altitude at exposure start epoch, in km. If null, can\nbe obtained from sensor info.",
                        "format": "double",
                        "example": 14.483619321
                    },
                    "senx": {
                        "type": "number",
                        "description": "Sensor x position at exposure start epoch, in km (if mobile/onorbit)\nin J2000 coordinate frame.",
                        "format": "double",
                        "example": 14.52
                    },
                    "seny": {
                        "type": "number",
                        "description": "Sensor y position at exposure start epoch, in km (if mobile/onorbit)\nin J2000 coordinate frame.",
                        "format": "double",
                        "example": 32.41
                    },
                    "senz": {
                        "type": "number",
                        "description": "Sensor z position at exposure start epoch, in km (if mobile/onorbit)\nin J2000 coordinate frame.",
                        "format": "double",
                        "example": 376.12
                    },
                    "imageType": {
                        "maxLength": 24,
                        "minLength": 1,
                        "type": "string",
                        "description": "The type of image associated with this record (e.g. FITS,\nEOSSA, EOCHIP).",
                        "example": "imageType"
                    },
                    "expStartTime": {
                        "type": "string",
                        "description": "Start time of the exposure, in ISO 8601 UTC format.",
                        "format": "date-time",
                        "example": "2021-01-01T01:01:01.123Z"
                    },
                    "expEndTime": {
                        "type": "string",
                        "description": "End time of the exposure, in ISO 8601 UTC format.",
                        "format": "date-time",
                        "example": "2021-01-01T01:01:01.123Z"
                    },
                    "imageSourceInfo": {
                        "maxLength": 100,
                        "minLength": 0,
                        "type": "string",
                        "description": "String that uniquely identifies the data source.",
                        "example": "imageSourceInfo"
                    },
                    "topLeftStartAz": {
                        "type": "number",
                        "description": "The telescope pointing azimuth, in degrees, at the exposure\nstart epoch.",
                        "format": "double",
                        "example": 146.321
                    },
                    "topLeftStartEl": {
                        "type": "number",
                        "description": "The telescope pointing elevation, in degrees, at the exposure\nstart epoch.",
                        "format": "double",
                        "example": 146.321
                    },
                    "topLeftStopAz": {
                        "type": "number",
                        "description": "The telescope pointing azimuth, in degrees, at the exposure\nstop epoch.",
                        "format": "double",
                        "example": 3.7
                    },
                    "topLeftStopEl": {
                        "type": "number",
                        "description": "The telescope pointing elevation, in degrees, at the exposure\nstop epoch.",
                        "format": "double",
                        "example": 34.233
                    },
                    "imageSetId": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "The user-defined set ID of a sequene of images.",
                        "example": "imageSetId"
                    },
                    "imageSetLength": {
                        "type": "integer",
                        "description": "The number of images in an image set.",
                        "format": "int32",
                        "example": 9
                    },
                    "sequenceId": {
                        "type": "integer",
                        "description": "The sequence ID of an image within an image set.",
                        "format": "int32",
                        "example": 1
                    },
                    "frameFOVWidth": {
                        "type": "number",
                        "description": "Field Of View frame width, in degrees.",
                        "format": "double",
                        "example": 21.23
                    },
                    "frameFOVHeight": {
                        "type": "number",
                        "description": "Field Of View frame height, in degrees.",
                        "format": "double",
                        "example": 21.23
                    },
                    "pixelFOVWidth": {
                        "type": "number",
                        "description": "Field Of View pixel width, in degrees.",
                        "format": "double",
                        "example": 321.123
                    },
                    "pixelFOVHeight": {
                        "type": "number",
                        "description": "Field Of View pixel height, in degrees.",
                        "format": "double",
                        "example": 321.123
                    },
                    "frameWidthPixels": {
                        "type": "integer",
                        "description": "Frame width of the image, in number of pixels.",
                        "format": "int32",
                        "example": 1
                    },
                    "frameHeightPixels": {
                        "type": "integer",
                        "description": "Frame height of the image, in number of pixels.",
                        "format": "int32",
                        "example": 1
                    },
                    "pixelBitDepth": {
                        "type": "integer",
                        "description": "Bit depth of the image, in number of pixels.",
                        "format": "int32",
                        "example": 1
                    },
                    "annotationKey": {
                        "maxLength": 128,
                        "minLength": 0,
                        "type": "string",
                        "description": "Reference to an annotation document associated with this image.",
                        "example": "annotationKey"
                    },
                    "calibrationKey": {
                        "maxLength": 128,
                        "minLength": 0,
                        "type": "string",
                        "description": "Reference to a calibration document associated with this image.",
                        "example": "calibrationKey"
                    },
                    "filename": {
                        "maxLength": 128,
                        "minLength": 0,
                        "type": "string",
                        "description": "Name of the uploaded image file.",
                        "example": "filename.jpg"
                    },
                    "filesize": {
                        "type": "integer",
                        "description": "Size of the image file, in bytes.",
                        "format": "int64",
                        "example": 371945
                    },
                    "checksumValue": {
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string",
                        "description": "MD5 value of the file. The ingest/create operation will automatically\ngenerate the value.",
                        "readOnly": true,
                        "example": "checksumValue"
                    },
                    "transactionId": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional identifier to track a commercial or marketplace transaction\nexecuted to produce this data.",
                        "example": "a7bdef1f-5a4f-4716-bee4-7a1e0ec7d35a"
                    },
                    "source": {
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string",
                        "description": "Source of the data.",
                        "example": "Bluestaq"
                    },
                    "origin": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "Originating system or organization which produced the data,\nif different from the source. The origin may be different than the source\nif the source was a mediating system which forwarded the data on behalf\nof the origin system. If null, the source may be assumed to be the origin.",
                        "example": "THIRD_PARTY_DATASOURCE"
                    },
                    "origNetwork": {
                        "maxLength": 32,
                        "minLength": 0,
                        "type": "string",
                        "description": "The originating source network on which this record was created,\nauto-populated by the system.",
                        "readOnly": true,
                        "example": "ORIG"
                    },
                    "sourceDL": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "The source data library from which this record was received.\nThis could be a remote or tactical UDL or another data library. If null,\nthe record should be assumed to have originated from the primary Enterprise\nUDL.",
                        "readOnly": true,
                        "example": "AXE"
                    },
                    "description": {
                        "maxLength": 2147483647,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional name/description associated with this image.",
                        "example": "description"
                    },
                    "dataMode": {
                        "type": "string",
                        "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
                        "example": "TEST",
                        "enum": [
                            "REAL",
                            "TEST",
                            "SIMULATED",
                            "EXERCISE"
                        ]
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Time the row was created in the database, auto-populated by\nthe system.",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2018-01-01T16:00:00.123Z"
                    },
                    "createdBy": {
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string",
                        "description": "Application user who created the row in the database, auto-populated\nby the system.",
                        "readOnly": true,
                        "example": "some.user"
                    }
                },
                "description": "Model representation of sky imagery data.  Sky imagery is ground\nor space based telescope imagery of RSO's and includes metadata on the image\n(time, source, etc) as well as binary image content (e.g. FITS, EOSSA, EOCHIP)\n. Binary content must be downloaded individually by ID using the 'getFile'\noperation.",
                "example": {
                    "expStartTime": "2021-01-01T01:01:01.123Z",
                    "frameWidthPixels": 1,
                    "senlat": -33.283048,
                    "pixelFOVHeight": 321.123,
                    "satNo": 25544,
                    "idOnOrbit": "44920",
                    "origin": "THIRD_PARTY_DATASOURCE",
                    "topLeftStartAz": 146.321,
                    "pixelFOVWidth": 321.123,
                    "description": "description",
                    "annotationKey": "annotationKey",
                    "pixelBitDepth": 1,
                    "filesize": 371945,
                    "source": "Bluestaq",
                    "origSensorId": "origSensorId",
                    "senalt": 14.483619321,
                    "sequenceId": 1,
                    "origNetwork": "ORIG",
                    "frameFOVWidth": 21.23,
                    "frameHeightPixels": 1,
                    "createdAt": "2018-01-01T16:00:00.123Z",
                    "imageSetId": "imageSetId",
                    "expEndTime": "2021-01-01T01:01:01.123Z",
                    "imageSetLength": 9,
                    "idSensor": "420",
                    "id": "SKYIMAGERY-ID",
                    "topLeftStartEl": 146.321,
                    "classificationMarking": "U",
                    "imageType": "imageType",
                    "origObjectId": "X15-23452",
                    "topLeftStopEl": 34.233,
                    "seny": 32.41,
                    "senx": 14.52,
                    "senz": 376.12,
                    "frameFOVHeight": 21.23,
                    "transactionId": "a7bdef1f-5a4f-4716-bee4-7a1e0ec7d35a",
                    "senlon": 149.372549,
                    "imageSourceInfo": "imageSourceInfo",
                    "checksumValue": "checksumValue",
                    "dataMode": "TEST",
                    "topLeftStopAz": 3.7,
                    "filename": "filename.jpg",
                    "calibrationKey": "calibrationKey",
                    "sourceDL": "AXE",
                    "createdBy": "some.user"
                }
            },
            "SkyImagery_Ingest": {
                "required": [
                    "classificationMarking",
                    "dataMode",
                    "expStartTime",
                    "imageType",
                    "source"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "maxLength": 36,
                        "minLength": 1,
                        "type": "string",
                        "description": "Unique identifier of the record, auto-generated by the system.",
                        "example": "SKYIMAGERY-ID"
                    },
                    "classificationMarking": {
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string",
                        "description": "Classification marking of the data in IC/CAPCO Portion-marked\nformat.",
                        "example": "U"
                    },
                    "idOnOrbit": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional identifier of the target on-orbit object, if correlated.",
                        "readOnly": true,
                        "example": "44920"
                    },
                    "origObjectId": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional identifier provided by the imaging source to indicate\nthe target onorbit object of this image. This may be an internal identifier\nand not necessarily a valid satellite number.",
                        "example": "X15-23452"
                    },
                    "idSensor": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "Unique identifier of the reporting sensor.",
                        "example": "420"
                    },
                    "satNo": {
                        "type": "integer",
                        "description": "Catalog number of the target on-orbit object.",
                        "format": "int32",
                        "example": 25544
                    },
                    "origSensorId": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional identifier provided by the imaging source to indicate\nthe sensor identifier which produced this image. This may be an internal\nidentifier and not necessarily a valid sensor ID.",
                        "example": "origSensorId"
                    },
                    "senlat": {
                        "maximum": 90,
                        "minimum": -90,
                        "type": "number",
                        "description": "Sensor latitude at exposure start epoch, in degrees. If null,\ncan be obtained from sensor info. -90 to 90 degrees (negative values\nsouth of equator).",
                        "format": "double",
                        "example": -33.283048
                    },
                    "senlon": {
                        "maximum": 180,
                        "minimum": -180,
                        "type": "number",
                        "description": "Sensor longitude at exposure start epoch, in degrees. If null,\ncan be obtained from sensor info. -180 to 180 degrees (negative values\nwest of Prime Meridian).",
                        "format": "double",
                        "example": 149.372549
                    },
                    "senalt": {
                        "type": "number",
                        "description": "Sensor altitude at exposure start epoch, in km. If null, can\nbe obtained from sensor info.",
                        "format": "double",
                        "example": 14.483619321
                    },
                    "senx": {
                        "type": "number",
                        "description": "Sensor x position at exposure start epoch, in km (if mobile/onorbit)\nin J2000 coordinate frame.",
                        "format": "double",
                        "example": 14.52
                    },
                    "seny": {
                        "type": "number",
                        "description": "Sensor y position at exposure start epoch, in km (if mobile/onorbit)\nin J2000 coordinate frame.",
                        "format": "double",
                        "example": 32.41
                    },
                    "senz": {
                        "type": "number",
                        "description": "Sensor z position at exposure start epoch, in km (if mobile/onorbit)\nin J2000 coordinate frame.",
                        "format": "double",
                        "example": 376.12
                    },
                    "imageType": {
                        "maxLength": 24,
                        "minLength": 1,
                        "type": "string",
                        "description": "The type of image associated with this record (e.g. FITS,\nEOSSA, EOCHIP).",
                        "example": "imageType"
                    },
                    "expStartTime": {
                        "type": "string",
                        "description": "Start time of the exposure, in ISO 8601 UTC format.",
                        "format": "date-time",
                        "example": "2021-01-01T01:01:01.123Z"
                    },
                    "expEndTime": {
                        "type": "string",
                        "description": "End time of the exposure, in ISO 8601 UTC format.",
                        "format": "date-time",
                        "example": "2021-01-01T01:01:01.123Z"
                    },
                    "imageSourceInfo": {
                        "maxLength": 100,
                        "minLength": 0,
                        "type": "string",
                        "description": "String that uniquely identifies the data source.",
                        "example": "imageSourceInfo"
                    },
                    "topLeftStartAz": {
                        "type": "number",
                        "description": "The telescope pointing azimuth, in degrees, at the exposure\nstart epoch.",
                        "format": "double",
                        "example": 146.321
                    },
                    "topLeftStartEl": {
                        "type": "number",
                        "description": "The telescope pointing elevation, in degrees, at the exposure\nstart epoch.",
                        "format": "double",
                        "example": 146.321
                    },
                    "topLeftStopAz": {
                        "type": "number",
                        "description": "The telescope pointing azimuth, in degrees, at the exposure\nstop epoch.",
                        "format": "double",
                        "example": 3.7
                    },
                    "topLeftStopEl": {
                        "type": "number",
                        "description": "The telescope pointing elevation, in degrees, at the exposure\nstop epoch.",
                        "format": "double",
                        "example": 34.233
                    },
                    "imageSetId": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "The user-defined set ID of a sequene of images.",
                        "example": "imageSetId"
                    },
                    "imageSetLength": {
                        "type": "integer",
                        "description": "The number of images in an image set.",
                        "format": "int32",
                        "example": 9
                    },
                    "sequenceId": {
                        "type": "integer",
                        "description": "The sequence ID of an image within an image set.",
                        "format": "int32",
                        "example": 1
                    },
                    "frameFOVWidth": {
                        "type": "number",
                        "description": "Field Of View frame width, in degrees.",
                        "format": "double",
                        "example": 21.23
                    },
                    "frameFOVHeight": {
                        "type": "number",
                        "description": "Field Of View frame height, in degrees.",
                        "format": "double",
                        "example": 21.23
                    },
                    "pixelFOVWidth": {
                        "type": "number",
                        "description": "Field Of View pixel width, in degrees.",
                        "format": "double",
                        "example": 321.123
                    },
                    "pixelFOVHeight": {
                        "type": "number",
                        "description": "Field Of View pixel height, in degrees.",
                        "format": "double",
                        "example": 321.123
                    },
                    "frameWidthPixels": {
                        "type": "integer",
                        "description": "Frame width of the image, in number of pixels.",
                        "format": "int32",
                        "example": 1
                    },
                    "frameHeightPixels": {
                        "type": "integer",
                        "description": "Frame height of the image, in number of pixels.",
                        "format": "int32",
                        "example": 1
                    },
                    "pixelBitDepth": {
                        "type": "integer",
                        "description": "Bit depth of the image, in number of pixels.",
                        "format": "int32",
                        "example": 1
                    },
                    "annotationKey": {
                        "maxLength": 128,
                        "minLength": 0,
                        "type": "string",
                        "description": "Reference to an annotation document associated with this image.",
                        "example": "annotationKey"
                    },
                    "calibrationKey": {
                        "maxLength": 128,
                        "minLength": 0,
                        "type": "string",
                        "description": "Reference to a calibration document associated with this image.",
                        "example": "calibrationKey"
                    },
                    "filename": {
                        "maxLength": 128,
                        "minLength": 0,
                        "type": "string",
                        "description": "Name of the uploaded image file.",
                        "example": "filename.jpg"
                    },
                    "filesize": {
                        "type": "integer",
                        "description": "Size of the image file, in bytes.",
                        "format": "int64",
                        "example": 371945
                    },
                    "checksumValue": {
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string",
                        "description": "MD5 value of the file. The ingest/create operation will automatically\ngenerate the value.",
                        "readOnly": true,
                        "example": "checksumValue"
                    },
                    "transactionId": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional identifier to track a commercial or marketplace transaction\nexecuted to produce this data.",
                        "example": "a7bdef1f-5a4f-4716-bee4-7a1e0ec7d35a"
                    },
                    "source": {
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string",
                        "description": "Source of the data.",
                        "example": "Bluestaq"
                    },
                    "origin": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "Originating system or organization which produced the data,\nif different from the source. The origin may be different than the source\nif the source was a mediating system which forwarded the data on behalf\nof the origin system. If null, the source may be assumed to be the origin.",
                        "example": "THIRD_PARTY_DATASOURCE"
                    },
                    "origNetwork": {
                        "maxLength": 32,
                        "minLength": 0,
                        "type": "string",
                        "description": "The originating source network on which this record was created,\nauto-populated by the system.",
                        "readOnly": true,
                        "example": "ORIG"
                    },
                    "sourceDL": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "The source data library from which this record was received.\nThis could be a remote or tactical UDL or another data library. If null,\nthe record should be assumed to have originated from the primary Enterprise\nUDL.",
                        "readOnly": true,
                        "example": "AXE"
                    },
                    "description": {
                        "maxLength": 2147483647,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional name/description associated with this image.",
                        "example": "description"
                    },
                    "dataMode": {
                        "type": "string",
                        "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
                        "example": "TEST",
                        "enum": [
                            "REAL",
                            "TEST",
                            "SIMULATED",
                            "EXERCISE"
                        ]
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Time the row was created in the database, auto-populated by\nthe system.",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2018-01-01T16:00:00.123Z"
                    },
                    "createdBy": {
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string",
                        "description": "Application user who created the row in the database, auto-populated\nby the system.",
                        "readOnly": true,
                        "example": "some.user"
                    }
                },
                "description": "Model representation of sky imagery data.  Sky imagery is ground\nor space based telescope imagery of RSO's and includes metadata on the image\n(time, source, etc) as well as binary image content (e.g. FITS, EOSSA, EOCHIP)\n. Binary content must be downloaded individually by ID using the 'getFile'\noperation."
            },
            "SkyImagery_Full": {
                "required": [
                    "classificationMarking",
                    "dataMode",
                    "expStartTime",
                    "imageType",
                    "source"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "maxLength": 36,
                        "minLength": 1,
                        "type": "string",
                        "description": "Unique identifier of the record, auto-generated by the system.",
                        "example": "SKYIMAGERY-ID"
                    },
                    "classificationMarking": {
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string",
                        "description": "Classification marking of the data in IC/CAPCO Portion-marked\nformat.",
                        "example": "U"
                    },
                    "idOnOrbit": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional identifier of the target on-orbit object, if correlated.",
                        "readOnly": true,
                        "example": "44920"
                    },
                    "origObjectId": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional identifier provided by the imaging source to indicate\nthe target onorbit object of this image. This may be an internal identifier\nand not necessarily a valid satellite number.",
                        "example": "X15-23452"
                    },
                    "idSensor": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "Unique identifier of the reporting sensor.",
                        "example": "420"
                    },
                    "satNo": {
                        "type": "integer",
                        "description": "Catalog number of the target on-orbit object.",
                        "format": "int32",
                        "example": 25544
                    },
                    "origSensorId": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional identifier provided by the imaging source to indicate\nthe sensor identifier which produced this image. This may be an internal\nidentifier and not necessarily a valid sensor ID.",
                        "example": "origSensorId"
                    },
                    "senlat": {
                        "maximum": 90,
                        "minimum": -90,
                        "type": "number",
                        "description": "Sensor latitude at exposure start epoch, in degrees. If null,\ncan be obtained from sensor info. -90 to 90 degrees (negative values\nsouth of equator).",
                        "format": "double",
                        "example": -33.283048
                    },
                    "senlon": {
                        "maximum": 180,
                        "minimum": -180,
                        "type": "number",
                        "description": "Sensor longitude at exposure start epoch, in degrees. If null,\ncan be obtained from sensor info. -180 to 180 degrees (negative values\nwest of Prime Meridian).",
                        "format": "double",
                        "example": 149.372549
                    },
                    "senalt": {
                        "type": "number",
                        "description": "Sensor altitude at exposure start epoch, in km. If null, can\nbe obtained from sensor info.",
                        "format": "double",
                        "example": 14.483619321
                    },
                    "senx": {
                        "type": "number",
                        "description": "Sensor x position at exposure start epoch, in km (if mobile/onorbit)\nin J2000 coordinate frame.",
                        "format": "double",
                        "example": 14.52
                    },
                    "seny": {
                        "type": "number",
                        "description": "Sensor y position at exposure start epoch, in km (if mobile/onorbit)\nin J2000 coordinate frame.",
                        "format": "double",
                        "example": 32.41
                    },
                    "senz": {
                        "type": "number",
                        "description": "Sensor z position at exposure start epoch, in km (if mobile/onorbit)\nin J2000 coordinate frame.",
                        "format": "double",
                        "example": 376.12
                    },
                    "imageType": {
                        "maxLength": 24,
                        "minLength": 1,
                        "type": "string",
                        "description": "The type of image associated with this record (e.g. FITS,\nEOSSA, EOCHIP).",
                        "example": "imageType"
                    },
                    "expStartTime": {
                        "type": "string",
                        "description": "Start time of the exposure, in ISO 8601 UTC format.",
                        "format": "date-time",
                        "example": "2021-01-01T01:01:01.123Z"
                    },
                    "expEndTime": {
                        "type": "string",
                        "description": "End time of the exposure, in ISO 8601 UTC format.",
                        "format": "date-time",
                        "example": "2021-01-01T01:01:01.123Z"
                    },
                    "imageSourceInfo": {
                        "maxLength": 100,
                        "minLength": 0,
                        "type": "string",
                        "description": "String that uniquely identifies the data source.",
                        "example": "imageSourceInfo"
                    },
                    "topLeftStartAz": {
                        "type": "number",
                        "description": "The telescope pointing azimuth, in degrees, at the exposure\nstart epoch.",
                        "format": "double",
                        "example": 146.321
                    },
                    "topLeftStartEl": {
                        "type": "number",
                        "description": "The telescope pointing elevation, in degrees, at the exposure\nstart epoch.",
                        "format": "double",
                        "example": 146.321
                    },
                    "topLeftStopAz": {
                        "type": "number",
                        "description": "The telescope pointing azimuth, in degrees, at the exposure\nstop epoch.",
                        "format": "double",
                        "example": 3.7
                    },
                    "topLeftStopEl": {
                        "type": "number",
                        "description": "The telescope pointing elevation, in degrees, at the exposure\nstop epoch.",
                        "format": "double",
                        "example": 34.233
                    },
                    "imageSetId": {
                        "maxLength": 36,
                        "minLength": 0,
                        "type": "string",
                        "description": "The user-defined set ID of a sequene of images.",
                        "example": "imageSetId"
                    },
                    "imageSetLength": {
                        "type": "integer",
                        "description": "The number of images in an image set.",
                        "format": "int32",
                        "example": 9
                    },
                    "sequenceId": {
                        "type": "integer",
                        "description": "The sequence ID of an image within an image set.",
                        "format": "int32",
                        "example": 1
                    },
                    "frameFOVWidth": {
                        "type": "number",
                        "description": "Field Of View frame width, in degrees.",
                        "format": "double",
                        "example": 21.23
                    },
                    "frameFOVHeight": {
                        "type": "number",
                        "description": "Field Of View frame height, in degrees.",
                        "format": "double",
                        "example": 21.23
                    },
                    "pixelFOVWidth": {
                        "type": "number",
                        "description": "Field Of View pixel width, in degrees.",
                        "format": "double",
                        "example": 321.123
                    },
                    "pixelFOVHeight": {
                        "type": "number",
                        "description": "Field Of View pixel height, in degrees.",
                        "format": "double",
                        "example": 321.123
                    },
                    "frameWidthPixels": {
                        "type": "integer",
                        "description": "Frame width of the image, in number of pixels.",
                        "format": "int32",
                        "example": 1
                    },
                    "frameHeightPixels": {
                        "type": "integer",
                        "description": "Frame height of the image, in number of pixels.",
                        "format": "int32",
                        "example": 1
                    },
                    "pixelBitDepth": {
                        "type": "integer",
                        "description": "Bit depth of the image, in number of pixels.",
                        "format": "int32",
                        "example": 1
                    },
                    "annotationKey": {
                        "maxLength": 128,
                        "minLength": 0,
                        "type": "string",
                        "description": "Reference to an annotation document associated with this image.",
                        "example": "annotationKey"
                    },
                    "calibrationKey": {
                        "maxLength": 128,
                        "minLength": 0,
                        "type": "string",
                        "description": "Reference to a calibration document associated with this image.",
                        "example": "calibrationKey"
                    },
                    "filename": {
                        "maxLength": 128,
                        "minLength": 0,
                        "type": "string",
                        "description": "Name of the uploaded image file.",
                        "example": "filename.jpg"
                    },
                    "filesize": {
                        "type": "integer",
                        "description": "Size of the image file, in bytes.",
                        "format": "int64",
                        "example": 371945
                    },
                    "checksumValue": {
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string",
                        "description": "MD5 value of the file. The ingest/create operation will automatically\ngenerate the value.",
                        "readOnly": true,
                        "example": "checksumValue"
                    },
                    "transactionId": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional identifier to track a commercial or marketplace transaction\nexecuted to produce this data.",
                        "example": "a7bdef1f-5a4f-4716-bee4-7a1e0ec7d35a"
                    },
                    "source": {
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string",
                        "description": "Source of the data.",
                        "example": "Bluestaq"
                    },
                    "origin": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "Originating system or organization which produced the data,\nif different from the source. The origin may be different than the source\nif the source was a mediating system which forwarded the data on behalf\nof the origin system. If null, the source may be assumed to be the origin.",
                        "example": "THIRD_PARTY_DATASOURCE"
                    },
                    "origNetwork": {
                        "maxLength": 32,
                        "minLength": 0,
                        "type": "string",
                        "description": "The originating source network on which this record was created,\nauto-populated by the system.",
                        "readOnly": true,
                        "example": "ORIG"
                    },
                    "sourceDL": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string",
                        "description": "The source data library from which this record was received.\nThis could be a remote or tactical UDL or another data library. If null,\nthe record should be assumed to have originated from the primary Enterprise\nUDL.",
                        "readOnly": true,
                        "example": "AXE"
                    },
                    "description": {
                        "maxLength": 2147483647,
                        "minLength": 0,
                        "type": "string",
                        "description": "Optional name/description associated with this image.",
                        "example": "description"
                    },
                    "dataMode": {
                        "type": "string",
                        "description": "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\n\n",
                        "example": "TEST",
                        "enum": [
                            "REAL",
                            "TEST",
                            "SIMULATED",
                            "EXERCISE"
                        ]
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Time the row was created in the database, auto-populated by\nthe system.",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2018-01-01T16:00:00.123Z"
                    },
                    "createdBy": {
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string",
                        "description": "Application user who created the row in the database, auto-populated\nby the system.",
                        "readOnly": true,
                        "example": "some.user"
                    }
                },
                "description": "Model representation of sky imagery data.  Sky imagery is ground\nor space based telescope imagery of RSO's and includes metadata on the image\n(time, source, etc) as well as binary image content (e.g. FITS, EOSSA, EOCHIP)\n. Binary content must be downloaded individually by ID using the 'getFile'\noperation.",
                "example": {
                    "expStartTime": "2021-01-01T01:01:01.123Z",
                    "frameWidthPixels": 1,
                    "senlat": -33.283048,
                    "pixelFOVHeight": 321.123,
                    "satNo": 25544,
                    "idOnOrbit": "44920",
                    "origin": "THIRD_PARTY_DATASOURCE",
                    "topLeftStartAz": 146.321,
                    "pixelFOVWidth": 321.123,
                    "description": "description",
                    "annotationKey": "annotationKey",
                    "pixelBitDepth": 1,
                    "filesize": 371945,
                    "source": "Bluestaq",
                    "origSensorId": "origSensorId",
                    "senalt": 14.483619321,
                    "sequenceId": 1,
                    "origNetwork": "ORIG",
                    "frameFOVWidth": 21.23,
                    "frameHeightPixels": 1,
                    "createdAt": "2018-01-01T16:00:00.123Z",
                    "imageSetId": "imageSetId",
                    "expEndTime": "2021-01-01T01:01:01.123Z",
                    "imageSetLength": 9,
                    "idSensor": "420",
                    "id": "SKYIMAGERY-ID",
                    "topLeftStartEl": 146.321,
                    "classificationMarking": "U",
                    "imageType": "imageType",
                    "origObjectId": "X15-23452",
                    "topLeftStopEl": 34.233,
                    "seny": 32.41,
                    "senx": 14.52,
                    "senz": 376.12,
                    "frameFOVHeight": 21.23,
                    "transactionId": "a7bdef1f-5a4f-4716-bee4-7a1e0ec7d35a",
                    "senlon": 149.372549,
                    "imageSourceInfo": "imageSourceInfo",
                    "checksumValue": "checksumValue",
                    "dataMode": "TEST",
                    "topLeftStopAz": 3.7,
                    "filename": "filename.jpg",
                    "calibrationKey": "calibrationKey",
                    "sourceDL": "AXE",
                    "createdBy": "some.user"
                }
            }
        }
    }
}