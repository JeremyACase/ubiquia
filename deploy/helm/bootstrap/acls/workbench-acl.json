{
  "domain": "ubiquia-workbench",
  "version": {
    "major": 1,
    "minor": 0,
    "patch": 0
  },
  "modelType": "AgentCommunicationLanguage",
  "jsonSchema": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "Ubiquia Workbench",
    "type": "object",
    "definitions": {
      "SemanticVersion": {
        "description": "Semantic version object reused across models.",
        "type": "object",
        "required": [
          "major",
          "minor",
          "patch"
        ],
        "properties": {
          "major": {
            "type": "integer",
            "minimum": 0
          },
          "minor": {
            "type": "integer",
            "minimum": 0
          },
          "patch": {
            "type": "integer",
            "minimum": 0
          }
        },
        "additionalProperties": false
      },
      "UserPrompt": {
        "description": "User prompt from Workbench UI.",
        "type": "object",
        "required": [
          "userPrompt"
        ],
        "properties": {
          "userPrompt": {
            "type": "string",
            "maxLength": 2000,
            "description": "The natural-language prompt to send to the LLM."
          }
        },
        "additionalProperties": false
      },
      "LlamaInput": {
        "description": "Input payload for a Llama model request.",
        "type": "object",
        "required": [
          "model",
          "prompt"
        ],
        "properties": {
          "model": {
            "type": "string",
            "description": "The model identifier to invoke."
          },
          "stream": {
            "type": "boolean",
            "description": "Whether to stream output tokens."
          },
          "prompt": {
            "type": "string",
            "maxLength": 300000,
            "description": "The natural-language prompt to send to the LLM."
          }
        },
        "additionalProperties": true
      },
      "LlamaOutput": {
        "description": "Output from Llama LLM.",
        "type": "object",
        "required": [],
        "properties": {
          "model": {
            "type": "string",
            "minLength": 1,
            "description": "Model name, e.g., 'llama3.2'."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "RFC 3339 timestamp (e.g., '2025-08-30T01:38:00.342116838Z')."
          },
          "response": {
            "type": "string",
            "minLength": 1,
            "contentMediaType": "application/json",
            "description": "Model response text. If it contains JSON, it is encoded as a JSON string."
          },
          "done": {
            "type": "boolean",
            "description": "Whether generation is complete."
          },
          "done_reason": {
            "type": "string",
            "description": "Reason generation stopped (e.g., 'stop')."
          },
          "context": {
            "type": "array",
            "description": "Token context array.",
            "items": {
              "type": "integer",
              "minimum": 0
            }
          },
          "additionalProperties": false
        },
        "JsonSchema": {
          "description": "A JSON Schema Draft-07 document (object/boolean) or a string containing such a schema.",
          "type": "string",
          "minLength": 2,
          "maxLength": 200000
        }
      },
      "GeneratedAgentCommunicationLanguage": {
        "description": "Top-level ACL model.",
        "type": "object",
        "required": [
          "domain",
          "version",
          "jsonSchema"
        ],
        "properties": {
          "domain": {
            "type": "string",
            "maxLength": 120,
            "pattern": "^[a-zA-Z][a-zA-Z0-9\\-_.]{1,119}$",
            "description": "Domain namespace for this ACL."
          },
          "version": {
            "$ref": "#/definitions/SemanticVersion"
          },
          "jsonSchema": {
            "$ref": "#/definitions/JsonSchema"
          }
        },
        "additionalProperties": true
      }
    }
  }
}