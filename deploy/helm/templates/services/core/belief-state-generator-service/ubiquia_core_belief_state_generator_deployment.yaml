apiVersion: apps/v1
kind: Deployment
metadata:
  name: ubiquia-core-belief-state-generator-service
  labels:
    {{- include "ubiquia.labels" . | nindent 4 }}
    component: ubiquia-core-belief-state-generator-service
spec:
  {{- if not .Values.k8s.autoscaling.enabled }}
  replicas: 1
  {{- end }}
  selector:
    matchLabels:
      {{- include "ubiquia.selectorLabels" . | nindent 6 }}
      component: ubiquia-core-belief-state-generator-service

  template:
    metadata:
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/path: '/actuator/prometheus'
        prometheus.io/port: "{{ .Values.convenience.variables.spring.port }}"
      labels:
        {{- include "ubiquia.selectorLabels" . | nindent 8 }}
        {{- include "ubiquia.podLabels" . | nindent 8 }}
        component: ubiquia-core-belief-state-generator-service

    spec:
      {{- with .Values.infrastructure.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "ubiquia.serviceAccountName" . }}

      nodeSelector:
        kubernetes.io/hostname: ubiquia-agent-0-control-plane

      tolerations:
        - key: "node.kubernetes.io/not-ready"
          operator: "Exists"
          effect: "NoSchedule"
        - key: "node.kubernetes.io/unreachable"
          operator: "Exists"
          effect: "NoExecute"

      volumes:
        - name: config
          configMap:
            name: ubiquia-core-belief-state-generator-config
        - name: belief-state-jars-volume
          persistentVolumeClaim:
            claimName: ubiquia-core-belief-state-generator-service-belief-state-jars-pvc

      containers:
        - name: flow-service
          image: {{ include "ubiquia.core.beliefStateGeneratorService.image" . }}
          imagePullPolicy: {{ .Values.infrastructure.image.pullPolicy }}

          volumeMounts:
            - name: config
              mountPath: /app/etc
            - name: belief-state-jars-volume
              mountPath: /belief-state-jars

          ports:
            - name: http
              containerPort: {{ .Values.convenience.variables.spring.port }}
              protocol: TCP

          livenessProbe:
            httpGet:
              path: /actuator/health
              port: {{ .Values.convenience.variables.spring.port }}
            initialDelaySeconds: 60
